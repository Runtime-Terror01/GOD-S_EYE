{"version":3,"mappings":"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","names":["t","config","ref","comfyApp","BadgeVariant","_sfc_render","_sfc_main","node","compare","releaseStore","PuzzleIcon","options","value","graph","modelValue","_","widget","ContextMenu","position","useReleaseStore","useToast","items","state","_openBlock","_createElementBlock","_hoisted_1","DIALOG_KEY","SampleModelSelector","templates","workflowName","WorkflowTemplateSelectorDialog","canvasStore","LatentPreviewMethod","LogLevel","HashFunction","CudaMalloc","FloatingPointPrecision","CrossAttentionMethod","VramManagement","valid","gt"],"ignoreList":[],"sources":["../../src/base/common/async.ts","../../src/components/MenuHamburger.vue","../../src/components/dialog/UnloadWindowConfirmDialog.vue","../../src/components/LiteGraphCanvasSplitterOverlay.vue","../../src/components/common/ExtensionSlot.vue","../../src/components/bottomPanel/BottomPanel.vue","../../src/composables/element/useAbsolutePosition.ts","../../src/composables/element/useDomClipping.ts","../../src/components/graph/widgets/DomWidget.vue","../../src/components/graph/DomWidgets.vue","../../src/composables/useZoomControls.ts","../../src/renderer/extensions/minimap/composables/useMinimapGraph.ts","../../src/renderer/extensions/minimap/composables/useMinimapInteraction.ts","../../src/renderer/extensions/minimap/composables/useMinimapRenderer.ts","../../src/renderer/extensions/minimap/composables/useMinimapSettings.ts","../../src/renderer/extensions/minimap/composables/useMinimapViewport.ts","../../src/renderer/extensions/minimap/composables/useMinimap.ts","../../src/components/graph/modals/ZoomControlsModal.vue","../../src/components/graph/GraphCanvasMenu.vue","../../src/components/graph/NodeTooltip.vue","../../src/components/graph/selectionToolbox/BypassButton.vue","../../src/components/graph/selectionToolbox/ColorPickerButton.vue","../../src/utils/nodeFilterUtil.ts","../../src/composables/graph/useSelectionState.ts","../../src/components/graph/selectionToolbox/ConvertToSubgraphButton.vue","../../src/components/graph/selectionToolbox/DeleteButton.vue","../../src/components/graph/selectionToolbox/ExecuteButton.vue","../../src/components/graph/selectionToolbox/ExtensionCommandButton.vue","../../src/components/graph/selectionToolbox/InfoButton.vue","../../src/components/graph/selectionToolbox/Load3DViewerButton.vue","../../src/components/graph/selectionToolbox/MaskEditorButton.vue","../../src/composables/useRefreshableSelection.ts","../../src/components/graph/selectionToolbox/RefreshSelectionButton.vue","../../src/components/graph/selectionToolbox/SaveToSubgraphLibrary.vue","../../src/composables/canvas/useSelectionToolboxPosition.ts","../../src/composables/graph/useFrameNodes.ts","../../src/components/graph/selectionToolbox/FrameNodes.vue","../../src/composables/graph/useCanvasRefresh.ts","../../src/composables/graph/useNodeCustomization.ts","../../src/composables/graph/useGroupMenuOptions.ts","../../src/composables/graph/useImageMenuOptions.ts","../../src/composables/graph/useSelectedNodeActions.ts","../../src/composables/graph/useNodeMenuOptions.ts","../../src/composables/graph/useNodeArrangement.ts","../../src/composables/graph/useSelectionOperations.ts","../../src/composables/graph/useSubgraphOperations.ts","../../src/composables/graph/useSelectionMenuOptions.ts","../../src/composables/graph/useMoreOptionsMenu.ts","../../src/components/graph/selectionToolbox/NodeOptionsButton.vue","../../src/components/graph/selectionToolbox/VerticalDivider.vue","../../src/components/graph/SelectionToolbox.vue","../../src/components/graph/TitleEditor.vue","../../src/composables/graph/useSubmenuPositioning.ts","../../src/components/graph/selectionToolbox/MenuOptionItem.vue","../../src/components/graph/selectionToolbox/SubmenuPopover.vue","../../src/components/graph/selectionToolbox/NodeOptions.vue","../../src/stores/workspace/searchBoxStore.ts","../../src/components/primevueOverride/AutoCompletePlus.vue","../../src/components/searchbox/NodeSearchItem.vue","../../src/components/searchbox/NodeSearchBox.vue","../../src/components/searchbox/NodeSearchBoxPopover.vue","../../src/components/sidebar/SidebarIcon.vue","../../src/components/sidebar/SidebarBottomPanelToggleButton.vue","../../src/components/sidebar/SidebarShortcutsToggleButton.vue","../../src/components/icons/PuzzleIcon.vue","../../src/platform/updates/common/releaseService.ts","../../src/platform/updates/common/releaseStore.ts","../../src/components/helpcenter/HelpCenterMenuContent.vue","../../src/platform/updates/components/ReleaseNotificationToast.vue","../../src/platform/updates/components/WhatsNewPopup.vue","../../src/stores/helpCenterStore.ts","../../src/components/sidebar/SidebarHelpCenterIcon.vue","../../src/components/sidebar/SidebarLogoutIcon.vue","../../src/components/sidebar/SidebarTemplatesButton.vue","../../src/components/sidebar/SideToolbar.vue","../../src/components/topbar/WorkflowTabPopover.vue","../../src/components/topbar/WorkflowTab.vue","../../src/composables/element/useOverflowObserver.ts","../../src/utils/mouseDownUtil.ts","../../src/components/topbar/WorkflowOverflowMenu.vue","../../src/components/topbar/WorkflowTabs.vue","../../src/composables/graph/useGraphNodeManager.ts","../../src/renderer/core/layout/sync/useLayoutSync.ts","../../src/renderer/core/layout/sync/useLinkLayoutSync.ts","../../src/renderer/core/layout/slots/register.ts","../../src/renderer/core/layout/sync/useSlotLayoutSync.ts","../../src/composables/graph/useVueNodeLifecycle.ts","../../src/composables/graph/useViewportCulling.ts","../../src/composables/node/useNodePricing.ts","../../src/composables/node/useWatchWidget.ts","../../src/composables/node/useNodeBadge.ts","../../src/composables/useCanvasDrop.ts","../../src/composables/useContextMenuTranslation.ts","../../src/composables/useCopy.ts","../../src/composables/useGlobalLitegraph.ts","../../src/composables/usePaste.ts","../../src/platform/settings/composables/useLitegraphSettings.ts","../../src/platform/settings/constants/coreSettings.ts","../../src/platform/workflow/persistence/composables/useWorkflowAutoSave.ts","../../src/platform/workflow/persistence/composables/useWorkflowPersistence.ts","../../src/renderer/core/canvas/links/slotLinkPreviewRenderer.ts","../../src/renderer/core/layout/injectionKeys.ts","../../src/renderer/core/layout/transform/useTransformSettling.ts","../../src/renderer/core/layout/transform/useTransformState.ts","../../src/renderer/extensions/vueNodes/lod/useLOD.ts","../../src/renderer/core/layout/transform/TransformPane.vue","../../src/renderer/extensions/minimap/MiniMap.vue","../../src/renderer/extensions/vueNodes/composables/useNodeZIndex.ts","../../src/renderer/extensions/vueNodes/composables/useNodeEventHandlers.ts","../../src/renderer/extensions/vueNodes/layout/useNodeLayout.ts","../../src/renderer/extensions/vueNodes/composables/useNodePointerInteractions.ts","../../src/renderer/extensions/vueNodes/composables/useVueNodeResizeTracking.ts","../../src/renderer/extensions/vueNodes/execution/useNodeExecutionState.ts","../../src/renderer/extensions/vueNodes/preview/useNodePreviewState.ts","../../src/renderer/extensions/vueNodes/components/LGraphNode.vue","../../src/services/newUserService.ts","../../src/components/graph/GraphCanvas.vue","../../src/components/toast/GlobalToast.vue","../../src/components/toast/RerouteMigrationToast.vue","../../src/components/actionbar/BatchCountEdit.vue","../../src/components/actionbar/ComfyQueueButton.vue","../../src/components/actionbar/ComfyActionbar.vue","../../src/components/breadcrumb/SubgraphBreadcrumbItem.vue","../../src/components/breadcrumb/SubgraphBreadcrumb.vue","../../src/components/topbar/CommandMenubar.vue","../../src/components/topbar/CurrentUserPopover.vue","../../src/components/topbar/CurrentUserButton.vue","../../src/components/topbar/TopMenubar.vue","../../src/composables/useBrowserTabTitle.ts","../../src/components/button/MoreButton.vue","../../src/components/card/CardBottom.vue","../../src/components/card/CardContainer.vue","../../src/components/card/CardTop.vue","../../src/components/widget/panel/RightSidePanel.vue","../../src/components/widget/SampleModelSelector.vue","../../src/composables/useModelSelectorDialog.ts","../../../../../../../assets/images/default-template.png","../../src/components/templates/thumbnails/BaseThumbnail.vue","../../src/composables/useIntersectionObserver.ts","../../src/services/mediaCacheService.ts","../../src/components/common/LazyImage.vue","../../src/components/templates/thumbnails/CompareSliderThumbnail.vue","../../src/components/templates/thumbnails/DefaultThumbnail.vue","../../src/components/templates/thumbnails/HoverDissolveThumbnail.vue","../../src/composables/useLazyPagination.ts","../../src/composables/useTemplateFiltering.ts","../../src/utils/categoryIcons.ts","../../src/platform/workflow/templates/repositories/workflowTemplatesStore.ts","../../src/platform/workflow/templates/composables/useTemplateWorkflows.ts","../../src/components/custom/widget/WorkflowTemplateSelectorDialog.vue","../../src/composables/useWorkflowTemplateSelectorDialog.ts","../../src/composables/useCoreCommands.ts","../../src/composables/useProgressFavicon.ts","../../src/types/serverArgs.ts","../../src/constants/serverConfig.ts","../../src/platform/updates/common/versionCompatibilityStore.ts","../../src/platform/updates/common/useFrontendVersionMismatchWarning.ts","../../src/services/autoQueueService.ts","../../src/views/GraphView.vue"],"sourcesContent":["/**\n * Cross-browser async utilities for scheduling tasks during browser idle time\n * with proper fallbacks for browsers that don't support requestIdleCallback.\n *\n * Implementation based on:\n * https://github.com/microsoft/vscode/blob/main/src/vs/base/common/async.ts\n */\n\ninterface IdleDeadline {\n  didTimeout: boolean\n  timeRemaining(): number\n}\n\ninterface IDisposable {\n  dispose(): void\n}\n\n/**\n * Internal implementation function that handles the actual scheduling logic.\n * Uses feature detection to determine whether to use native requestIdleCallback\n * or fall back to setTimeout-based implementation.\n */\nlet _runWhenIdle: (\n  targetWindow: any,\n  callback: (idle: IdleDeadline) => void,\n  timeout?: number\n) => IDisposable\n\n/**\n * Execute the callback during the next browser idle period.\n * Falls back to setTimeout-based scheduling in browsers without native support.\n */\nexport let runWhenGlobalIdle: (\n    callback: (idle: IdleDeadline) => void,\n    timeout?: number\n  ) => IDisposable\n\n  // Self-invoking function to set up the idle callback implementation\n;(function () {\n  const safeGlobal: any = globalThis\n\n  if (\n    typeof safeGlobal.requestIdleCallback !== 'function' ||\n    typeof safeGlobal.cancelIdleCallback !== 'function'\n  ) {\n    // Fallback implementation for browsers without native support (e.g., Safari)\n    _runWhenIdle = (_targetWindow, runner, _timeout?) => {\n      setTimeout(() => {\n        if (disposed) {\n          return\n        }\n\n        // Simulate IdleDeadline - give 15ms window (one frame at ~64fps)\n        const end = Date.now() + 15\n        const deadline: IdleDeadline = {\n          didTimeout: true,\n          timeRemaining() {\n            return Math.max(0, end - Date.now())\n          }\n        }\n\n        runner(Object.freeze(deadline))\n      })\n\n      let disposed = false\n      return {\n        dispose() {\n          if (disposed) {\n            return\n          }\n          disposed = true\n        }\n      }\n    }\n  } else {\n    // Native requestIdleCallback implementation\n    _runWhenIdle = (targetWindow: typeof safeGlobal, runner, timeout?) => {\n      const handle: number = targetWindow.requestIdleCallback(\n        runner,\n        typeof timeout === 'number' ? { timeout } : undefined\n      )\n\n      let disposed = false\n      return {\n        dispose() {\n          if (disposed) {\n            return\n          }\n          disposed = true\n          targetWindow.cancelIdleCallback(handle)\n        }\n      }\n    }\n  }\n\n  runWhenGlobalIdle = (runner, timeout) =>\n    _runWhenIdle(globalThis, runner, timeout)\n})()\n","<template>\n  <div\n    v-show=\"workspaceState.focusMode\"\n    class=\"comfy-menu-hamburger no-drag\"\n    :style=\"positionCSS\"\n  >\n    <Button\n      v-tooltip=\"{ value: $t('menu.showMenu'), showDelay: 300 }\"\n      icon=\"pi pi-bars\"\n      severity=\"secondary\"\n      text\n      size=\"large\"\n      :aria-label=\"$t('menu.showMenu')\"\n      aria-live=\"assertive\"\n      @click=\"exitFocusMode\"\n      @contextmenu=\"showNativeSystemMenu\"\n    />\n    <div v-show=\"menuSetting !== 'Bottom'\" class=\"window-actions-spacer\" />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport Button from 'primevue/button'\nimport type { CSSProperties } from 'vue'\nimport { computed, watchEffect } from 'vue'\n\nimport { useSettingStore } from '@/platform/settings/settingStore'\nimport { app } from '@/scripts/app'\nimport { useWorkspaceStore } from '@/stores/workspaceStore'\nimport { showNativeSystemMenu } from '@/utils/envUtil'\n\nconst workspaceState = useWorkspaceStore()\nconst settingStore = useSettingStore()\nconst exitFocusMode = () => {\n  workspaceState.focusMode = false\n}\n\nwatchEffect(() => {\n  if (settingStore.get('Comfy.UseNewMenu') !== 'Disabled') {\n    return\n  }\n  if (workspaceState.focusMode) {\n    app.ui.menuContainer.style.display = 'none'\n  } else {\n    app.ui.menuContainer.style.display = 'block'\n  }\n})\n\nconst menuSetting = computed(() => settingStore.get('Comfy.UseNewMenu'))\nconst positionCSS = computed<CSSProperties>(() =>\n  // 'Bottom' menuSetting shows the hamburger button in the bottom right corner\n  // 'Disabled', 'Top' menuSetting shows the hamburger button in the top right corner\n  menuSetting.value === 'Bottom'\n    ? { bottom: '0px', right: '0px' }\n    : { top: '0px', right: '0px' }\n)\n</script>\n\n<style scoped>\n@reference '../assets/css/style.css';\n\n.comfy-menu-hamburger {\n  @apply fixed z-9999 flex flex-row;\n}\n</style>\n","<template>\n  <div>\n    <!--\n    UnloadWindowConfirmDialog: This component does not render\n    anything visible. It is used to confirm the user wants to\n    close the window, and if they do, it will call the\n    beforeunload event.\n    -->\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { onBeforeUnmount, onMounted } from 'vue'\n\nimport { useSettingStore } from '@/platform/settings/settingStore'\nimport { useWorkflowStore } from '@/platform/workflow/management/stores/workflowStore'\n\nconst settingStore = useSettingStore()\nconst workflowStore = useWorkflowStore()\n\nconst handleBeforeUnload = (event: BeforeUnloadEvent) => {\n  if (\n    settingStore.get('Comfy.Window.UnloadConfirmation') &&\n    workflowStore.modifiedWorkflows.length > 0\n  ) {\n    event.preventDefault()\n    return true\n  }\n  return undefined\n}\n\nonMounted(() => {\n  window.addEventListener('beforeunload', handleBeforeUnload)\n})\n\nonBeforeUnmount(() => {\n  window.removeEventListener('beforeunload', handleBeforeUnload)\n})\n</script>\n","<template>\n  <Splitter\n    :key=\"sidebarStateKey\"\n    class=\"splitter-overlay-root splitter-overlay\"\n    :pt:gutter=\"sidebarPanelVisible ? '' : 'hidden'\"\n    :state-key=\"sidebarStateKey\"\n    state-storage=\"local\"\n  >\n    <SplitterPanel\n      v-show=\"sidebarPanelVisible\"\n      v-if=\"sidebarLocation === 'left'\"\n      class=\"side-bar-panel\"\n      :min-size=\"10\"\n      :size=\"20\"\n    >\n      <slot name=\"side-bar-panel\" />\n    </SplitterPanel>\n\n    <SplitterPanel :size=\"100\">\n      <Splitter\n        class=\"splitter-overlay max-w-full\"\n        layout=\"vertical\"\n        :pt:gutter=\"bottomPanelVisible ? '' : 'hidden'\"\n        state-key=\"bottom-panel-splitter\"\n        state-storage=\"local\"\n      >\n        <SplitterPanel class=\"graph-canvas-panel relative\">\n          <slot name=\"graph-canvas-panel\" />\n        </SplitterPanel>\n        <SplitterPanel v-show=\"bottomPanelVisible\" class=\"bottom-panel\">\n          <slot name=\"bottom-panel\" />\n        </SplitterPanel>\n      </Splitter>\n    </SplitterPanel>\n\n    <SplitterPanel\n      v-show=\"sidebarPanelVisible\"\n      v-if=\"sidebarLocation === 'right'\"\n      class=\"side-bar-panel\"\n      :min-size=\"10\"\n      :size=\"20\"\n    >\n      <slot name=\"side-bar-panel\" />\n    </SplitterPanel>\n  </Splitter>\n</template>\n\n<script setup lang=\"ts\">\nimport Splitter from 'primevue/splitter'\nimport SplitterPanel from 'primevue/splitterpanel'\nimport { computed } from 'vue'\n\nimport { useSettingStore } from '@/platform/settings/settingStore'\nimport { useBottomPanelStore } from '@/stores/workspace/bottomPanelStore'\nimport { useSidebarTabStore } from '@/stores/workspace/sidebarTabStore'\n\nconst settingStore = useSettingStore()\nconst sidebarLocation = computed<'left' | 'right'>(() =>\n  settingStore.get('Comfy.Sidebar.Location')\n)\n\nconst unifiedWidth = computed(() =>\n  settingStore.get('Comfy.Sidebar.UnifiedWidth')\n)\n\nconst sidebarPanelVisible = computed(\n  () => useSidebarTabStore().activeSidebarTab !== null\n)\nconst bottomPanelVisible = computed(\n  () => useBottomPanelStore().bottomPanelVisible\n)\nconst activeSidebarTabId = computed(\n  () => useSidebarTabStore().activeSidebarTabId\n)\n\nconst sidebarStateKey = computed(() => {\n  return unifiedWidth.value ? 'unified-sidebar' : activeSidebarTabId.value ?? ''\n})\n</script>\n\n<style scoped>\n@reference '../assets/css/style.css';\n\n:deep(.p-splitter-gutter) {\n  pointer-events: auto;\n}\n\n:deep(.p-splitter-gutter:hover),\n:deep(.p-splitter-gutter[data-p-gutter-resizing='true']) {\n  transition: background-color 0.2s ease 300ms;\n  background-color: var(--p-primary-color);\n}\n\n.side-bar-panel {\n  background-color: var(--bg-color);\n  pointer-events: auto;\n}\n\n.bottom-panel {\n  background-color: var(--bg-color);\n  pointer-events: auto;\n}\n\n.splitter-overlay {\n  @apply bg-transparent pointer-events-none border-none;\n}\n\n.splitter-overlay-root {\n  @apply w-full h-full absolute top-0 left-0;\n\n  /* Set it the same as the ComfyUI menu */\n  /* Note: Lite-graph DOM widgets have the same z-index as the node id, so\n  999 should be sufficient to make sure splitter overlays on node's DOM\n  widgets */\n  z-index: 999;\n}\n</style>\n","<template>\n  <component :is=\"extension.component\" v-if=\"extension.type === 'vue'\" />\n  <div\n    v-else\n    :ref=\"\n      (el) => {\n        if (el)\n          mountCustomExtension(\n            props.extension as CustomExtension,\n            el as HTMLElement\n          )\n      }\n    \"\n  />\n</template>\n\n<script setup lang=\"ts\">\nimport { onBeforeUnmount } from 'vue'\n\nimport type { CustomExtension, VueExtension } from '@/types/extensionTypes'\n\nconst props = defineProps<{\n  extension: VueExtension | CustomExtension\n}>()\n\nconst mountCustomExtension = (extension: CustomExtension, el: HTMLElement) => {\n  extension.render(el)\n}\n\nonBeforeUnmount(() => {\n  if (props.extension.type === 'custom' && props.extension.destroy) {\n    props.extension.destroy()\n  }\n})\n</script>\n","<template>\n  <div class=\"flex flex-col h-full\">\n    <Tabs\n      :key=\"$i18n.locale\"\n      v-model:value=\"bottomPanelStore.activeBottomPanelTabId\"\n    >\n      <TabList pt:tab-list=\"border-none\">\n        <div class=\"w-full flex justify-between\">\n          <div class=\"tabs-container\">\n            <Tab\n              v-for=\"tab in bottomPanelStore.bottomPanelTabs\"\n              :key=\"tab.id\"\n              :value=\"tab.id\"\n              class=\"p-3 border-none\"\n            >\n              <span class=\"font-bold\">\n                {{ getTabDisplayTitle(tab) }}\n              </span>\n            </Tab>\n          </div>\n          <div class=\"flex items-center gap-2\">\n            <Button\n              v-if=\"isShortcutsTabActive\"\n              :label=\"$t('shortcuts.manageShortcuts')\"\n              icon=\"pi pi-cog\"\n              severity=\"secondary\"\n              size=\"small\"\n              text\n              @click=\"openKeybindingSettings\"\n            />\n            <Button\n              class=\"justify-self-end\"\n              icon=\"pi pi-times\"\n              severity=\"secondary\"\n              size=\"small\"\n              text\n              @click=\"closeBottomPanel\"\n            />\n          </div>\n        </div>\n      </TabList>\n    </Tabs>\n    <!-- h-0 to force the div to grow -->\n    <div class=\"grow h-0\">\n      <ExtensionSlot\n        v-if=\"\n          bottomPanelStore.bottomPanelVisible &&\n          bottomPanelStore.activeBottomPanelTab\n        \"\n        :extension=\"bottomPanelStore.activeBottomPanelTab\"\n      />\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport Button from 'primevue/button'\nimport Tab from 'primevue/tab'\nimport TabList from 'primevue/tablist'\nimport Tabs from 'primevue/tabs'\nimport { computed } from 'vue'\nimport { useI18n } from 'vue-i18n'\n\nimport ExtensionSlot from '@/components/common/ExtensionSlot.vue'\nimport { useDialogService } from '@/services/dialogService'\nimport { useBottomPanelStore } from '@/stores/workspace/bottomPanelStore'\nimport type { BottomPanelExtension } from '@/types/extensionTypes'\n\nconst bottomPanelStore = useBottomPanelStore()\nconst dialogService = useDialogService()\nconst { t } = useI18n()\n\nconst isShortcutsTabActive = computed(() => {\n  const activeTabId = bottomPanelStore.activeBottomPanelTabId\n  return (\n    activeTabId === 'shortcuts-essentials' ||\n    activeTabId === 'shortcuts-view-controls'\n  )\n})\n\nconst shouldCapitalizeTab = (tabId: string): boolean => {\n  return tabId !== 'shortcuts-essentials' && tabId !== 'shortcuts-view-controls'\n}\n\nconst getTabDisplayTitle = (tab: BottomPanelExtension): string => {\n  const title = tab.titleKey ? t(tab.titleKey) : tab.title || ''\n  return shouldCapitalizeTab(tab.id) ? title.toUpperCase() : title\n}\n\nconst openKeybindingSettings = async () => {\n  dialogService.showSettingsDialog('keybinding')\n}\n\nconst closeBottomPanel = () => {\n  bottomPanelStore.activePanel = null\n}\n</script>\n","import type { CSSProperties } from 'vue'\nimport { ref, watch } from 'vue'\n\nimport { useCanvasPositionConversion } from '@/composables/element/useCanvasPositionConversion'\nimport type { Size, Vector2 } from '@/lib/litegraph/src/litegraph'\nimport { useSettingStore } from '@/platform/settings/settingStore'\nimport { useCanvasStore } from '@/renderer/core/canvas/canvasStore'\n\nexport interface PositionConfig {\n  /* The position of the element on litegraph canvas */\n  pos: Vector2\n  /* The size of the element on litegraph canvas */\n  size: Size\n  /* The scale factor of the canvas */\n  scale?: number\n}\n\nexport function useAbsolutePosition(options: { useTransform?: boolean } = {}) {\n  const { useTransform = false } = options\n\n  const canvasStore = useCanvasStore()\n  const lgCanvas = canvasStore.getCanvas()\n  const { canvasPosToClientPos, update: updateCanvasPosition } =\n    useCanvasPositionConversion(lgCanvas.canvas, lgCanvas)\n\n  const settingStore = useSettingStore()\n  watch(\n    [\n      () => settingStore.get('Comfy.Sidebar.Location'),\n      () => settingStore.get('Comfy.Sidebar.Size'),\n      () => settingStore.get('Comfy.UseNewMenu')\n    ],\n    () => updateCanvasPosition(),\n    { flush: 'post' }\n  )\n\n  /**\n   * @note Do NOT convert style to a computed value, as it will cause lag when\n   * updating the style on different animation frames. Vue's computed value is\n   * evaluated asynchronously.\n   */\n  const style = ref<CSSProperties>({})\n\n  /**\n   * Compute the style of the element based on the position and size.\n   *\n   * @param position\n   */\n  const computeStyle = (position: PositionConfig): CSSProperties => {\n    const { pos, size, scale = lgCanvas.ds.scale } = position\n    const [left, top] = canvasPosToClientPos(pos)\n    const [width, height] = size\n\n    return useTransform\n      ? {\n          position: 'fixed',\n          transformOrigin: '0 0',\n          transform: `scale(${scale})`,\n          left: `${left}px`,\n          top: `${top}px`,\n          width: `${width}px`,\n          height: `${height}px`\n        }\n      : {\n          position: 'fixed',\n          left: `${left}px`,\n          top: `${top}px`,\n          width: `${width * scale}px`,\n          height: `${height * scale}px`\n        }\n  }\n\n  /**\n   * Update the position of the element on the litegraph canvas.\n   *\n   * @param config\n   */\n  const updatePosition = (config: PositionConfig) => {\n    style.value = computeStyle(config)\n  }\n\n  return {\n    style,\n    updatePosition\n  }\n}\n","import type { CSSProperties } from 'vue'\nimport { ref } from 'vue'\n\ninterface Rect {\n  x: number\n  y: number\n  width: number\n  height: number\n}\n\n/**\n * Finds the intersection between two rectangles\n */\nfunction intersect(a: Rect, b: Rect): [number, number, number, number] | null {\n  const x1 = Math.max(a.x, b.x)\n  const y1 = Math.max(a.y, b.y)\n  const x2 = Math.min(a.x + a.width, b.x + b.width)\n  const y2 = Math.min(a.y + a.height, b.y + b.height)\n\n  if (x1 >= x2 || y1 >= y2) {\n    return null\n  }\n\n  return [x1, y1, x2 - x1, y2 - y1]\n}\n\ninterface ClippingOptions {\n  margin?: number\n}\n\nexport const useDomClipping = (options: ClippingOptions = {}) => {\n  const style = ref<CSSProperties>({})\n  const { margin = 4 } = options\n\n  /**\n   * Calculates a clip path for an element based on its intersection with a selected area\n   */\n  const calculateClipPath = (\n    elementRect: DOMRect,\n    canvasRect: DOMRect,\n    isSelected: boolean,\n    selectedArea?: {\n      x: number\n      y: number\n      width: number\n      height: number\n      scale: number\n      offset: [number, number]\n    }\n  ): string => {\n    if (!isSelected && selectedArea) {\n      const { scale, offset } = selectedArea\n\n      // Get intersection in browser space\n      const intersection = intersect(\n        {\n          x: elementRect.left - canvasRect.left,\n          y: elementRect.top - canvasRect.top,\n          width: elementRect.width,\n          height: elementRect.height\n        },\n        {\n          x: (selectedArea.x + offset[0] - margin) * scale,\n          y: (selectedArea.y + offset[1] - margin) * scale,\n          width: (selectedArea.width + 2 * margin) * scale,\n          height: (selectedArea.height + 2 * margin) * scale\n        }\n      )\n\n      if (!intersection) {\n        return ''\n      }\n\n      // Convert intersection to canvas scale (element has scale transform)\n      const clipX =\n        (intersection[0] - elementRect.left + canvasRect.left) / scale + 'px'\n      const clipY =\n        (intersection[1] - elementRect.top + canvasRect.top) / scale + 'px'\n      const clipWidth = intersection[2] / scale + 'px'\n      const clipHeight = intersection[3] / scale + 'px'\n\n      return `polygon(0% 0%, 0% 100%, ${clipX} 100%, ${clipX} ${clipY}, calc(${clipX} + ${clipWidth}) ${clipY}, calc(${clipX} + ${clipWidth}) calc(${clipY} + ${clipHeight}), ${clipX} calc(${clipY} + ${clipHeight}), ${clipX} 100%, 100% 100%, 100% 0%)`\n    }\n\n    return ''\n  }\n\n  /**\n   * Updates the clip-path style based on element and selection information\n   */\n  const updateClipPath = (\n    element: HTMLElement,\n    canvasElement: HTMLCanvasElement,\n    isSelected: boolean,\n    selectedArea?: {\n      x: number\n      y: number\n      width: number\n      height: number\n      scale: number\n      offset: [number, number]\n    }\n  ) => {\n    const elementRect = element.getBoundingClientRect()\n    const canvasRect = canvasElement.getBoundingClientRect()\n\n    const clipPath = calculateClipPath(\n      elementRect,\n      canvasRect,\n      isSelected,\n      selectedArea\n    )\n\n    style.value = {\n      clipPath: clipPath || 'none',\n      willChange: 'clip-path'\n    }\n  }\n\n  return {\n    style,\n    updateClipPath\n  }\n}\n","<template>\n  <div\n    v-show=\"widgetState.visible\"\n    ref=\"widgetElement\"\n    class=\"dom-widget\"\n    :title=\"tooltip\"\n    :style=\"style\"\n  >\n    <component\n      :is=\"widget.component\"\n      v-if=\"isComponentWidget(widget)\"\n      :model-value=\"widget.value\"\n      :widget=\"widget\"\n      v-bind=\"widget.props\"\n      @update:model-value=\"emit('update:widgetValue', $event)\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { useElementBounding, useEventListener } from '@vueuse/core'\nimport type { CSSProperties } from 'vue'\nimport { computed, nextTick, onMounted, ref, watch } from 'vue'\n\nimport { useAbsolutePosition } from '@/composables/element/useAbsolutePosition'\nimport { useDomClipping } from '@/composables/element/useDomClipping'\nimport { useSettingStore } from '@/platform/settings/settingStore'\nimport { useCanvasStore } from '@/renderer/core/canvas/canvasStore'\nimport { isComponentWidget, isDOMWidget } from '@/scripts/domWidget'\nimport type { DomWidgetState } from '@/stores/domWidgetStore'\n\nconst { widgetState } = defineProps<{\n  widgetState: DomWidgetState\n}>()\nconst widget = widgetState.widget\n\nconst emit = defineEmits<{\n  'update:widgetValue': [value: string | object]\n}>()\n\nconst widgetElement = ref<HTMLElement | undefined>()\n\n/**\n * @note Do NOT convert style to a computed value, as it will cause lag when\n * updating the style on different animation frames. Vue's computed value is\n * evaluated asynchronously.\n */\nconst style = ref<CSSProperties>({})\nconst { style: positionStyle, updatePosition } = useAbsolutePosition({\n  useTransform: true\n})\nconst { style: clippingStyle, updateClipPath } = useDomClipping()\n\nconst canvasStore = useCanvasStore()\nconst settingStore = useSettingStore()\nconst enableDomClipping = computed(() =>\n  settingStore.get('Comfy.DOMClippingEnabled')\n)\n\nconst updateDomClipping = () => {\n  const lgCanvas = canvasStore.canvas\n  if (!lgCanvas || !widgetElement.value) return\n\n  const selectedNode = Object.values(lgCanvas.selected_nodes ?? {})[0]\n  if (!selectedNode) {\n    // Clear clipping when no node is selected\n    updateClipPath(widgetElement.value, lgCanvas.canvas, false, undefined)\n    return\n  }\n\n  const isSelected = selectedNode === widget.node\n  const renderArea = selectedNode?.renderArea\n  const offset = lgCanvas.ds.offset\n  const scale = lgCanvas.ds.scale\n  const selectedAreaConfig = renderArea\n    ? {\n        x: renderArea[0],\n        y: renderArea[1],\n        width: renderArea[2],\n        height: renderArea[3],\n        scale,\n        offset: [offset[0], offset[1]] as [number, number]\n      }\n    : undefined\n\n  updateClipPath(\n    widgetElement.value,\n    lgCanvas.canvas,\n    isSelected,\n    selectedAreaConfig\n  )\n}\n\n/**\n * @note mapping between canvas position and client position depends on the\n * canvas element's position, so we need to watch the canvas element's position\n * and update the position of the widget accordingly.\n */\nconst { left, top } = useElementBounding(canvasStore.getCanvas().canvas)\nwatch(\n  [() => widgetState, left, top],\n  ([widgetState, _, __]) => {\n    updatePosition(widgetState)\n    if (enableDomClipping.value) {\n      updateDomClipping()\n    }\n\n    style.value = {\n      ...positionStyle.value,\n      ...(enableDomClipping.value ? clippingStyle.value : {}),\n      zIndex: widgetState.zIndex,\n      pointerEvents:\n        widgetState.readonly || widget.computedDisabled ? 'none' : 'auto',\n      opacity: widget.computedDisabled ? 0.5 : 1\n    }\n  },\n  { deep: true }\n)\n\nwatch(\n  () => widgetState.visible,\n  (newVisible, oldVisible) => {\n    if (!newVisible && oldVisible) {\n      widget.options.onHide?.(widget)\n    }\n  }\n)\nuseEventListener(document, 'mousedown', (event) => {\n  if (!isDOMWidget(widget) || !widgetState.visible || !widget.element.blur) {\n    return\n  }\n  if (!widget.element.contains(event.target as HTMLElement)) {\n    widget.element.blur()\n  }\n})\n\nonMounted(() => {\n  if (!isDOMWidget(widget)) {\n    return\n  }\n  useEventListener(\n    widget.element,\n    widget.options.selectOn ?? ['focus', 'click'],\n    () => {\n      const lgCanvas = canvasStore.canvas\n      lgCanvas?.selectNode(widget.node)\n      lgCanvas?.bringToFront(widget.node)\n    }\n  )\n})\n\nconst inputSpec = widget.node.constructor.nodeData\nconst tooltip = inputSpec?.inputs?.[widget.name]?.tooltip\n\n// Mount DOM element when widget is or becomes visible\nconst mountElementIfVisible = () => {\n  if (!(widgetState.visible && isDOMWidget(widget) && widgetElement.value)) {\n    return\n  }\n  // Only append if not already a child\n  if (widgetElement.value.contains(widget.element)) {\n    return\n  }\n  widgetElement.value.appendChild(widget.element)\n}\n\n// Check on mount - but only after next tick to ensure visibility is calculated\nonMounted(() => {\n  nextTick(() => {\n    mountElementIfVisible()\n  }).catch((error) => {\n    console.error('Error mounting DOM widget element:', error)\n  })\n})\n\n// And watch for visibility changes\nwatch(\n  () => widgetState.visible,\n  () => {\n    mountElementIfVisible()\n  }\n)\n</script>\n\n<style scoped>\n@reference '../../../assets/css/style.css';\n\n.dom-widget > * {\n  @apply h-full w-full;\n}\n</style>\n","<template>\n  <!-- Create a new stacking context for widgets to avoid z-index issues -->\n  <div class=\"isolate\">\n    <DomWidget\n      v-for=\"widgetState in widgetStates\"\n      :key=\"widgetState.widget.id\"\n      :widget-state=\"widgetState\"\n      @update:widget-value=\"widgetState.widget.value = $event\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { whenever } from '@vueuse/core'\nimport { computed } from 'vue'\n\nimport DomWidget from '@/components/graph/widgets/DomWidget.vue'\nimport { useChainCallback } from '@/composables/functional/useChainCallback'\nimport { useCanvasStore } from '@/renderer/core/canvas/canvasStore'\nimport { useDomWidgetStore } from '@/stores/domWidgetStore'\n\nconst domWidgetStore = useDomWidgetStore()\n\nconst widgetStates = computed(() => [...domWidgetStore.widgetStates.values()])\n\nconst updateWidgets = () => {\n  const lgCanvas = canvasStore.canvas\n  if (!lgCanvas) return\n\n  const lowQuality = lgCanvas.low_quality\n  const currentGraph = lgCanvas.graph\n\n  for (const widgetState of widgetStates.value) {\n    const widget = widgetState.widget\n\n    // Early exit for non-visible widgets\n    if (!widget.isVisible() || !widgetState.active) {\n      widgetState.visible = false\n      continue\n    }\n\n    // Check if the widget's node is in the current graph\n    const node = widget.node\n    const isInCorrectGraph = currentGraph?.nodes.includes(node)\n\n    widgetState.visible =\n      !!isInCorrectGraph &&\n      lgCanvas.isNodeVisible(node) &&\n      !(widget.options.hideOnZoom && lowQuality)\n\n    if (widgetState.visible && node) {\n      const margin = widget.margin\n      widgetState.pos = [node.pos[0] + margin, node.pos[1] + margin + widget.y]\n      widgetState.size = [\n        (widget.width ?? node.width) - margin * 2,\n        (widget.computedHeight ?? 50) - margin * 2\n      ]\n      // TODO: optimize this logic as it's O(n), where n is the number of nodes\n      widgetState.zIndex = lgCanvas.graph?.nodes.indexOf(node) ?? -1\n      widgetState.readonly = lgCanvas.read_only\n    }\n  }\n}\n\nconst canvasStore = useCanvasStore()\nwhenever(\n  () => canvasStore.canvas,\n  (canvas) =>\n    (canvas.onDrawForeground = useChainCallback(\n      canvas.onDrawForeground,\n      updateWidgets\n    )),\n  { immediate: true }\n)\n</script>\n","import { computed, ref } from 'vue'\n\nexport function useZoomControls() {\n  const isModalVisible = ref(false)\n\n  const showModal = () => {\n    isModalVisible.value = true\n  }\n\n  const hideModal = () => {\n    isModalVisible.value = false\n  }\n\n  const toggleModal = () => {\n    isModalVisible.value = !isModalVisible.value\n  }\n\n  const hasActivePopup = computed(() => isModalVisible.value)\n\n  return {\n    isModalVisible,\n    showModal,\n    hideModal,\n    toggleModal,\n    hasActivePopup\n  }\n}\n","import { useThrottleFn } from '@vueuse/core'\nimport { ref, watch } from 'vue'\nimport type { Ref } from 'vue'\n\nimport type { LGraph, LGraphNode } from '@/lib/litegraph/src/litegraph'\nimport type { NodeId } from '@/platform/workflow/validation/schemas/workflowSchema'\nimport { layoutStore } from '@/renderer/core/layout/store/layoutStore'\nimport { api } from '@/scripts/api'\n\nimport { MinimapDataSourceFactory } from '../data/MinimapDataSourceFactory'\nimport type { UpdateFlags } from '../types'\n\ninterface GraphCallbacks {\n  onNodeAdded?: (node: LGraphNode) => void\n  onNodeRemoved?: (node: LGraphNode) => void\n  onConnectionChange?: (node: LGraphNode) => void\n}\n\nexport function useMinimapGraph(\n  graph: Ref<LGraph | null>,\n  onGraphChanged: () => void\n) {\n  const nodeStatesCache = new Map<NodeId, string>()\n  const linksCache = ref<string>('')\n  const lastNodeCount = ref(0)\n  const updateFlags = ref<UpdateFlags>({\n    bounds: false,\n    nodes: false,\n    connections: false,\n    viewport: false\n  })\n\n  // Track LayoutStore version for change detection\n  const layoutStoreVersion = layoutStore.getVersion()\n\n  // Map to store original callbacks per graph ID\n  const originalCallbacksMap = new Map<string, GraphCallbacks>()\n\n  const handleGraphChangedThrottled = useThrottleFn(() => {\n    onGraphChanged()\n  }, 500)\n\n  const setupEventListeners = () => {\n    const g = graph.value\n    if (!g) return\n\n    // Check if we've already wrapped this graph's callbacks\n    if (originalCallbacksMap.has(g.id)) {\n      return\n    }\n\n    // Store the original callbacks for this graph\n    const originalCallbacks: GraphCallbacks = {\n      onNodeAdded: g.onNodeAdded,\n      onNodeRemoved: g.onNodeRemoved,\n      onConnectionChange: g.onConnectionChange\n    }\n    originalCallbacksMap.set(g.id, originalCallbacks)\n\n    g.onNodeAdded = function (node: LGraphNode) {\n      originalCallbacks.onNodeAdded?.call(this, node)\n      void handleGraphChangedThrottled()\n    }\n\n    g.onNodeRemoved = function (node: LGraphNode) {\n      originalCallbacks.onNodeRemoved?.call(this, node)\n      nodeStatesCache.delete(node.id)\n      void handleGraphChangedThrottled()\n    }\n\n    g.onConnectionChange = function (node: LGraphNode) {\n      originalCallbacks.onConnectionChange?.call(this, node)\n      void handleGraphChangedThrottled()\n    }\n  }\n\n  const cleanupEventListeners = (oldGraph?: LGraph) => {\n    const g = oldGraph || graph.value\n    if (!g) return\n\n    const originalCallbacks = originalCallbacksMap.get(g.id)\n    if (!originalCallbacks) {\n      console.error(\n        'Attempted to cleanup event listeners for graph that was never set up'\n      )\n      return\n    }\n\n    g.onNodeAdded = originalCallbacks.onNodeAdded\n    g.onNodeRemoved = originalCallbacks.onNodeRemoved\n    g.onConnectionChange = originalCallbacks.onConnectionChange\n\n    originalCallbacksMap.delete(g.id)\n  }\n\n  const checkForChangesInternal = () => {\n    const g = graph.value\n    if (!g) return false\n\n    let structureChanged = false\n    let positionChanged = false\n    let connectionChanged = false\n\n    // Use unified data source for change detection\n    const dataSource = MinimapDataSourceFactory.create(g)\n\n    // Check for node count changes\n    const currentNodeCount = dataSource.getNodeCount()\n    if (currentNodeCount !== lastNodeCount.value) {\n      structureChanged = true\n      lastNodeCount.value = currentNodeCount\n    }\n\n    // Check for node position/size changes\n    const nodes = dataSource.getNodes()\n    for (const node of nodes) {\n      const nodeId = node.id\n      const currentState = `${node.x},${node.y},${node.width},${node.height}`\n\n      if (nodeStatesCache.get(nodeId) !== currentState) {\n        positionChanged = true\n        nodeStatesCache.set(nodeId, currentState)\n      }\n    }\n\n    // Clean up removed nodes from cache\n    const currentNodeIds = new Set(nodes.map((n) => n.id))\n    for (const [nodeId] of nodeStatesCache) {\n      if (!currentNodeIds.has(nodeId)) {\n        nodeStatesCache.delete(nodeId)\n        structureChanged = true\n      }\n    }\n\n    // TODO: update when Layoutstore tracks links\n    const currentLinks = JSON.stringify(g.links || {})\n    if (currentLinks !== linksCache.value) {\n      connectionChanged = true\n      linksCache.value = currentLinks\n    }\n\n    if (structureChanged || positionChanged) {\n      updateFlags.value.bounds = true\n      updateFlags.value.nodes = true\n    }\n\n    if (connectionChanged) {\n      updateFlags.value.connections = true\n    }\n\n    return structureChanged || positionChanged || connectionChanged\n  }\n\n  const init = () => {\n    setupEventListeners()\n    api.addEventListener('graphChanged', handleGraphChangedThrottled)\n\n    watch(layoutStoreVersion, () => {\n      void handleGraphChangedThrottled()\n    })\n  }\n\n  const destroy = () => {\n    cleanupEventListeners()\n    api.removeEventListener('graphChanged', handleGraphChangedThrottled)\n    nodeStatesCache.clear()\n  }\n\n  const clearCache = () => {\n    nodeStatesCache.clear()\n    linksCache.value = ''\n    lastNodeCount.value = 0\n  }\n\n  return {\n    updateFlags,\n    setupEventListeners,\n    cleanupEventListeners,\n    checkForChanges: checkForChangesInternal,\n    init,\n    destroy,\n    clearCache\n  }\n}\n","import { ref } from 'vue'\nimport type { Ref } from 'vue'\n\nimport type { MinimapCanvas } from '../types'\n\nexport function useMinimapInteraction(\n  containerRef: Ref<HTMLDivElement | undefined>,\n  bounds: Ref<{ minX: number; minY: number; width: number; height: number }>,\n  scale: Ref<number>,\n  width: number,\n  height: number,\n  centerViewOn: (worldX: number, worldY: number) => void,\n  canvas: Ref<MinimapCanvas | null>\n) {\n  const isDragging = ref(false)\n  const containerRect = ref({\n    left: 0,\n    top: 0,\n    width: width,\n    height: height\n  })\n\n  const updateContainerRect = () => {\n    if (!containerRef.value) return\n\n    const rect = containerRef.value.getBoundingClientRect()\n    containerRect.value = {\n      left: rect.left,\n      top: rect.top,\n      width: rect.width,\n      height: rect.height\n    }\n  }\n\n  const handlePointerDown = (e: PointerEvent) => {\n    isDragging.value = true\n    updateContainerRect()\n    handlePointerMove(e)\n  }\n\n  const handlePointerMove = (e: PointerEvent) => {\n    if (!isDragging.value || !canvas.value) return\n\n    const x = e.clientX - containerRect.value.left\n    const y = e.clientY - containerRect.value.top\n\n    const offsetX = (width - bounds.value.width * scale.value) / 2\n    const offsetY = (height - bounds.value.height * scale.value) / 2\n\n    const worldX = (x - offsetX) / scale.value + bounds.value.minX\n    const worldY = (y - offsetY) / scale.value + bounds.value.minY\n\n    centerViewOn(worldX, worldY)\n  }\n\n  const handlePointerUp = () => {\n    isDragging.value = false\n  }\n\n  const handleWheel = (e: WheelEvent) => {\n    e.preventDefault()\n\n    const c = canvas.value\n    if (!c) return\n\n    if (\n      containerRect.value.left === 0 &&\n      containerRect.value.top === 0 &&\n      containerRef.value\n    ) {\n      updateContainerRect()\n    }\n\n    const ds = c.ds\n    const delta = e.deltaY > 0 ? 0.9 : 1.1\n\n    const newScale = ds.scale * delta\n\n    const MIN_SCALE = 0.1\n    const MAX_SCALE = 10\n\n    if (newScale < MIN_SCALE || newScale > MAX_SCALE) return\n\n    const x = e.clientX - containerRect.value.left\n    const y = e.clientY - containerRect.value.top\n\n    const offsetX = (width - bounds.value.width * scale.value) / 2\n    const offsetY = (height - bounds.value.height * scale.value) / 2\n\n    const worldX = (x - offsetX) / scale.value + bounds.value.minX\n    const worldY = (y - offsetY) / scale.value + bounds.value.minY\n\n    ds.scale = newScale\n\n    centerViewOn(worldX, worldY)\n  }\n\n  return {\n    isDragging,\n    containerRect,\n    updateContainerRect,\n    handlePointerDown,\n    handlePointerMove,\n    handlePointerUp,\n    handleWheel\n  }\n}\n","import { ref } from 'vue'\nimport type { Ref } from 'vue'\n\nimport type { LGraph } from '@/lib/litegraph/src/litegraph'\n\nimport { renderMinimapToCanvas } from '../minimapCanvasRenderer'\nimport type { UpdateFlags } from '../types'\n\nexport function useMinimapRenderer(\n  canvasRef: Ref<HTMLCanvasElement | undefined>,\n  graph: Ref<LGraph | null>,\n  bounds: Ref<{ minX: number; minY: number; width: number; height: number }>,\n  scale: Ref<number>,\n  updateFlags: Ref<UpdateFlags>,\n  settings: {\n    nodeColors: Ref<boolean>\n    showLinks: Ref<boolean>\n    showGroups: Ref<boolean>\n    renderBypass: Ref<boolean>\n    renderError: Ref<boolean>\n  },\n  width: number,\n  height: number\n) {\n  const needsFullRedraw = ref(true)\n  const needsBoundsUpdate = ref(true)\n\n  const renderMinimap = () => {\n    const g = graph.value\n    if (!canvasRef.value || !g) return\n\n    const ctx = canvasRef.value.getContext('2d')\n    if (!ctx) return\n\n    // Fast path for 0 nodes - just show background\n    if (!g._nodes || g._nodes.length === 0) {\n      ctx.clearRect(0, 0, width, height)\n      return\n    }\n\n    const needsRedraw =\n      needsFullRedraw.value ||\n      updateFlags.value.nodes ||\n      updateFlags.value.connections\n\n    if (needsRedraw) {\n      renderMinimapToCanvas(canvasRef.value, g, {\n        bounds: bounds.value,\n        scale: scale.value,\n        settings: {\n          nodeColors: settings.nodeColors.value,\n          showLinks: settings.showLinks.value,\n          showGroups: settings.showGroups.value,\n          renderBypass: settings.renderBypass.value,\n          renderError: settings.renderError.value\n        },\n        width,\n        height\n      })\n\n      needsFullRedraw.value = false\n      updateFlags.value.nodes = false\n      updateFlags.value.connections = false\n    }\n  }\n\n  const updateMinimap = (\n    updateBounds: () => void,\n    updateViewport: () => void\n  ) => {\n    if (needsBoundsUpdate.value || updateFlags.value.bounds) {\n      updateBounds()\n      needsBoundsUpdate.value = false\n      updateFlags.value.bounds = false\n      needsFullRedraw.value = true\n      // When bounds change, we need to update the viewport position\n      updateFlags.value.viewport = true\n    }\n\n    if (\n      needsFullRedraw.value ||\n      updateFlags.value.nodes ||\n      updateFlags.value.connections\n    ) {\n      renderMinimap()\n    }\n\n    // Update viewport if needed (e.g., after bounds change)\n    if (updateFlags.value.viewport) {\n      updateViewport()\n      updateFlags.value.viewport = false\n    }\n  }\n\n  const forceFullRedraw = () => {\n    needsFullRedraw.value = true\n    updateFlags.value.bounds = true\n    updateFlags.value.nodes = true\n    updateFlags.value.connections = true\n    updateFlags.value.viewport = true\n  }\n\n  return {\n    needsFullRedraw,\n    needsBoundsUpdate,\n    renderMinimap,\n    updateMinimap,\n    forceFullRedraw\n  }\n}\n","import { computed } from 'vue'\n\nimport { useSettingStore } from '@/platform/settings/settingStore'\nimport { useColorPaletteStore } from '@/stores/workspace/colorPaletteStore'\n\n/**\n * Composable for minimap configuration options that are set by the user in the\n * settings. Provides reactive computed properties for the settings.\n */\nexport function useMinimapSettings() {\n  const settingStore = useSettingStore()\n  const colorPaletteStore = useColorPaletteStore()\n\n  const nodeColors = computed(() =>\n    settingStore.get('Comfy.Minimap.NodeColors')\n  )\n  const showLinks = computed(() => settingStore.get('Comfy.Minimap.ShowLinks'))\n  const showGroups = computed(() =>\n    settingStore.get('Comfy.Minimap.ShowGroups')\n  )\n  const renderBypass = computed(() =>\n    settingStore.get('Comfy.Minimap.RenderBypassState')\n  )\n  const renderError = computed(() =>\n    settingStore.get('Comfy.Minimap.RenderErrorState')\n  )\n\n  const width = 250\n  const height = 200\n\n  // Theme-aware colors\n  const isLightTheme = computed(\n    () => colorPaletteStore.completedActivePalette.light_theme\n  )\n\n  const containerStyles = computed(() => ({\n    width: `${width}px`,\n    height: `${height}px`,\n    backgroundColor: isLightTheme.value ? '#FAF9F5' : '#15161C',\n    border: `1px solid ${isLightTheme.value ? '#ccc' : '#333'}`,\n    borderRadius: '8px'\n  }))\n\n  const panelStyles = computed(() => ({\n    width: `210px`,\n    height: `${height}px`,\n    backgroundColor: isLightTheme.value ? '#FAF9F5' : '#15161C',\n    border: `1px solid ${isLightTheme.value ? '#ccc' : '#333'}`,\n    borderRadius: '8px'\n  }))\n\n  return {\n    nodeColors,\n    showLinks,\n    showGroups,\n    renderBypass,\n    renderError,\n    containerStyles,\n    panelStyles,\n    isLightTheme\n  }\n}\n","import { useRafFn } from '@vueuse/core'\nimport { computed, ref } from 'vue'\nimport type { Ref } from 'vue'\n\nimport type { LGraph } from '@/lib/litegraph/src/litegraph'\nimport {\n  calculateMinimapScale,\n  enforceMinimumBounds\n} from '@/renderer/core/spatial/boundsCalculator'\nimport { MinimapDataSourceFactory } from '@/renderer/extensions/minimap/data/MinimapDataSourceFactory'\n\nimport type { MinimapBounds, MinimapCanvas, ViewportTransform } from '../types'\n\nexport function useMinimapViewport(\n  canvas: Ref<MinimapCanvas | null>,\n  graph: Ref<LGraph | null>,\n  width: number,\n  height: number\n) {\n  const bounds = ref<MinimapBounds>({\n    minX: 0,\n    minY: 0,\n    maxX: 0,\n    maxY: 0,\n    width: 0,\n    height: 0\n  })\n\n  const scale = ref(1)\n  const viewportTransform = ref<ViewportTransform>({\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  })\n\n  const canvasDimensions = ref({\n    width: 0,\n    height: 0\n  })\n\n  const updateCanvasDimensions = () => {\n    const c = canvas.value\n    if (!c) return\n\n    const canvasEl = c.canvas\n    const dpr = window.devicePixelRatio || 1\n\n    canvasDimensions.value = {\n      width: canvasEl.clientWidth || canvasEl.width / dpr,\n      height: canvasEl.clientHeight || canvasEl.height / dpr\n    }\n  }\n\n  const calculateGraphBounds = (): MinimapBounds => {\n    // Use unified data source\n    const dataSource = MinimapDataSourceFactory.create(graph.value)\n\n    if (!dataSource.hasData()) {\n      return { minX: 0, minY: 0, maxX: 100, maxY: 100, width: 100, height: 100 }\n    }\n\n    const sourceBounds = dataSource.getBounds()\n    return enforceMinimumBounds(sourceBounds)\n  }\n\n  const calculateScale = () => {\n    return calculateMinimapScale(bounds.value, width, height)\n  }\n\n  const updateViewport = () => {\n    const c = canvas.value\n    if (!c) return\n\n    if (\n      canvasDimensions.value.width === 0 ||\n      canvasDimensions.value.height === 0\n    ) {\n      updateCanvasDimensions()\n    }\n\n    const ds = c.ds\n\n    const viewportWidth = canvasDimensions.value.width / ds.scale\n    const viewportHeight = canvasDimensions.value.height / ds.scale\n\n    const worldX = -ds.offset[0]\n    const worldY = -ds.offset[1]\n\n    const centerOffsetX = (width - bounds.value.width * scale.value) / 2\n    const centerOffsetY = (height - bounds.value.height * scale.value) / 2\n\n    viewportTransform.value = {\n      x: (worldX - bounds.value.minX) * scale.value + centerOffsetX,\n      y: (worldY - bounds.value.minY) * scale.value + centerOffsetY,\n      width: viewportWidth * scale.value,\n      height: viewportHeight * scale.value\n    }\n  }\n\n  const updateBounds = () => {\n    bounds.value = calculateGraphBounds()\n    scale.value = calculateScale()\n  }\n\n  const centerViewOn = (worldX: number, worldY: number) => {\n    const c = canvas.value\n    if (!c) return\n\n    if (\n      canvasDimensions.value.width === 0 ||\n      canvasDimensions.value.height === 0\n    ) {\n      updateCanvasDimensions()\n    }\n\n    const ds = c.ds\n\n    const viewportWidth = canvasDimensions.value.width / ds.scale\n    const viewportHeight = canvasDimensions.value.height / ds.scale\n\n    ds.offset[0] = -(worldX - viewportWidth / 2)\n    ds.offset[1] = -(worldY - viewportHeight / 2)\n\n    c.setDirty(true, true)\n  }\n  const { resume: startViewportSync, pause: stopViewportSync } =\n    useRafFn(updateViewport)\n\n  return {\n    bounds: computed(() => bounds.value),\n    scale: computed(() => scale.value),\n    viewportTransform: computed(() => viewportTransform.value),\n    canvasDimensions: computed(() => canvasDimensions.value),\n    updateCanvasDimensions,\n    updateViewport,\n    updateBounds,\n    centerViewOn,\n    startViewportSync,\n    stopViewportSync\n  }\n}\n","import { useRafFn } from '@vueuse/core'\nimport { computed, nextTick, ref, watch } from 'vue'\n\nimport type { LGraph } from '@/lib/litegraph/src/litegraph'\nimport { useSettingStore } from '@/platform/settings/settingStore'\nimport { useWorkflowStore } from '@/platform/workflow/management/stores/workflowStore'\nimport { useCanvasStore } from '@/renderer/core/canvas/canvasStore'\n\nimport type { MinimapCanvas, MinimapSettingsKey } from '../types'\nimport { useMinimapGraph } from './useMinimapGraph'\nimport { useMinimapInteraction } from './useMinimapInteraction'\nimport { useMinimapRenderer } from './useMinimapRenderer'\nimport { useMinimapSettings } from './useMinimapSettings'\nimport { useMinimapViewport } from './useMinimapViewport'\n\nexport function useMinimap() {\n  const canvasStore = useCanvasStore()\n  const workflowStore = useWorkflowStore()\n  const settingStore = useSettingStore()\n\n  const containerRef = ref<HTMLDivElement>()\n  const canvasRef = ref<HTMLCanvasElement>()\n  const minimapRef = ref<HTMLElement | null>(null)\n\n  const visible = ref(true)\n  const initialized = ref(false)\n\n  const width = 250\n  const height = 200\n\n  const canvas = computed(() => canvasStore.canvas as MinimapCanvas | null)\n  const graph = computed(() => {\n    // If we're in a subgraph, use that; otherwise use the canvas graph\n    const activeSubgraph = workflowStore.activeSubgraph\n    return (activeSubgraph || canvas.value?.graph) as LGraph | null\n  })\n\n  // Settings\n  const settings = useMinimapSettings()\n  const {\n    nodeColors,\n    showLinks,\n    showGroups,\n    renderBypass,\n    renderError,\n    containerStyles,\n    panelStyles\n  } = settings\n\n  const updateOption = async (key: MinimapSettingsKey, value: boolean) => {\n    await settingStore.set(key, value)\n    renderer.forceFullRedraw()\n    renderer.updateMinimap(viewport.updateBounds, viewport.updateViewport)\n  }\n\n  // Viewport management\n  const viewport = useMinimapViewport(canvas, graph, width, height)\n\n  // Interaction handling\n  const interaction = useMinimapInteraction(\n    containerRef,\n    viewport.bounds,\n    viewport.scale,\n    width,\n    height,\n    viewport.centerViewOn,\n    canvas\n  )\n\n  // Graph event management\n  const graphManager = useMinimapGraph(graph, () => {\n    renderer.forceFullRedraw()\n    renderer.updateMinimap(viewport.updateBounds, viewport.updateViewport)\n  })\n\n  // Rendering\n  const renderer = useMinimapRenderer(\n    canvasRef,\n    graph,\n    viewport.bounds,\n    viewport.scale,\n    graphManager.updateFlags,\n    settings,\n    width,\n    height\n  )\n\n  // RAF loop for continuous updates\n  const { pause: pauseChangeDetection, resume: resumeChangeDetection } =\n    useRafFn(\n      async () => {\n        if (visible.value) {\n          const hasChanges = await graphManager.checkForChanges()\n          if (hasChanges) {\n            renderer.updateMinimap(\n              viewport.updateBounds,\n              viewport.updateViewport\n            )\n          }\n        }\n      },\n      { immediate: false }\n    )\n\n  const init = async () => {\n    if (initialized.value) return\n\n    visible.value = settingStore.get('Comfy.Minimap.Visible')\n\n    if (canvas.value && graph.value) {\n      graphManager.init()\n\n      if (containerRef.value) {\n        interaction.updateContainerRect()\n      }\n      viewport.updateCanvasDimensions()\n\n      window.addEventListener('resize', interaction.updateContainerRect)\n      window.addEventListener('scroll', interaction.updateContainerRect)\n      window.addEventListener('resize', viewport.updateCanvasDimensions)\n\n      renderer.forceFullRedraw()\n      renderer.updateMinimap(viewport.updateBounds, viewport.updateViewport)\n      viewport.updateViewport()\n\n      if (visible.value) {\n        resumeChangeDetection()\n        viewport.startViewportSync()\n      }\n      initialized.value = true\n    }\n  }\n\n  const destroy = () => {\n    pauseChangeDetection()\n    viewport.stopViewportSync()\n    graphManager.destroy()\n\n    window.removeEventListener('resize', interaction.updateContainerRect)\n    window.removeEventListener('scroll', interaction.updateContainerRect)\n    window.removeEventListener('resize', viewport.updateCanvasDimensions)\n\n    initialized.value = false\n  }\n\n  watch(\n    canvas,\n    async (newCanvas, oldCanvas) => {\n      if (oldCanvas) {\n        graphManager.cleanupEventListeners()\n        pauseChangeDetection()\n        viewport.stopViewportSync()\n        graphManager.destroy()\n        window.removeEventListener('resize', interaction.updateContainerRect)\n        window.removeEventListener('scroll', interaction.updateContainerRect)\n        window.removeEventListener('resize', viewport.updateCanvasDimensions)\n      }\n      if (newCanvas && !initialized.value) {\n        await init()\n      }\n    },\n    { immediate: true, flush: 'post' }\n  )\n\n  // Watch for graph changes (e.g., when navigating to/from subgraphs)\n  watch(graph, (newGraph, oldGraph) => {\n    if (newGraph && newGraph !== oldGraph) {\n      graphManager.cleanupEventListeners(oldGraph || undefined)\n      graphManager.setupEventListeners()\n      renderer.forceFullRedraw()\n      renderer.updateMinimap(viewport.updateBounds, viewport.updateViewport)\n    }\n  })\n\n  watch(visible, async (isVisible) => {\n    if (isVisible) {\n      if (containerRef.value) {\n        interaction.updateContainerRect()\n      }\n      viewport.updateCanvasDimensions()\n\n      renderer.forceFullRedraw()\n\n      await nextTick()\n      await nextTick()\n\n      renderer.updateMinimap(viewport.updateBounds, viewport.updateViewport)\n      viewport.updateViewport()\n      resumeChangeDetection()\n      viewport.startViewportSync()\n    } else {\n      pauseChangeDetection()\n      viewport.stopViewportSync()\n    }\n  })\n\n  const toggle = async () => {\n    visible.value = !visible.value\n    await settingStore.set('Comfy.Minimap.Visible', visible.value)\n  }\n\n  const setMinimapRef = (ref: HTMLElement | null) => {\n    minimapRef.value = ref\n  }\n\n  // Dynamic viewport styles based on actual viewport transform\n  const viewportStyles = computed(() => {\n    const transform = viewport.viewportTransform.value\n    return {\n      transform: `translate(${transform.x}px, ${transform.y}px)`,\n      width: `${transform.width}px`,\n      height: `${transform.height}px`,\n      border: `2px solid ${settings.isLightTheme.value ? '#E0E0E0' : '#FFF'}`,\n      backgroundColor: `rgba(255, 255, 255, 0.2)`,\n      willChange: 'transform',\n      backfaceVisibility: 'hidden' as const,\n      perspective: '1000px',\n      pointerEvents: 'none' as const\n    }\n  })\n\n  return {\n    visible: computed(() => visible.value),\n    initialized: computed(() => initialized.value),\n\n    containerRef,\n    canvasRef,\n    containerStyles,\n    viewportStyles,\n    panelStyles,\n    width,\n    height,\n\n    nodeColors,\n    showLinks,\n    showGroups,\n    renderBypass,\n    renderError,\n\n    init,\n    destroy,\n    toggle,\n    renderMinimap: renderer.renderMinimap,\n    handlePointerDown: interaction.handlePointerDown,\n    handlePointerMove: interaction.handlePointerMove,\n    handlePointerUp: interaction.handlePointerUp,\n    handleWheel: interaction.handleWheel,\n    setMinimapRef,\n    updateOption\n  }\n}\n","<template>\n  <div\n    v-if=\"visible\"\n    class=\"w-[250px] absolute flex justify-center right-2 md:right-11 z-1300 bottom-[66px] bg-inherit! border-0!\"\n  >\n    <div\n      class=\"bg-white dark-theme:bg-[#2b2b2b] border border-gray-200 dark-theme:border-gray-700 rounded-lg shadow-lg p-4 w-4/5\"\n      :style=\"filteredMinimapStyles\"\n      @click.stop\n    >\n      <div>\n        <Button\n          severity=\"secondary\"\n          text\n          :pt=\"{\n            root: {\n              class:\n                'flex items-center justify-between cursor-pointer p-2 rounded w-full text-left hover:bg-transparent! focus:bg-transparent! active:bg-transparent!'\n            },\n            label: {\n              class: 'flex flex-col items-start w-full'\n            }\n          }\"\n          @mousedown=\"startRepeat('Comfy.Canvas.ZoomIn')\"\n          @mouseup=\"stopRepeat\"\n          @mouseleave=\"stopRepeat\"\n        >\n          <template #default>\n            <span class=\"text-sm font-medium block\">{{\n              $t('graphCanvasMenu.zoomIn')\n            }}</span>\n            <span class=\"text-sm text-gray-500 block\">{{\n              zoomInCommandText\n            }}</span>\n          </template>\n        </Button>\n\n        <Button\n          severity=\"secondary\"\n          text\n          :pt=\"{\n            root: {\n              class:\n                'flex items-center justify-between cursor-pointer p-2 rounded w-full text-left hover:bg-transparent! focus:bg-transparent! active:bg-transparent!'\n            },\n            label: {\n              class: 'flex flex-col items-start w-full'\n            }\n          }\"\n          @mousedown=\"startRepeat('Comfy.Canvas.ZoomOut')\"\n          @mouseup=\"stopRepeat\"\n          @mouseleave=\"stopRepeat\"\n        >\n          <template #default>\n            <span class=\"text-sm font-medium block\">{{\n              $t('graphCanvasMenu.zoomOut')\n            }}</span>\n            <span class=\"text-sm text-gray-500 block\">{{\n              zoomOutCommandText\n            }}</span>\n          </template>\n        </Button>\n\n        <Button\n          severity=\"secondary\"\n          text\n          :pt=\"{\n            root: {\n              class:\n                'flex items-center justify-between cursor-pointer p-2 rounded w-full text-left hover:bg-transparent! focus:bg-transparent! active:bg-transparent!'\n            },\n            label: {\n              class: 'flex flex-col items-start w-full'\n            }\n          }\"\n          @click=\"executeCommand('Comfy.Canvas.FitView')\"\n        >\n          <template #default>\n            <span class=\"text-sm font-medium block\">{{\n              $t('zoomControls.zoomToFit')\n            }}</span>\n            <span class=\"text-sm text-gray-500 block\">{{\n              zoomToFitCommandText\n            }}</span>\n          </template>\n        </Button>\n        <hr class=\"border-[#E1DED5] mb-1 dark-theme:border-[#2E3037]\" />\n        <Button\n          severity=\"secondary\"\n          text\n          data-testid=\"toggle-minimap-button\"\n          :pt=\"{\n            root: {\n              class:\n                'flex items-center justify-between cursor-pointer p-2 rounded w-full text-left hover:bg-transparent! focus:bg-transparent! active:bg-transparent!'\n            },\n            label: {\n              class: 'flex flex-col items-start w-full'\n            }\n          }\"\n          @click=\"executeCommand('Comfy.Canvas.ToggleMinimap')\"\n        >\n          <template #default>\n            <span class=\"text-sm font-medium block\">{{\n              minimapToggleText\n            }}</span>\n            <span class=\"text-sm text-gray-500 block\">{{\n              showMinimapCommandText\n            }}</span>\n          </template>\n        </Button>\n        <hr class=\"border-[#E1DED5] mt-1 dark-theme:border-[#2E3037]\" />\n        <div\n          ref=\"zoomInputContainer\"\n          class=\"flex items-center px-2 bg-[#E7E6E6] focus-within:bg-[#F3F3F3] dark-theme:bg-[#8282821A] rounded p-2 zoomInputContainer\"\n        >\n          <InputNumber\n            ref=\"zoomInput\"\n            :default-value=\"canvasStore.appScalePercentage\"\n            :min=\"1\"\n            :max=\"1000\"\n            :show-buttons=\"false\"\n            :use-grouping=\"false\"\n            :unstyled=\"true\"\n            input-class=\"flex-1 bg-transparent border-none outline-hidden text-sm shadow-none my-0 \"\n            fluid\n            @input=\"applyZoom\"\n            @keyup.enter=\"applyZoom\"\n          />\n          <span class=\"text-sm text-gray-500 -ml-4\">%</span>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport type { InputNumberInputEvent } from 'primevue'\nimport { Button, InputNumber } from 'primevue'\nimport { computed, nextTick, ref, watch } from 'vue'\nimport { useI18n } from 'vue-i18n'\n\nimport { useSettingStore } from '@/platform/settings/settingStore'\nimport { useCanvasStore } from '@/renderer/core/canvas/canvasStore'\nimport { useMinimap } from '@/renderer/extensions/minimap/composables/useMinimap'\nimport { useCommandStore } from '@/stores/commandStore'\n\nconst { t } = useI18n()\nconst minimap = useMinimap()\nconst settingStore = useSettingStore()\nconst commandStore = useCommandStore()\nconst canvasStore = useCanvasStore()\nconst { formatKeySequence } = useCommandStore()\n\ninterface Props {\n  visible: boolean\n}\n\nconst props = defineProps<Props>()\n\nconst interval = ref<number | null>(null)\n\n// Computed properties for reactive states\nconst minimapToggleText = computed(() =>\n  settingStore.get('Comfy.Minimap.Visible')\n    ? t('zoomControls.hideMinimap')\n    : t('zoomControls.showMinimap')\n)\n\nconst applyZoom = (val: InputNumberInputEvent) => {\n  const inputValue = val.value as number\n  if (isNaN(inputValue) || inputValue < 1 || inputValue > 1000) {\n    return\n  }\n  canvasStore.setAppZoomFromPercentage(inputValue)\n}\n\nconst executeCommand = (command: string) => {\n  void commandStore.execute(command)\n}\n\nconst startRepeat = (command: string) => {\n  if (interval.value) return\n  const cmd = () => commandStore.execute(command)\n  void cmd()\n  interval.value = window.setInterval(cmd, 100)\n}\n\nconst stopRepeat = () => {\n  if (interval.value) {\n    clearInterval(interval.value)\n    interval.value = null\n  }\n}\nconst filteredMinimapStyles = computed(() => {\n  return {\n    ...minimap.containerStyles.value,\n    height: undefined,\n    width: undefined\n  }\n})\nconst zoomInCommandText = computed(() =>\n  formatKeySequence(commandStore.getCommand('Comfy.Canvas.ZoomIn'))\n)\nconst zoomOutCommandText = computed(() =>\n  formatKeySequence(commandStore.getCommand('Comfy.Canvas.ZoomOut'))\n)\nconst zoomToFitCommandText = computed(() =>\n  formatKeySequence(commandStore.getCommand('Comfy.Canvas.FitView'))\n)\nconst showMinimapCommandText = computed(() =>\n  formatKeySequence(commandStore.getCommand('Comfy.Canvas.ToggleMinimap'))\n)\nconst zoomInput = ref<InstanceType<typeof InputNumber> | null>(null)\nconst zoomInputContainer = ref<HTMLDivElement | null>(null)\n\nwatch(\n  () => props.visible,\n  async (newVal) => {\n    if (newVal) {\n      await nextTick()\n      const input = zoomInputContainer.value?.querySelector(\n        'input'\n      ) as HTMLInputElement\n      input?.focus()\n    }\n  }\n)\n</script>\n<style>\n.zoomInputContainer:focus-within {\n  border: 1px solid rgb(204, 204, 204);\n}\n\n.dark-theme .zoomInputContainer:focus-within {\n  border: 1px solid rgb(204, 204, 204);\n}\n</style>\n","<template>\n  <div>\n    <ZoomControlsModal :visible=\"isModalVisible\" />\n\n    <!-- Backdrop -->\n    <div\n      v-if=\"hasActivePopup\"\n      class=\"fixed inset-0 z-1200\"\n      @click=\"hideModal\"\n    ></div>\n\n    <ButtonGroup\n      class=\"p-buttongroup-vertical p-1 absolute bottom-4 right-2 md:right-4\"\n      :style=\"stringifiedMinimapStyles.buttonGroupStyles\"\n      @wheel=\"canvasInteractions.handleWheel\"\n    >\n      <Button\n        v-tooltip.top=\"selectTooltip\"\n        :style=\"stringifiedMinimapStyles.buttonStyles\"\n        severity=\"secondary\"\n        :aria-label=\"selectTooltip\"\n        :pressed=\"isCanvasReadOnly\"\n        icon=\"i-material-symbols:pan-tool-outline\"\n        :class=\"selectButtonClass\"\n        @click=\"() => commandStore.execute('Comfy.Canvas.Unlock')\"\n      >\n        <template #icon>\n          <i-lucide:mouse-pointer-2 />\n        </template>\n      </Button>\n\n      <Button\n        v-tooltip.top=\"handTooltip\"\n        severity=\"secondary\"\n        :aria-label=\"handTooltip\"\n        :pressed=\"isCanvasUnlocked\"\n        :class=\"handButtonClass\"\n        :style=\"stringifiedMinimapStyles.buttonStyles\"\n        @click=\"() => commandStore.execute('Comfy.Canvas.Lock')\"\n      >\n        <template #icon>\n          <i-lucide:hand />\n        </template>\n      </Button>\n\n      <!-- vertical line with bg E1DED5 -->\n      <div class=\"w-px my-1 bg-[#E1DED5] dark-theme:bg-[#2E3037] mx-2\" />\n\n      <Button\n        v-tooltip.top=\"fitViewTooltip\"\n        severity=\"secondary\"\n        icon=\"pi pi-expand\"\n        :aria-label=\"fitViewTooltip\"\n        :style=\"stringifiedMinimapStyles.buttonStyles\"\n        class=\"dark-theme:hover:bg-[#444444]! hover:bg-[#E7E6E6]!\"\n        @click=\"() => commandStore.execute('Comfy.Canvas.FitView')\"\n      >\n        <template #icon>\n          <i-lucide:focus />\n        </template>\n      </Button>\n\n      <Button\n        ref=\"zoomButton\"\n        v-tooltip.top=\"t('zoomControls.label')\"\n        severity=\"secondary\"\n        :label=\"t('zoomControls.label')\"\n        :class=\"zoomButtonClass\"\n        :aria-label=\"t('zoomControls.label')\"\n        data-testid=\"zoom-controls-button\"\n        :style=\"stringifiedMinimapStyles.buttonStyles\"\n        @click=\"toggleModal\"\n      >\n        <span class=\"inline-flex text-xs\">\n          <span>{{ canvasStore.appScalePercentage }}%</span>\n          <i-lucide:chevron-down />\n        </span>\n      </Button>\n\n      <div class=\"w-px my-1 bg-[#E1DED5] dark-theme:bg-[#2E3037] mx-2\" />\n\n      <Button\n        ref=\"focusButton\"\n        v-tooltip.top=\"focusModeTooltip\"\n        severity=\"secondary\"\n        :aria-label=\"focusModeTooltip\"\n        data-testid=\"focus-mode-button\"\n        :style=\"stringifiedMinimapStyles.buttonStyles\"\n        :class=\"focusButtonClass\"\n        @click=\"() => commandStore.execute('Workspace.ToggleFocusMode')\"\n      >\n        <template #icon>\n          <i-lucide:lightbulb />\n        </template>\n      </Button>\n\n      <Button\n        v-tooltip.top=\"{\n          value: linkVisibilityTooltip,\n          pt: {\n            root: {\n              style: 'z-index: 2; transform: translateY(-20px);'\n            }\n          }\n        }\"\n        severity=\"secondary\"\n        :class=\"linkVisibleClass\"\n        :aria-label=\"linkVisibilityAriaLabel\"\n        data-testid=\"toggle-link-visibility-button\"\n        :style=\"stringifiedMinimapStyles.buttonStyles\"\n        @click=\"() => commandStore.execute('Comfy.Canvas.ToggleLinkVisibility')\"\n      >\n        <template #icon>\n          <i-lucide:route-off />\n        </template>\n      </Button>\n    </ButtonGroup>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport Button from 'primevue/button'\nimport ButtonGroup from 'primevue/buttongroup'\nimport { computed, onBeforeUnmount, onMounted } from 'vue'\nimport { useI18n } from 'vue-i18n'\n\nimport { useZoomControls } from '@/composables/useZoomControls'\nimport { LiteGraph } from '@/lib/litegraph/src/litegraph'\nimport { useSettingStore } from '@/platform/settings/settingStore'\nimport { useCanvasStore } from '@/renderer/core/canvas/canvasStore'\nimport { useCanvasInteractions } from '@/renderer/core/canvas/useCanvasInteractions'\nimport { useMinimap } from '@/renderer/extensions/minimap/composables/useMinimap'\nimport { useCommandStore } from '@/stores/commandStore'\nimport { useWorkspaceStore } from '@/stores/workspaceStore'\n\nimport ZoomControlsModal from './modals/ZoomControlsModal.vue'\n\nconst { t } = useI18n()\nconst commandStore = useCommandStore()\nconst { formatKeySequence } = useCommandStore()\nconst canvasStore = useCanvasStore()\nconst settingStore = useSettingStore()\nconst canvasInteractions = useCanvasInteractions()\nconst workspaceStore = useWorkspaceStore()\nconst minimap = useMinimap()\n\nconst { isModalVisible, toggleModal, hideModal, hasActivePopup } =\n  useZoomControls()\n\nconst stringifiedMinimapStyles = computed(() => {\n  const buttonGroupKeys = ['backgroundColor', 'borderRadius', '']\n  const buttonKeys = ['backgroundColor', 'borderRadius']\n  const additionalButtonStyles = {\n    border: 'none',\n    width: '35px',\n    height: '35px',\n    'margin-right': '2px',\n    'margin-left': '2px'\n  }\n\n  const containerStyles = minimap.containerStyles.value\n\n  const buttonStyles = {\n    ...Object.fromEntries(\n      Object.entries(containerStyles).filter(([key]) =>\n        buttonKeys.includes(key)\n      )\n    ),\n    ...additionalButtonStyles\n  }\n  const buttonGroupStyles = Object.entries(containerStyles)\n    .filter(([key]) => buttonGroupKeys.includes(key))\n    .reduce((acc, [key, value]) => ({ ...acc, [key]: value }), {})\n\n  return { buttonStyles, buttonGroupStyles }\n})\n\n// Computed properties for reactive states\nconst isCanvasReadOnly = computed(() => canvasStore.canvas?.read_only ?? false)\nconst isCanvasUnlocked = computed(() => !isCanvasReadOnly.value)\nconst linkHidden = computed(\n  () => settingStore.get('Comfy.LinkRenderMode') === LiteGraph.HIDDEN_LINK\n)\n\n// Computed properties for command text\nconst unlockCommandText = computed(() =>\n  formatKeySequence(\n    commandStore.getCommand('Comfy.Canvas.Unlock')\n  ).toUpperCase()\n)\nconst lockCommandText = computed(() =>\n  formatKeySequence(commandStore.getCommand('Comfy.Canvas.Lock')).toUpperCase()\n)\nconst fitViewCommandText = computed(() =>\n  formatKeySequence(\n    commandStore.getCommand('Comfy.Canvas.FitView')\n  ).toUpperCase()\n)\nconst focusCommandText = computed(() =>\n  formatKeySequence(\n    commandStore.getCommand('Workspace.ToggleFocusMode')\n  ).toUpperCase()\n)\n\n// Computed properties for button classes and states\nconst selectButtonClass = computed(() =>\n  isCanvasUnlocked.value\n    ? 'not-active:dark-theme:bg-[#262729]! not-active:bg-[#E7E6E6]!'\n    : ''\n)\n\nconst handButtonClass = computed(() =>\n  isCanvasReadOnly.value\n    ? 'not-active:dark-theme:bg-[#262729]! not-active:bg-[#E7E6E6]!'\n    : ''\n)\n\nconst zoomButtonClass = computed(() => [\n  'w-16!',\n  isModalVisible.value\n    ? 'not-active:dark-theme:bg-[#262729]! not-active:bg-[#E7E6E6]!'\n    : '',\n  'dark-theme:hover:bg-[#262729]! hover:bg-[#E7E6E6]!'\n])\n\nconst focusButtonClass = computed(() => ({\n  'dark-theme:hover:bg-[#262729]! hover:bg-[#E7E6E6]!': true,\n  'not-active:dark-theme:bg-[#262729]! not-active:bg-[#E7E6E6]!':\n    workspaceStore.focusMode\n}))\n\n// Computed properties for tooltip and aria-label texts\nconst selectTooltip = computed(\n  () => `${t('graphCanvasMenu.select')} (${unlockCommandText.value})`\n)\nconst handTooltip = computed(\n  () => `${t('graphCanvasMenu.hand')} (${lockCommandText.value})`\n)\nconst fitViewTooltip = computed(\n  () => `${t('graphCanvasMenu.fitView')} (${fitViewCommandText.value})`\n)\nconst focusModeTooltip = computed(\n  () => `${t('graphCanvasMenu.focusMode')} (${focusCommandText.value})`\n)\nconst linkVisibilityTooltip = computed(() =>\n  linkHidden.value\n    ? t('graphCanvasMenu.showLinks')\n    : t('graphCanvasMenu.hideLinks')\n)\nconst linkVisibilityAriaLabel = computed(() =>\n  linkHidden.value\n    ? t('graphCanvasMenu.showLinks')\n    : t('graphCanvasMenu.hideLinks')\n)\nconst linkVisibleClass = computed(() => [\n  linkHidden.value\n    ? 'not-active:dark-theme:bg-[#262729]! not-active:bg-[#E7E6E6]!'\n    : '',\n  'dark-theme:hover:bg-[#262729]! hover:bg-[#E7E6E6]!'\n])\n\nonMounted(() => {\n  canvasStore.initScaleSync()\n})\n\nonBeforeUnmount(() => {\n  canvasStore.cleanupScaleSync()\n})\n</script>\n\n<style scoped>\n.p-buttongroup-vertical {\n  display: flex;\n  flex-direction: row;\n  z-index: 1200;\n  border-radius: var(--p-button-border-radius);\n  overflow: hidden;\n  border: 1px solid var(--p-panel-border-color);\n}\n\n.p-buttongroup-vertical .p-button {\n  margin: 0;\n  border-radius: 0;\n}\n</style>\n","<template>\n  <div\n    v-if=\"tooltipText\"\n    ref=\"tooltipRef\"\n    class=\"node-tooltip\"\n    :style=\"{ left, top }\"\n  >\n    {{ tooltipText }}\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { useEventListener } from '@vueuse/core'\nimport { nextTick, ref } from 'vue'\n\nimport { st } from '@/i18n'\nimport {\n  LiteGraph,\n  isOverNodeInput,\n  isOverNodeOutput\n} from '@/lib/litegraph/src/litegraph'\nimport { useSettingStore } from '@/platform/settings/settingStore'\nimport { app as comfyApp } from '@/scripts/app'\nimport { isDOMWidget } from '@/scripts/domWidget'\nimport { useNodeDefStore } from '@/stores/nodeDefStore'\nimport { normalizeI18nKey } from '@/utils/formatUtil'\n\nlet idleTimeout: number\nconst nodeDefStore = useNodeDefStore()\nconst settingStore = useSettingStore()\nconst tooltipRef = ref<HTMLDivElement | undefined>()\nconst tooltipText = ref('')\nconst left = ref<string>()\nconst top = ref<string>()\n\nfunction hideTooltip() {\n  return (tooltipText.value = '')\n}\n\nasync function showTooltip(tooltip: string | null | undefined) {\n  if (!tooltip) return\n\n  left.value = comfyApp.canvas.mouse[0] + 'px'\n  top.value = comfyApp.canvas.mouse[1] + 'px'\n  tooltipText.value = tooltip\n\n  await nextTick()\n\n  const rect = tooltipRef.value?.getBoundingClientRect()\n  if (!rect) return\n\n  if (rect.right > window.innerWidth) {\n    left.value = comfyApp.canvas.mouse[0] - rect.width + 'px'\n  }\n\n  if (rect.top < 0) {\n    top.value = comfyApp.canvas.mouse[1] + rect.height + 'px'\n  }\n}\n\nfunction onIdle() {\n  const { canvas } = comfyApp\n  const node = canvas?.node_over\n  if (!node) return\n\n  const ctor = node.constructor as { title_mode?: 0 | 1 | 2 | 3 }\n  const nodeDef = nodeDefStore.nodeDefsByName[node.type ?? '']\n\n  if (\n    ctor.title_mode !== LiteGraph.NO_TITLE &&\n    canvas.graph_mouse[1] < node.pos[1] // If we are over a node, but not within the node then we are on its title\n  ) {\n    return showTooltip(nodeDef?.description)\n  }\n\n  if (node.flags?.collapsed) return\n\n  const inputSlot = isOverNodeInput(\n    node,\n    canvas.graph_mouse[0],\n    canvas.graph_mouse[1],\n    [0, 0]\n  )\n  if (inputSlot !== -1) {\n    const inputName = node.inputs[inputSlot].name\n    const translatedTooltip = st(\n      `nodeDefs.${normalizeI18nKey(node.type ?? '')}.inputs.${normalizeI18nKey(inputName)}.tooltip`,\n      nodeDef?.inputs[inputName]?.tooltip ?? ''\n    )\n    return showTooltip(translatedTooltip)\n  }\n\n  const outputSlot = isOverNodeOutput(\n    node,\n    canvas.graph_mouse[0],\n    canvas.graph_mouse[1],\n    [0, 0]\n  )\n  if (outputSlot !== -1) {\n    const translatedTooltip = st(\n      `nodeDefs.${normalizeI18nKey(node.type ?? '')}.outputs.${outputSlot}.tooltip`,\n      nodeDef?.outputs[outputSlot]?.tooltip ?? ''\n    )\n    return showTooltip(translatedTooltip)\n  }\n\n  const widget = comfyApp.canvas.getWidgetAtCursor()\n  // Dont show for DOM widgets, these use native browser tooltips as we dont get proper mouse events on these\n  if (widget && !isDOMWidget(widget)) {\n    const translatedTooltip = st(\n      `nodeDefs.${normalizeI18nKey(node.type ?? '')}.inputs.${normalizeI18nKey(widget.name)}.tooltip`,\n      nodeDef?.inputs[widget.name]?.tooltip ?? ''\n    )\n    // Widget tooltip can be set dynamically, current translation collection does not support this.\n    return showTooltip(widget.tooltip ?? translatedTooltip)\n  }\n}\n\nconst onMouseMove = (e: MouseEvent) => {\n  hideTooltip()\n  clearTimeout(idleTimeout)\n\n  if ((e.target as Node).nodeName !== 'CANVAS') return\n  idleTimeout = window.setTimeout(\n    onIdle,\n    settingStore.get('LiteGraph.Node.TooltipDelay')\n  )\n}\n\nuseEventListener(window, 'mousemove', onMouseMove)\nuseEventListener(window, 'click', hideTooltip)\n</script>\n\n<style lang=\"css\" scoped>\n.node-tooltip {\n  pointer-events: none;\n  background: var(--comfy-input-bg);\n  border-radius: 5px;\n  box-shadow: 0 0 5px rgba(0, 0, 0, 0.4);\n  color: var(--input-text);\n  font-family: sans-serif;\n  left: 0;\n  max-width: 30vw;\n  padding: 4px 8px;\n  position: absolute;\n  top: 0;\n  transform: translate(5px, calc(-100% - 5px));\n  white-space: pre-wrap;\n  z-index: 99999;\n}\n</style>\n","<template>\n  <Button\n    v-tooltip.top=\"{\n      value: t('commands.Comfy_Canvas_ToggleSelectedNodes_Bypass.label'),\n      showDelay: 1000\n    }\"\n    severity=\"secondary\"\n    text\n    data-testid=\"bypass-button\"\n    class=\"hover:dark-theme:bg-charcoal-600 hover:bg-[#E7E6E6]\"\n    @click=\"toggleBypass\"\n  >\n    <template #icon>\n      <i-lucide:ban class=\"w-4 h-4\" />\n    </template>\n  </Button>\n</template>\n\n<script setup lang=\"ts\">\nimport Button from 'primevue/button'\nimport { useI18n } from 'vue-i18n'\n\nimport { useCommandStore } from '@/stores/commandStore'\n\nconst { t } = useI18n()\nconst commandStore = useCommandStore()\n\nconst toggleBypass = async () => {\n  await commandStore.execute('Comfy.Canvas.ToggleSelectedNodes.Bypass')\n}\n</script>\n","<template>\n  <div class=\"relative\">\n    <Button\n      v-tooltip.top=\"{\n        value: localizedCurrentColorName ?? t('color.noColor'),\n        showDelay: 1000\n      }\"\n      data-testid=\"color-picker-button\"\n      severity=\"secondary\"\n      text\n      @click=\"() => (showColorPicker = !showColorPicker)\"\n    >\n      <div class=\"flex items-center gap-1 px-0\">\n        <i\n          class=\"w-4 h-4 pi pi-circle-fill\"\n          :style=\"{ color: currentColor ?? '' }\"\n        />\n        <i\n          class=\"w-4 h-4 pi pi-chevron-down py-1\"\n          :style=\"{ fontSize: '0.5rem' }\"\n        />\n      </div>\n    </Button>\n    <div\n      v-if=\"showColorPicker\"\n      class=\"color-picker-container absolute -top-10 left-1/2\"\n    >\n      <SelectButton\n        :model-value=\"selectedColorOption\"\n        :options=\"colorOptions\"\n        option-label=\"name\"\n        data-key=\"value\"\n        @update:model-value=\"applyColor\"\n      >\n        <template #option=\"{ option }\">\n          <i\n            v-tooltip.top=\"option.localizedName\"\n            class=\"pi pi-circle-fill\"\n            :style=\"{\n              color: isLightTheme ? option.value.light : option.value.dark\n            }\"\n            :data-testid=\"option.name\"\n          />\n        </template>\n      </SelectButton>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport Button from 'primevue/button'\nimport SelectButton from 'primevue/selectbutton'\nimport type { Raw } from 'vue'\nimport { computed, ref, watch } from 'vue'\nimport { useI18n } from 'vue-i18n'\n\nimport type {\n  ColorOption as CanvasColorOption,\n  Positionable\n} from '@/lib/litegraph/src/litegraph'\nimport {\n  LGraphCanvas,\n  LiteGraph,\n  isColorable\n} from '@/lib/litegraph/src/litegraph'\nimport { useWorkflowStore } from '@/platform/workflow/management/stores/workflowStore'\nimport { useCanvasStore } from '@/renderer/core/canvas/canvasStore'\nimport { useColorPaletteStore } from '@/stores/workspace/colorPaletteStore'\nimport { adjustColor } from '@/utils/colorUtil'\nimport { getItemsColorOption } from '@/utils/litegraphUtil'\n\nconst { t } = useI18n()\nconst canvasStore = useCanvasStore()\nconst colorPaletteStore = useColorPaletteStore()\nconst workflowStore = useWorkflowStore()\nconst isLightTheme = computed(\n  () => colorPaletteStore.completedActivePalette.light_theme\n)\nconst toLightThemeColor = (color: string) =>\n  adjustColor(color, { lightness: 0.5 })\n\nconst showColorPicker = ref(false)\n\ntype ColorOption = {\n  name: string\n  localizedName: string\n  value: {\n    dark: string\n    light: string\n  }\n}\n\nconst NO_COLOR_OPTION: ColorOption = {\n  name: 'noColor',\n  localizedName: t('color.noColor'),\n  value: {\n    dark: LiteGraph.NODE_DEFAULT_BGCOLOR,\n    light: toLightThemeColor(LiteGraph.NODE_DEFAULT_BGCOLOR)\n  }\n}\nconst colorOptions: ColorOption[] = [\n  NO_COLOR_OPTION,\n  ...Object.entries(LGraphCanvas.node_colors).map(([name, color]) => ({\n    name,\n    localizedName: t(`color.${name}`),\n    value: {\n      dark: color.bgcolor,\n      light: toLightThemeColor(color.bgcolor)\n    }\n  }))\n]\n\nconst selectedColorOption = ref<ColorOption | null>(null)\nconst applyColor = (colorOption: ColorOption | null) => {\n  const colorName = colorOption?.name ?? NO_COLOR_OPTION.name\n  const canvasColorOption =\n    colorName === NO_COLOR_OPTION.name\n      ? null\n      : LGraphCanvas.node_colors[colorName]\n\n  for (const item of canvasStore.selectedItems) {\n    if (isColorable(item)) {\n      item.setColorOption(canvasColorOption)\n    }\n  }\n\n  canvasStore.canvas?.setDirty(true, true)\n  currentColorOption.value = canvasColorOption\n  showColorPicker.value = false\n  workflowStore.activeWorkflow?.changeTracker.checkState()\n}\n\nconst currentColorOption = ref<CanvasColorOption | null>(null)\nconst currentColor = computed(() =>\n  currentColorOption.value\n    ? isLightTheme.value\n      ? toLightThemeColor(currentColorOption.value?.bgcolor)\n      : currentColorOption.value?.bgcolor\n    : null\n)\n\nconst localizedCurrentColorName = computed(() => {\n  if (!currentColorOption.value?.bgcolor) return null\n  const colorOption = colorOptions.find(\n    (option) =>\n      option.value.dark === currentColorOption.value?.bgcolor ||\n      option.value.light === currentColorOption.value?.bgcolor\n  )\n  return colorOption?.localizedName ?? NO_COLOR_OPTION.localizedName\n})\nconst updateColorSelectionFromNode = (\n  newSelectedItems: Raw<Positionable[]>\n) => {\n  showColorPicker.value = false\n  selectedColorOption.value = null\n  currentColorOption.value = getItemsColorOption(newSelectedItems)\n}\nwatch(\n  () => canvasStore.selectedItems,\n  (newSelectedItems) => {\n    updateColorSelectionFromNode(newSelectedItems)\n  },\n  { immediate: true }\n)\n</script>\n\n<style scoped>\n@reference '../../../assets/css/style.css';\n\n.color-picker-container {\n  transform: translateX(-50%);\n}\n\n:deep(.p-togglebutton) {\n  @apply py-2 px-1;\n}\n</style>\n","import type { LGraphNode } from '@/lib/litegraph/src/litegraph'\n\n/**\n * Checks if a node is an output node.\n * Output nodes are nodes that have the output_node flag set in their nodeData.\n *\n * @param node - The node to check\n * @returns True if the node is an output node, false otherwise\n */\nexport const isOutputNode = (node: LGraphNode) =>\n  node.constructor.nodeData?.output_node\n\n/**\n * Filters nodes to find only output nodes.\n * Output nodes are nodes that have the output_node flag set in their nodeData.\n *\n * @param nodes - Array of nodes to filter\n * @returns Array of output nodes only\n */\nexport const filterOutputNodes = (nodes: LGraphNode[]): LGraphNode[] =>\n  nodes.filter(isOutputNode)\n","import { storeToRefs } from 'pinia'\nimport { computed } from 'vue'\n\nimport { useNodeLibrarySidebarTab } from '@/composables/sidebarTabs/useNodeLibrarySidebarTab'\nimport type { LGraphNode } from '@/lib/litegraph/src/litegraph'\nimport { LGraphEventMode, SubgraphNode } from '@/lib/litegraph/src/litegraph'\nimport { useSettingStore } from '@/platform/settings/settingStore'\nimport { useCanvasStore } from '@/renderer/core/canvas/canvasStore'\nimport { useNodeDefStore } from '@/stores/nodeDefStore'\nimport { useNodeHelpStore } from '@/stores/workspace/nodeHelpStore'\nimport { useSidebarTabStore } from '@/stores/workspace/sidebarTabStore'\nimport { isImageNode, isLGraphNode, isLoad3dNode } from '@/utils/litegraphUtil'\nimport { filterOutputNodes } from '@/utils/nodeFilterUtil'\n\nexport interface NodeSelectionState {\n  collapsed: boolean\n  pinned: boolean\n  bypassed: boolean\n}\n\n/**\n * Centralized computed selection state + shared helper actions to avoid duplication\n * between selection toolbox, context menus, and other UI affordances.\n */\nexport function useSelectionState() {\n  const canvasStore = useCanvasStore()\n  const nodeDefStore = useNodeDefStore()\n  const sidebarTabStore = useSidebarTabStore()\n  const nodeHelpStore = useNodeHelpStore()\n  const { id: nodeLibraryTabId } = useNodeLibrarySidebarTab()\n\n  const { selectedItems } = storeToRefs(canvasStore)\n\n  const selectedNodes = computed(() => {\n    return selectedItems.value.filter((i: unknown) =>\n      isLGraphNode(i)\n    ) as LGraphNode[]\n  })\n\n  const nodeDef = computed(() => {\n    if (selectedNodes.value.length !== 1) return null\n    return nodeDefStore.fromLGraphNode(selectedNodes.value[0])\n  })\n\n  const hasAnySelection = computed(() => selectedItems.value.length > 0)\n  const hasSingleSelection = computed(() => selectedItems.value.length === 1)\n  const hasMultipleSelection = computed(() => selectedItems.value.length > 1)\n\n  const isSingleNode = computed(\n    () => hasSingleSelection.value && isLGraphNode(selectedItems.value[0])\n  )\n  const isSingleSubgraph = computed(\n    () =>\n      isSingleNode.value &&\n      (selectedItems.value[0] as LGraphNode)?.isSubgraphNode?.()\n  )\n  const isSingleImageNode = computed(\n    () =>\n      isSingleNode.value && isImageNode(selectedItems.value[0] as LGraphNode)\n  )\n\n  const hasSubgraphs = computed(() =>\n    selectedItems.value.some((i: unknown) => i instanceof SubgraphNode)\n  )\n\n  const hasAny3DNodeSelected = computed(() => {\n    const enable3DViewer = useSettingStore().get('Comfy.Load3D.3DViewerEnable')\n    return (\n      selectedNodes.value.length === 1 &&\n      selectedNodes.value.some(isLoad3dNode) &&\n      enable3DViewer\n    )\n  })\n\n  const hasImageNode = computed(() => isSingleImageNode.value)\n  const hasOutputNodesSelected = computed(\n    () => filterOutputNodes(selectedNodes.value).length > 0\n  )\n\n  // Helper function to compute selection flags (reused by both computed and function)\n  const computeSelectionStatesFromNodes = (\n    nodes: LGraphNode[]\n  ): NodeSelectionState => {\n    if (!nodes.length)\n      return { collapsed: false, pinned: false, bypassed: false }\n    return {\n      collapsed: nodes.some((n) => n.flags?.collapsed),\n      pinned: nodes.some((n) => n.pinned),\n      bypassed: nodes.some((n) => n.mode === LGraphEventMode.BYPASS)\n    }\n  }\n\n  const selectedNodesStates = computed<NodeSelectionState>(() =>\n    computeSelectionStatesFromNodes(selectedNodes.value)\n  )\n\n  // On-demand computation (non-reactive) so callers can fetch fresh flags\n  const computeSelectionFlags = (): NodeSelectionState =>\n    computeSelectionStatesFromNodes(selectedNodes.value)\n\n  /** Toggle node help sidebar/panel for the single selected node (if any). */\n  const showNodeHelp = () => {\n    const def = nodeDef.value\n    if (!def) return\n\n    const isSidebarActive =\n      sidebarTabStore.activeSidebarTabId === nodeLibraryTabId\n    const currentHelpNode: any = nodeHelpStore.currentHelpNode\n    const isSameNodeHelpOpen =\n      isSidebarActive &&\n      nodeHelpStore.isHelpOpen &&\n      currentHelpNode &&\n      currentHelpNode.nodePath === def.nodePath\n\n    if (isSameNodeHelpOpen) {\n      nodeHelpStore.closeHelp()\n      sidebarTabStore.toggleSidebarTab(nodeLibraryTabId)\n      return\n    }\n\n    if (!isSidebarActive) sidebarTabStore.toggleSidebarTab(nodeLibraryTabId)\n    nodeHelpStore.openHelp(def)\n  }\n\n  return {\n    selectedItems,\n    selectedNodes,\n    nodeDef,\n    showNodeHelp,\n    hasAny3DNodeSelected,\n    hasAnySelection,\n    hasSingleSelection,\n    hasMultipleSelection,\n    isSingleNode,\n    isSingleSubgraph,\n    isSingleImageNode,\n    hasSubgraphs,\n    hasImageNode,\n    hasOutputNodesSelected,\n    selectedNodesStates,\n    computeSelectionFlags\n  }\n}\n","<template>\n  <Button\n    v-if=\"isUnpackVisible\"\n    v-tooltip.top=\"{\n      value: t('commands.Comfy_Graph_UnpackSubgraph.label'),\n      showDelay: 1000\n    }\"\n    severity=\"secondary\"\n    data-testid=\"convert-to-subgraph-button\"\n    text\n    @click=\"() => commandStore.execute('Comfy.Graph.UnpackSubgraph')\"\n  >\n    <template #icon>\n      <i-lucide:expand class=\"w-4 h-4\" />\n    </template>\n  </Button>\n  <Button\n    v-else-if=\"isConvertVisible\"\n    v-tooltip.top=\"{\n      value: t('commands.Comfy_Graph_ConvertToSubgraph.label'),\n      showDelay: 1000\n    }\"\n    severity=\"secondary\"\n    data-testid=\"convert-to-subgraph-button\"\n    text\n    @click=\"() => commandStore.execute('Comfy.Graph.ConvertToSubgraph')\"\n  >\n    <template #icon>\n      <i-lucide:shrink />\n    </template>\n  </Button>\n</template>\n\n<script setup lang=\"ts\">\nimport Button from 'primevue/button'\nimport { computed } from 'vue'\nimport { useI18n } from 'vue-i18n'\n\nimport { useSelectionState } from '@/composables/graph/useSelectionState'\nimport { useCommandStore } from '@/stores/commandStore'\n\nconst { t } = useI18n()\nconst commandStore = useCommandStore()\nconst { isSingleSubgraph, hasAnySelection } = useSelectionState()\n\nconst isUnpackVisible = isSingleSubgraph\nconst isConvertVisible = computed(\n  () => hasAnySelection.value && !isSingleSubgraph.value\n)\n</script>\n","<template>\n  <Button\n    v-show=\"isDeletable\"\n    v-tooltip.top=\"{\n      value: t('commands.Comfy_Canvas_DeleteSelectedItems.label'),\n      showDelay: 1000\n    }\"\n    severity=\"secondary\"\n    text\n    icon-class=\"w-4 h-4\"\n    icon=\"pi pi-trash\"\n    data-testid=\"delete-button\"\n    @click=\"() => commandStore.execute('Comfy.Canvas.DeleteSelectedItems')\"\n  />\n</template>\n\n<script setup lang=\"ts\">\nimport Button from 'primevue/button'\nimport { computed } from 'vue'\nimport { useI18n } from 'vue-i18n'\n\nimport { useSelectionState } from '@/composables/graph/useSelectionState'\nimport type { Positionable } from '@/lib/litegraph/src/interfaces'\nimport { useCommandStore } from '@/stores/commandStore'\n\nconst { t } = useI18n()\nconst commandStore = useCommandStore()\nconst { selectedItems } = useSelectionState()\n\nconst isDeletable = computed(() =>\n  selectedItems.value.some((x: Positionable) => x.removable !== false)\n)\n</script>\n","<template>\n  <Button\n    v-tooltip.top=\"{\n      value: t('selectionToolbox.executeButton.tooltip'),\n      showDelay: 1000\n    }\"\n    class=\"dark-theme:bg-[#0B8CE9] bg-[#31B9F4] size-8 !p-0\"\n    text\n    @mouseenter=\"() => handleMouseEnter()\"\n    @mouseleave=\"() => handleMouseLeave()\"\n    @click=\"handleClick\"\n  >\n    <i-lucide:play class=\"fill-path-white w-4 h-4\" />\n  </Button>\n</template>\n\n<script setup lang=\"ts\">\nimport Button from 'primevue/button'\nimport { computed, ref } from 'vue'\nimport { useI18n } from 'vue-i18n'\n\nimport { useSelectionState } from '@/composables/graph/useSelectionState'\nimport type { LGraphNode } from '@/lib/litegraph/src/litegraph'\nimport { useCanvasStore } from '@/renderer/core/canvas/canvasStore'\nimport { useCommandStore } from '@/stores/commandStore'\nimport { isLGraphNode } from '@/utils/litegraphUtil'\nimport { isOutputNode } from '@/utils/nodeFilterUtil'\n\nconst { t } = useI18n()\nconst commandStore = useCommandStore()\nconst canvasStore = useCanvasStore()\nconst { selectedNodes } = useSelectionState()\n\nconst canvas = canvasStore.getCanvas()\nconst buttonHovered = ref(false)\nconst selectedOutputNodes = computed(() =>\n  selectedNodes.value.filter(isLGraphNode).filter(isOutputNode)\n)\n\nfunction outputNodeStokeStyle(this: LGraphNode) {\n  if (\n    this.selected &&\n    this.constructor.nodeData?.output_node &&\n    buttonHovered.value\n  ) {\n    return { color: 'orange', lineWidth: 2, padding: 10 }\n  }\n}\n\nconst handleMouseEnter = () => {\n  buttonHovered.value = true\n  for (const node of selectedOutputNodes.value) {\n    node.strokeStyles['outputNode'] = outputNodeStokeStyle\n  }\n  canvas.setDirty(true)\n}\n\nconst handleMouseLeave = () => {\n  buttonHovered.value = false\n  canvas.setDirty(true)\n}\n\nconst handleClick = async () => {\n  await commandStore.execute('Comfy.QueueSelectedOutputNodes')\n}\n</script>\n<style scoped>\n:deep.fill-path-white > path {\n  fill: white;\n  stroke: unset;\n}\n</style>\n","<template>\n  <Button\n    v-tooltip.top=\"{\n      value:\n        st(`commands.${normalizeI18nKey(command.id)}.label`, '') || undefined,\n      showDelay: 1000\n    }\"\n    severity=\"secondary\"\n    text\n    icon-class=\"w-4 h-4\"\n    :icon=\"typeof command.icon === 'function' ? command.icon() : command.icon\"\n    @click=\"() => commandStore.execute(command.id)\"\n  />\n</template>\n\n<script setup lang=\"ts\">\nimport Button from 'primevue/button'\n\nimport { st } from '@/i18n'\nimport type { ComfyCommand } from '@/stores/commandStore'\nimport { useCommandStore } from '@/stores/commandStore'\nimport { normalizeI18nKey } from '@/utils/formatUtil'\n\ndefineProps<{\n  command: ComfyCommand\n}>()\n\nconst commandStore = useCommandStore()\n</script>\n","<template>\n  <Button\n    v-tooltip.top=\"{\n      value: $t('g.info'),\n      showDelay: 1000\n    }\"\n    data-testid=\"info-button\"\n    text\n    severity=\"secondary\"\n    @click=\"toggleHelp\"\n  >\n    <i-lucide:info class=\"w-4 h-4\" />\n  </Button>\n</template>\n\n<script setup lang=\"ts\">\nimport Button from 'primevue/button'\n\nimport { useSelectionState } from '@/composables/graph/useSelectionState'\n\nconst { showNodeHelp: toggleHelp } = useSelectionState()\n</script>\n","<template>\n  <Button\n    v-tooltip.top=\"{\n      value: t('commands.Comfy_3DViewer_Open3DViewer.label'),\n      showDelay: 1000\n    }\"\n    severity=\"secondary\"\n    text\n    icon=\"pi pi-pencil\"\n    icon-class=\"w-4 h-4\"\n    @click=\"open3DViewer\"\n  />\n</template>\n\n<script setup lang=\"ts\">\nimport Button from 'primevue/button'\n\nimport { t } from '@/i18n'\nimport { useCommandStore } from '@/stores/commandStore'\n\nconst commandStore = useCommandStore()\n\nconst open3DViewer = () => {\n  void commandStore.execute('Comfy.3DViewer.Open3DViewer')\n}\n</script>\n","<template>\n  <Button\n    v-show=\"isSingleImageNode\"\n    v-tooltip.top=\"{\n      value: t('commands.Comfy_MaskEditor_OpenMaskEditor.label'),\n      showDelay: 1000\n    }\"\n    severity=\"secondary\"\n    text\n    @click=\"openMaskEditor\"\n  >\n    <i-comfy:mask class=\"!w-4 !h-4\" />\n  </Button>\n</template>\n\n<script setup lang=\"ts\">\nimport Button from 'primevue/button'\n\nimport { useSelectionState } from '@/composables/graph/useSelectionState'\nimport { t } from '@/i18n'\nimport { useCommandStore } from '@/stores/commandStore'\n\nconst commandStore = useCommandStore()\nconst { isSingleImageNode } = useSelectionState()\n\nconst openMaskEditor = () => {\n  void commandStore.execute('Comfy.MaskEditor.OpenMaskEditor')\n}\n</script>\n","import { computed, ref, watchEffect } from 'vue'\n\nimport type { LGraphNode } from '@/lib/litegraph/src/litegraph'\nimport { useCanvasStore } from '@/renderer/core/canvas/canvasStore'\nimport { isLGraphNode } from '@/utils/litegraphUtil'\n\ninterface RefreshableItem {\n  refresh: () => Promise<void> | void\n}\n\nconst isRefreshableWidget = (widget: unknown): widget is RefreshableItem =>\n  widget != null &&\n  typeof widget === 'object' &&\n  'refresh' in widget &&\n  typeof widget.refresh === 'function'\n\n/**\n * Tracks selected nodes and their refreshable widgets\n */\nexport const useRefreshableSelection = () => {\n  const graphStore = useCanvasStore()\n  const selectedNodes = ref<LGraphNode[]>([])\n\n  watchEffect(() => {\n    selectedNodes.value = graphStore.selectedItems.filter(isLGraphNode)\n  })\n\n  const refreshableWidgets = computed<RefreshableItem[]>(() =>\n    selectedNodes.value.flatMap((node) => {\n      if (!node.widgets) return []\n      const items: RefreshableItem[] = []\n      for (const widget of node.widgets) {\n        if (isRefreshableWidget(widget)) {\n          items.push(widget)\n        }\n      }\n      return items\n    })\n  )\n\n  const isRefreshable = computed(() => refreshableWidgets.value.length > 0)\n\n  async function refreshSelected() {\n    if (!isRefreshable.value) return\n\n    await Promise.all(refreshableWidgets.value.map((item) => item.refresh()))\n  }\n\n  return {\n    isRefreshable,\n    refreshSelected\n  }\n}\n","<template>\n  <Button\n    v-show=\"isRefreshable\"\n    v-tooltip.top=\"t('g.refreshNode')\"\n    severity=\"secondary\"\n    text\n    data-testid=\"refresh-button\"\n    @click=\"refreshSelected\"\n  >\n    <i-lucide:refresh-cw class=\"w-4 h-4\" />\n  </Button>\n</template>\n\n<script setup lang=\"ts\">\nimport Button from 'primevue/button'\nimport { useI18n } from 'vue-i18n'\n\nimport { useRefreshableSelection } from '@/composables/useRefreshableSelection'\n\nconst { t } = useI18n()\nconst { isRefreshable, refreshSelected } = useRefreshableSelection()\n</script>\n","<template>\n  <Button\n    v-show=\"isVisible\"\n    v-tooltip.top=\"{\n      value: t('commands.Comfy_PublishSubgraph.label'),\n      showDelay: 1000\n    }\"\n    severity=\"secondary\"\n    text\n    @click=\"() => commandStore.execute('Comfy.PublishSubgraph')\"\n  >\n    <template #icon>\n      <i-lucide:book-open />\n    </template>\n  </Button>\n</template>\n\n<script setup lang=\"ts\">\nimport Button from 'primevue/button'\nimport { computed } from 'vue'\nimport { useI18n } from 'vue-i18n'\n\nimport { SubgraphNode } from '@/lib/litegraph/src/litegraph'\nimport { useCanvasStore } from '@/renderer/core/canvas/canvasStore'\nimport { useCommandStore } from '@/stores/commandStore'\n\nconst { t } = useI18n()\nconst commandStore = useCommandStore()\nconst canvasStore = useCanvasStore()\n\nconst isVisible = computed(() => {\n  return (\n    canvasStore.selectedItems?.length === 1 &&\n    canvasStore.selectedItems[0] instanceof SubgraphNode\n  )\n})\n</script>\n","import { useRafFn } from '@vueuse/core'\nimport { computed, onUnmounted, ref, watch } from 'vue'\nimport type { Ref } from 'vue'\n\nimport { useSelectedLiteGraphItems } from '@/composables/canvas/useSelectedLiteGraphItems'\nimport { useVueFeatureFlags } from '@/composables/useVueFeatureFlags'\nimport type { ReadOnlyRect } from '@/lib/litegraph/src/interfaces'\nimport { LGraphNode } from '@/lib/litegraph/src/litegraph'\nimport { useCanvasStore } from '@/renderer/core/canvas/canvasStore'\nimport { layoutStore } from '@/renderer/core/layout/store/layoutStore'\nimport { isLGraphGroup, isLGraphNode } from '@/utils/litegraphUtil'\nimport { computeUnionBounds } from '@/utils/mathUtil'\n\n/**\n * Manages the position of the selection toolbox independently.\n * Uses CSS custom properties for performant transform updates.\n */\n\n// Shared signals for auxiliary UI (e.g., MoreOptions) to coordinate hide/restore\nexport const moreOptionsOpen = ref(false)\nexport const forceCloseMoreOptionsSignal = ref(0)\nexport const restoreMoreOptionsSignal = ref(0)\nexport const moreOptionsRestorePending = ref(false)\nlet moreOptionsWasOpenBeforeDrag = false\nlet moreOptionsSelectionSignature: string | null = null\n\nfunction buildSelectionSignature(\n  store: ReturnType<typeof useCanvasStore>\n): string | null {\n  const c = store.canvas\n  if (!c) return null\n  const items = Array.from(c.selectedItems)\n  if (items.length !== 1) return null\n  const item = items[0]\n  if (isLGraphNode(item)) return `N:${item.id}`\n  if (isLGraphGroup(item)) return `G:${item.id}`\n  return null\n}\n\nfunction currentSelectionMatchesSignature(\n  store: ReturnType<typeof useCanvasStore>\n) {\n  if (!moreOptionsSelectionSignature) return false\n  return buildSelectionSignature(store) === moreOptionsSelectionSignature\n}\n\nexport function useSelectionToolboxPosition(\n  toolboxRef: Ref<HTMLElement | undefined>\n) {\n  const canvasStore = useCanvasStore()\n  const lgCanvas = canvasStore.getCanvas()\n  const { getSelectableItems } = useSelectedLiteGraphItems()\n  const { shouldRenderVueNodes } = useVueFeatureFlags()\n\n  // World position of selection center\n  const worldPosition = ref({ x: 0, y: 0 })\n\n  const visible = ref(false)\n\n  /**\n   * Update position based on selection\n   */\n  const updateSelectionBounds = () => {\n    const selectableItems = getSelectableItems()\n\n    if (!selectableItems.size) {\n      visible.value = false\n      return\n    }\n\n    visible.value = true\n\n    // Get bounds for all selected items\n    const allBounds: ReadOnlyRect[] = []\n    for (const item of selectableItems) {\n      // Skip items without valid IDs\n      if (item.id == null) continue\n\n      if (shouldRenderVueNodes.value && typeof item.id === 'string') {\n        // Use layout store for Vue nodes (only works with string IDs)\n        const layout = layoutStore.getNodeLayoutRef(item.id).value\n        if (layout) {\n          allBounds.push([\n            layout.bounds.x,\n            layout.bounds.y,\n            layout.bounds.width,\n            layout.bounds.height\n          ])\n        }\n      } else {\n        // Fallback to LiteGraph bounds for regular nodes or non-string IDs\n        if (item instanceof LGraphNode) {\n          const bounds = item.getBounding()\n          allBounds.push([bounds[0], bounds[1], bounds[2], bounds[3]] as const)\n        }\n      }\n    }\n\n    // Compute union bounds\n    const unionBounds = computeUnionBounds(allBounds)\n    if (!unionBounds) return\n\n    worldPosition.value = {\n      x: unionBounds.x + unionBounds.width / 2,\n      // createBounds() applied a default padding of 10px\n      // so adjust Y to maintain visual consistency\n      y: unionBounds.y - 10\n    }\n\n    updateTransform()\n  }\n\n  const updateTransform = () => {\n    if (!visible.value) return\n\n    const { scale, offset } = lgCanvas.ds\n    const canvasRect = lgCanvas.canvas.getBoundingClientRect()\n\n    const screenX =\n      (worldPosition.value.x + offset[0]) * scale + canvasRect.left\n    const screenY = (worldPosition.value.y + offset[1]) * scale + canvasRect.top\n\n    // Update CSS custom properties directly for best performance\n    if (toolboxRef.value) {\n      toolboxRef.value.style.setProperty('--tb-x', `${screenX}px`)\n      toolboxRef.value.style.setProperty('--tb-y', `${screenY}px`)\n    }\n  }\n\n  // Sync with canvas transform\n  const { resume: startSync, pause: stopSync } = useRafFn(updateTransform)\n\n  // Watch for selection changes\n  watch(\n    () => canvasStore.getCanvas().state.selectionChanged,\n    (changed) => {\n      if (changed) {\n        if (moreOptionsRestorePending.value || moreOptionsSelectionSignature) {\n          moreOptionsRestorePending.value = false\n          moreOptionsWasOpenBeforeDrag = false\n          if (!moreOptionsOpen.value) {\n            moreOptionsSelectionSignature = null\n          } else {\n            moreOptionsSelectionSignature = buildSelectionSignature(canvasStore)\n          }\n        }\n        updateSelectionBounds()\n        canvasStore.getCanvas().state.selectionChanged = false\n        if (visible.value) {\n          startSync()\n        } else {\n          stopSync()\n        }\n      }\n    },\n    { immediate: true }\n  )\n  watch(\n    () => moreOptionsOpen.value,\n    (v) => {\n      if (v) {\n        moreOptionsSelectionSignature = buildSelectionSignature(canvasStore)\n      } else if (!canvasStore.canvas?.state?.draggingItems) {\n        moreOptionsSelectionSignature = null\n        if (moreOptionsRestorePending.value)\n          moreOptionsRestorePending.value = false\n      }\n    }\n  )\n\n  const handleDragStateChange = (dragging: boolean) => {\n    if (dragging) {\n      handleDragStart()\n      return\n    }\n\n    handleDragEnd()\n  }\n\n  const handleDragStart = () => {\n    visible.value = false\n\n    // Early return if more options wasn't open\n    if (!moreOptionsOpen.value) {\n      moreOptionsRestorePending.value = false\n      moreOptionsWasOpenBeforeDrag = false\n      return\n    }\n\n    // Handle more options cleanup\n    const currentSig = buildSelectionSignature(canvasStore)\n    const selectionChanged = currentSig !== moreOptionsSelectionSignature\n\n    if (selectionChanged) {\n      moreOptionsSelectionSignature = null\n    }\n    moreOptionsOpen.value = false\n    moreOptionsWasOpenBeforeDrag = true\n    moreOptionsRestorePending.value = !!moreOptionsSelectionSignature\n\n    if (moreOptionsRestorePending.value) {\n      forceCloseMoreOptionsSignal.value++\n      return\n    }\n\n    moreOptionsWasOpenBeforeDrag = false\n  }\n\n  const handleDragEnd = () => {\n    requestAnimationFrame(() => {\n      updateSelectionBounds()\n\n      const selectionMatches = currentSelectionMatchesSignature(canvasStore)\n      const shouldRestore =\n        moreOptionsWasOpenBeforeDrag &&\n        visible.value &&\n        moreOptionsRestorePending.value &&\n        selectionMatches\n\n      // Single point of assignment for each ref\n      moreOptionsRestorePending.value =\n        shouldRestore && moreOptionsRestorePending.value\n      moreOptionsWasOpenBeforeDrag = false\n\n      if (shouldRestore) {\n        restoreMoreOptionsSignal.value++\n      }\n    })\n  }\n\n  // Unified dragging state - combines both LiteGraph and Vue node dragging\n  const isDragging = computed((): boolean => {\n    const litegraphDragging = canvasStore.canvas?.state?.draggingItems ?? false\n    const vueNodeDragging =\n      shouldRenderVueNodes.value && layoutStore.isDraggingVueNodes.value\n    return litegraphDragging || vueNodeDragging\n  })\n\n  watch(isDragging, handleDragStateChange)\n\n  onUnmounted(() => {\n    resetMoreOptionsState()\n  })\n\n  return {\n    visible\n  }\n}\n\n// External cleanup utility to be called when SelectionToolbox component unmounts\nfunction resetMoreOptionsState() {\n  moreOptionsOpen.value = false\n  moreOptionsRestorePending.value = false\n  moreOptionsWasOpenBeforeDrag = false\n  moreOptionsSelectionSignature = null\n}\n","import { computed } from 'vue'\n\nimport { useSelectionState } from '@/composables/graph/useSelectionState'\nimport { LGraphGroup } from '@/lib/litegraph/src/litegraph'\nimport { useSettingStore } from '@/platform/settings/settingStore'\nimport { useTitleEditorStore } from '@/renderer/core/canvas/canvasStore'\nimport { app } from '@/scripts/app'\n\n/**\n * Composable encapsulating logic for framing currently selected nodes into a group.\n */\nexport function useFrameNodes() {\n  const settingStore = useSettingStore()\n  const titleEditorStore = useTitleEditorStore()\n  const { hasMultipleSelection } = useSelectionState()\n\n  const canFrame = computed(() => hasMultipleSelection.value)\n\n  const frameNodes = () => {\n    const { canvas } = app\n    if (!canvas.selectedItems?.size) return\n    const group = new LGraphGroup()\n    const padding = settingStore.get('Comfy.GroupSelectedNodes.Padding')\n    group.resizeTo(canvas.selectedItems, padding)\n    canvas.graph?.add(group)\n    titleEditorStore.titleEditorTarget = group\n  }\n\n  return { frameNodes, canFrame }\n}\n","<template>\n  <Button\n    v-tooltip.top=\"{\n      value: $t('g.frameNodes'),\n      showDelay: 1000\n    }\"\n    class=\"frame-nodes-button\"\n    text\n    severity=\"secondary\"\n    @click=\"frameNodes\"\n  >\n    <i-lucide:frame class=\"w-4 h-4\" />\n  </Button>\n</template>\n\n<script setup lang=\"ts\">\nimport Button from 'primevue/button'\n\nimport { useFrameNodes } from '@/composables/graph/useFrameNodes'\n\nconst { frameNodes } = useFrameNodes()\n</script>\n","// call nextTick on all changeTracker\nimport { useWorkflowStore } from '@/platform/workflow/management/stores/workflowStore'\nimport { useCanvasStore } from '@/renderer/core/canvas/canvasStore'\n\n/**\n * Composable for refreshing nodes in the graph\n * */\nexport function useCanvasRefresh() {\n  const canvasStore = useCanvasStore()\n  const workflowStore = useWorkflowStore()\n  const refreshCanvas = () => {\n    canvasStore.canvas?.emitBeforeChange()\n    canvasStore.canvas?.setDirty(true, true)\n    canvasStore.canvas?.graph?.afterChange()\n    canvasStore.canvas?.emitAfterChange()\n    workflowStore.activeWorkflow?.changeTracker?.checkState()\n  }\n\n  return {\n    refreshCanvas\n  }\n}\n","import { computed } from 'vue'\nimport { useI18n } from 'vue-i18n'\n\nimport {\n  LGraphCanvas,\n  LGraphNode,\n  LiteGraph,\n  RenderShape,\n  isColorable\n} from '@/lib/litegraph/src/litegraph'\nimport { useCanvasStore } from '@/renderer/core/canvas/canvasStore'\nimport { useColorPaletteStore } from '@/stores/workspace/colorPaletteStore'\nimport { adjustColor } from '@/utils/colorUtil'\n\nimport { useCanvasRefresh } from './useCanvasRefresh'\n\ninterface ColorOption {\n  name: string\n  localizedName: string\n  value: {\n    dark: string\n    light: string\n  }\n}\n\ninterface ShapeOption {\n  name: string\n  localizedName: string\n  value: RenderShape\n}\n\n/**\n * Composable for handling node color and shape customization\n */\nexport function useNodeCustomization() {\n  const { t } = useI18n()\n  const canvasStore = useCanvasStore()\n  const colorPaletteStore = useColorPaletteStore()\n  const canvasRefresh = useCanvasRefresh()\n  const isLightTheme = computed(\n    () => colorPaletteStore.completedActivePalette.light_theme\n  )\n\n  const toLightThemeColor = (color: string) =>\n    adjustColor(color, { lightness: 0.5 })\n\n  // Color options\n  const NO_COLOR_OPTION: ColorOption = {\n    name: 'noColor',\n    localizedName: t('color.noColor'),\n    value: {\n      dark: LiteGraph.NODE_DEFAULT_BGCOLOR,\n      light: toLightThemeColor(LiteGraph.NODE_DEFAULT_BGCOLOR)\n    }\n  }\n\n  const colorOptions: ColorOption[] = [\n    NO_COLOR_OPTION,\n    ...Object.entries(LGraphCanvas.node_colors).map(([name, color]) => ({\n      name,\n      localizedName: t(`color.${name}`),\n      value: {\n        dark: color.bgcolor,\n        light: toLightThemeColor(color.bgcolor)\n      }\n    }))\n  ]\n\n  // Shape options\n  const shapeOptions: ShapeOption[] = [\n    {\n      name: 'default',\n      localizedName: t('shape.default'),\n      value: RenderShape.ROUND\n    },\n    {\n      name: 'box',\n      localizedName: t('shape.box'),\n      value: RenderShape.BOX\n    },\n    {\n      name: 'card',\n      localizedName: t('shape.CARD'),\n      value: RenderShape.CARD\n    }\n  ]\n\n  const applyColor = (colorOption: ColorOption | null) => {\n    const colorName = colorOption?.name ?? NO_COLOR_OPTION.name\n    const canvasColorOption =\n      colorName === NO_COLOR_OPTION.name\n        ? null\n        : LGraphCanvas.node_colors[colorName]\n\n    for (const item of canvasStore.selectedItems) {\n      if (isColorable(item)) {\n        item.setColorOption(canvasColorOption)\n      }\n    }\n\n    canvasRefresh.refreshCanvas()\n  }\n\n  const applyShape = (shapeOption: ShapeOption) => {\n    const selectedNodes = Array.from(canvasStore.selectedItems).filter(\n      (item): item is LGraphNode => item instanceof LGraphNode\n    )\n\n    if (selectedNodes.length === 0) {\n      return\n    }\n\n    selectedNodes.forEach((node) => {\n      node.shape = shapeOption.value\n    })\n\n    canvasRefresh.refreshCanvas()\n  }\n\n  const getCurrentColor = (): ColorOption | null => {\n    const selectedItems = Array.from(canvasStore.selectedItems)\n    if (selectedItems.length === 0) return null\n\n    // Get color from first colorable item\n    const firstColorableItem = selectedItems.find((item) => isColorable(item))\n    if (!firstColorableItem || !isColorable(firstColorableItem)) return null\n\n    // Get the current color option from the colorable item\n    const currentColorOption = firstColorableItem.getColorOption()\n    const currentBgColor = currentColorOption?.bgcolor ?? null\n\n    // Find matching color option\n    return (\n      colorOptions.find(\n        (option) =>\n          option.value.dark === currentBgColor ||\n          option.value.light === currentBgColor\n      ) ?? NO_COLOR_OPTION\n    )\n  }\n\n  const getCurrentShape = (): ShapeOption | null => {\n    const selectedNodes = Array.from(canvasStore.selectedItems).filter(\n      (item): item is LGraphNode => item instanceof LGraphNode\n    )\n\n    if (selectedNodes.length === 0) return null\n\n    const firstNode = selectedNodes[0]\n    const currentShape = firstNode.shape ?? RenderShape.ROUND\n\n    return (\n      shapeOptions.find((option) => option.value === currentShape) ??\n      shapeOptions[0]\n    )\n  }\n\n  return {\n    colorOptions,\n    shapeOptions,\n    applyColor,\n    applyShape,\n    getCurrentColor,\n    getCurrentShape,\n    isLightTheme\n  }\n}\n","import { useI18n } from 'vue-i18n'\n\nimport {\n  LGraphEventMode,\n  type LGraphGroup,\n  type LGraphNode\n} from '@/lib/litegraph/src/litegraph'\nimport { useSettingStore } from '@/platform/settings/settingStore'\nimport { useWorkflowStore } from '@/platform/workflow/management/stores/workflowStore'\nimport { useCanvasStore } from '@/renderer/core/canvas/canvasStore'\n\nimport { useCanvasRefresh } from './useCanvasRefresh'\nimport type { MenuOption } from './useMoreOptionsMenu'\nimport { useNodeCustomization } from './useNodeCustomization'\n\n/**\n * Composable for group-related menu operations\n */\nexport function useGroupMenuOptions() {\n  const { t } = useI18n()\n  const canvasStore = useCanvasStore()\n  const workflowStore = useWorkflowStore()\n  const settingStore = useSettingStore()\n  const canvasRefresh = useCanvasRefresh()\n  const { shapeOptions, colorOptions, isLightTheme } = useNodeCustomization()\n\n  const getFitGroupToNodesOption = (groupContext: LGraphGroup): MenuOption => ({\n    label: 'Fit Group To Nodes',\n    icon: 'icon-[lucide--move-diagonal-2]',\n    action: () => {\n      try {\n        groupContext.recomputeInsideNodes()\n      } catch (e) {\n        console.warn('Failed to recompute group nodes:', e)\n        return\n      }\n\n      const padding = settingStore.get('Comfy.GroupSelectedNodes.Padding')\n      groupContext.resizeTo(groupContext.children, padding)\n      groupContext.graph?.change()\n      canvasStore.canvas?.setDirty(true, true)\n      workflowStore.activeWorkflow?.changeTracker?.checkState()\n    }\n  })\n\n  const getGroupShapeOptions = (\n    groupContext: LGraphGroup,\n    bump: () => void\n  ): MenuOption => ({\n    label: t('contextMenu.Shape'),\n    icon: 'icon-[lucide--box]',\n    hasSubmenu: true,\n    submenu: shapeOptions.map((shape) => ({\n      label: shape.localizedName,\n      action: () => {\n        const nodes = (groupContext.nodes || []) as LGraphNode[]\n        nodes.forEach((node) => (node.shape = shape.value))\n        canvasRefresh.refreshCanvas()\n        bump()\n      }\n    }))\n  })\n\n  const getGroupColorOptions = (\n    groupContext: LGraphGroup,\n    bump: () => void\n  ): MenuOption => ({\n    label: t('contextMenu.Color'),\n    icon: 'icon-[lucide--palette]',\n    hasSubmenu: true,\n    submenu: colorOptions.map((colorOption) => ({\n      label: colorOption.localizedName,\n      color: isLightTheme.value\n        ? colorOption.value.light\n        : colorOption.value.dark,\n      action: () => {\n        groupContext.color = isLightTheme.value\n          ? colorOption.value.light\n          : colorOption.value.dark\n        canvasRefresh.refreshCanvas()\n        bump()\n      }\n    }))\n  })\n\n  const getGroupModeOptions = (\n    groupContext: LGraphGroup,\n    bump: () => void\n  ): MenuOption[] => {\n    const options: MenuOption[] = []\n\n    try {\n      groupContext.recomputeInsideNodes()\n    } catch (e) {\n      console.warn('Failed to recompute group nodes for mode options:', e)\n      return options\n    }\n\n    const groupNodes = (groupContext.nodes || []) as LGraphNode[]\n    if (!groupNodes.length) return options\n\n    // Check if all nodes have the same mode\n    let allSame = true\n    for (let i = 1; i < groupNodes.length; i++) {\n      if (groupNodes[i].mode !== groupNodes[0].mode) {\n        allSame = false\n        break\n      }\n    }\n\n    const createModeAction = (label: string, mode: LGraphEventMode) => ({\n      label: t(`selectionToolbox.${label}`),\n      icon:\n        mode === LGraphEventMode.BYPASS\n          ? 'icon-[lucide--ban]'\n          : mode === LGraphEventMode.NEVER\n            ? 'icon-[lucide--zap-off]'\n            : 'icon-[lucide--play]',\n      action: () => {\n        groupNodes.forEach((n) => {\n          n.mode = mode\n        })\n        canvasStore.canvas?.setDirty(true, true)\n        groupContext.graph?.change()\n        workflowStore.activeWorkflow?.changeTracker?.checkState()\n        bump()\n      }\n    })\n\n    if (allSame) {\n      const current = groupNodes[0].mode\n      switch (current) {\n        case LGraphEventMode.ALWAYS:\n          options.push(\n            createModeAction('Set Group Nodes to Never', LGraphEventMode.NEVER)\n          )\n          options.push(\n            createModeAction('Bypass Group Nodes', LGraphEventMode.BYPASS)\n          )\n          break\n        case LGraphEventMode.NEVER:\n          options.push(\n            createModeAction(\n              'Set Group Nodes to Always',\n              LGraphEventMode.ALWAYS\n            )\n          )\n          options.push(\n            createModeAction('Bypass Group Nodes', LGraphEventMode.BYPASS)\n          )\n          break\n        case LGraphEventMode.BYPASS:\n          options.push(\n            createModeAction(\n              'Set Group Nodes to Always',\n              LGraphEventMode.ALWAYS\n            )\n          )\n          options.push(\n            createModeAction('Set Group Nodes to Never', LGraphEventMode.NEVER)\n          )\n          break\n        default:\n          options.push(\n            createModeAction(\n              'Set Group Nodes to Always',\n              LGraphEventMode.ALWAYS\n            )\n          )\n          options.push(\n            createModeAction('Set Group Nodes to Never', LGraphEventMode.NEVER)\n          )\n          options.push(\n            createModeAction('Bypass Group Nodes', LGraphEventMode.BYPASS)\n          )\n          break\n      }\n    } else {\n      options.push(\n        createModeAction('Set Group Nodes to Always', LGraphEventMode.ALWAYS)\n      )\n      options.push(\n        createModeAction('Set Group Nodes to Never', LGraphEventMode.NEVER)\n      )\n      options.push(\n        createModeAction('Bypass Group Nodes', LGraphEventMode.BYPASS)\n      )\n    }\n\n    return options\n  }\n\n  return {\n    getFitGroupToNodesOption,\n    getGroupShapeOptions,\n    getGroupColorOptions,\n    getGroupModeOptions\n  }\n}\n","import { useI18n } from 'vue-i18n'\n\nimport { downloadFile } from '@/base/common/downloadUtil'\nimport { useCommandStore } from '@/stores/commandStore'\n\nimport type { MenuOption } from './useMoreOptionsMenu'\n\n/**\n * Composable for image-related menu operations\n */\nexport function useImageMenuOptions() {\n  const { t } = useI18n()\n\n  const openMaskEditor = () => {\n    const commandStore = useCommandStore()\n    void commandStore.execute('Comfy.MaskEditor.OpenMaskEditor')\n  }\n\n  const openImage = (node: any) => {\n    if (!node?.imgs?.length) return\n    const img = node.imgs[node.imageIndex ?? 0]\n    if (!img) return\n    const url = new URL(img.src)\n    url.searchParams.delete('preview')\n    window.open(url.toString(), '_blank')\n  }\n\n  const copyImage = async (node: any) => {\n    if (!node?.imgs?.length) return\n    const img = node.imgs[node.imageIndex ?? 0]\n    if (!img) return\n\n    const canvas = document.createElement('canvas')\n    const ctx = canvas.getContext('2d')\n    if (!ctx) return\n\n    canvas.width = img.naturalWidth\n    canvas.height = img.naturalHeight\n    ctx.drawImage(img, 0, 0)\n\n    try {\n      const blob = await new Promise<Blob | null>((resolve) => {\n        canvas.toBlob(resolve, 'image/png')\n      })\n\n      if (!blob) {\n        console.warn('Failed to create image blob')\n        return\n      }\n\n      // Check if clipboard API is available\n      if (!navigator.clipboard?.write) {\n        console.warn('Clipboard API not available')\n        return\n      }\n\n      await navigator.clipboard.write([\n        new ClipboardItem({ 'image/png': blob })\n      ])\n    } catch (error) {\n      console.error('Failed to copy image to clipboard:', error)\n    }\n  }\n\n  const saveImage = (node: any) => {\n    if (!node?.imgs?.length) return\n    const img = node.imgs[node.imageIndex ?? 0]\n    if (!img) return\n\n    try {\n      const url = new URL(img.src)\n      url.searchParams.delete('preview')\n      downloadFile(url.toString())\n    } catch (error) {\n      console.error('Failed to save image:', error)\n    }\n  }\n\n  const getImageMenuOptions = (node: any): MenuOption[] => {\n    if (!node?.imgs?.length) return []\n\n    return [\n      {\n        label: t('contextMenu.Open in Mask Editor'),\n        action: () => openMaskEditor()\n      },\n      {\n        label: t('contextMenu.Open Image'),\n        icon: 'icon-[lucide--external-link]',\n        action: () => openImage(node)\n      },\n      {\n        label: t('contextMenu.Copy Image'),\n        icon: 'icon-[lucide--copy]',\n        action: () => copyImage(node)\n      },\n      {\n        label: t('contextMenu.Save Image'),\n        icon: 'icon-[lucide--download]',\n        action: () => saveImage(node)\n      }\n    ]\n  }\n\n  return {\n    getImageMenuOptions\n  }\n}\n","import { useSelectedLiteGraphItems } from '@/composables/canvas/useSelectedLiteGraphItems'\nimport { LGraphEventMode } from '@/lib/litegraph/src/litegraph'\nimport { useWorkflowStore } from '@/platform/workflow/management/stores/workflowStore'\nimport { app } from '@/scripts/app'\nimport { useCommandStore } from '@/stores/commandStore'\nimport { filterOutputNodes } from '@/utils/nodeFilterUtil'\n\n/**\n * Composable for handling node information and utility operations\n */\nexport function useSelectedNodeActions() {\n  const { getSelectedNodes, toggleSelectedNodesMode } =\n    useSelectedLiteGraphItems()\n  const commandStore = useCommandStore()\n  const workflowStore = useWorkflowStore()\n\n  const adjustNodeSize = () => {\n    const selectedNodes = getSelectedNodes()\n\n    selectedNodes.forEach((node) => {\n      const optimalSize = node.computeSize()\n      node.setSize([optimalSize[0], optimalSize[1]])\n    })\n\n    app.canvas.setDirty(true, true)\n    workflowStore.activeWorkflow?.changeTracker?.checkState()\n  }\n\n  const toggleNodeCollapse = () => {\n    const selectedNodes = getSelectedNodes()\n    selectedNodes.forEach((node) => {\n      node.collapse()\n    })\n\n    app.canvas.setDirty(true, true)\n    workflowStore.activeWorkflow?.changeTracker?.checkState()\n  }\n\n  const toggleNodePin = () => {\n    const selectedNodes = getSelectedNodes()\n    selectedNodes.forEach((node) => {\n      node.pin(!node.pinned)\n    })\n\n    app.canvas.setDirty(true, true)\n    workflowStore.activeWorkflow?.changeTracker?.checkState()\n  }\n\n  const toggleNodeBypass = () => {\n    toggleSelectedNodesMode(LGraphEventMode.BYPASS)\n    app.canvas.setDirty(true, true)\n  }\n\n  const runBranch = async () => {\n    const selectedNodes = getSelectedNodes()\n    const selectedOutputNodes = filterOutputNodes(selectedNodes)\n    if (selectedOutputNodes.length === 0) return\n    await commandStore.execute('Comfy.QueueSelectedOutputNodes')\n  }\n\n  return {\n    adjustNodeSize,\n    toggleNodeCollapse,\n    toggleNodePin,\n    toggleNodeBypass,\n    runBranch\n  }\n}\n","import { computed } from 'vue'\nimport { useI18n } from 'vue-i18n'\n\nimport type { MenuOption } from './useMoreOptionsMenu'\nimport { useNodeCustomization } from './useNodeCustomization'\nimport { useSelectedNodeActions } from './useSelectedNodeActions'\nimport type { NodeSelectionState } from './useSelectionState'\n\n/**\n * Composable for node-related menu operations\n */\nexport function useNodeMenuOptions() {\n  const { t } = useI18n()\n  const { shapeOptions, applyShape, applyColor, colorOptions, isLightTheme } =\n    useNodeCustomization()\n  const {\n    adjustNodeSize,\n    toggleNodeCollapse,\n    toggleNodePin,\n    toggleNodeBypass,\n    runBranch\n  } = useSelectedNodeActions()\n\n  const shapeSubmenu = computed(() =>\n    shapeOptions.map((shape) => ({\n      label: shape.localizedName,\n      action: () => applyShape(shape)\n    }))\n  )\n\n  const colorSubmenu = computed(() => {\n    return colorOptions.map((colorOption) => ({\n      label: colorOption.localizedName,\n      color: isLightTheme.value\n        ? colorOption.value.light\n        : colorOption.value.dark,\n      action: () =>\n        applyColor(colorOption.name === 'noColor' ? null : colorOption)\n    }))\n  })\n\n  const getAdjustSizeOption = (): MenuOption => ({\n    label: t('contextMenu.Adjust Size'),\n    icon: 'icon-[lucide--move-diagonal-2]',\n    action: adjustNodeSize\n  })\n\n  const getNodeVisualOptions = (\n    states: NodeSelectionState,\n    bump: () => void\n  ): MenuOption[] => [\n    {\n      label: states.collapsed\n        ? t('contextMenu.Expand Node')\n        : t('contextMenu.Minimize Node'),\n      icon: states.collapsed\n        ? 'icon-[lucide--maximize-2]'\n        : 'icon-[lucide--minimize-2]',\n      action: () => {\n        toggleNodeCollapse()\n        bump()\n      }\n    },\n    {\n      label: t('contextMenu.Shape'),\n      icon: 'icon-[lucide--box]',\n      hasSubmenu: true,\n      submenu: shapeSubmenu.value,\n      action: () => {}\n    },\n    {\n      label: t('contextMenu.Color'),\n      icon: 'icon-[lucide--palette]',\n      hasSubmenu: true,\n      submenu: colorSubmenu.value,\n      action: () => {}\n    }\n  ]\n\n  const getPinOption = (\n    states: NodeSelectionState,\n    bump: () => void\n  ): MenuOption => ({\n    label: states.pinned ? t('contextMenu.Unpin') : t('contextMenu.Pin'),\n    icon: states.pinned ? 'icon-[lucide--pin-off]' : 'icon-[lucide--pin]',\n    action: () => {\n      toggleNodePin()\n      bump()\n    }\n  })\n\n  const getBypassOption = (\n    states: NodeSelectionState,\n    bump: () => void\n  ): MenuOption => ({\n    label: states.bypassed\n      ? t('contextMenu.Remove Bypass')\n      : t('contextMenu.Bypass'),\n    icon: states.bypassed ? 'icon-[lucide--zap-off]' : 'icon-[lucide--ban]',\n    shortcut: 'Ctrl+B',\n    action: () => {\n      toggleNodeBypass()\n      bump()\n    }\n  })\n\n  const getRunBranchOption = (): MenuOption => ({\n    label: t('contextMenu.Run Branch'),\n    icon: 'icon-[lucide--play]',\n    action: runBranch\n  })\n\n  const getNodeInfoOption = (showNodeHelp: () => void): MenuOption => ({\n    label: t('contextMenu.Node Info'),\n    icon: 'icon-[lucide--info]',\n    action: showNodeHelp\n  })\n\n  return {\n    getNodeInfoOption,\n    getAdjustSizeOption,\n    getNodeVisualOptions,\n    getPinOption,\n    getBypassOption,\n    getRunBranchOption,\n    colorSubmenu\n  }\n}\n","import { useI18n } from 'vue-i18n'\n\nimport type { Direction } from '@/lib/litegraph/src/interfaces'\nimport { alignNodes, distributeNodes } from '@/lib/litegraph/src/utils/arrange'\nimport { useCanvasStore } from '@/renderer/core/canvas/canvasStore'\nimport { isLGraphNode } from '@/utils/litegraphUtil'\n\nimport { useCanvasRefresh } from './useCanvasRefresh'\n\ninterface AlignOption {\n  name: string\n  localizedName: string\n  value: Direction\n  icon: string\n}\n\ninterface DistributeOption {\n  name: string\n  localizedName: string\n  value: boolean // true for horizontal, false for vertical\n  icon: string\n}\n\n/**\n * Composable for handling node alignment and distribution\n */\nexport function useNodeArrangement() {\n  const { t } = useI18n()\n  const canvasStore = useCanvasStore()\n  const canvasRefresh = useCanvasRefresh()\n  const alignOptions: AlignOption[] = [\n    {\n      name: 'top',\n      localizedName: t('contextMenu.Top'),\n      value: 'top',\n      icon: 'icon-[lucide--align-start-vertical]'\n    },\n    {\n      name: 'bottom',\n      localizedName: t('contextMenu.Bottom'),\n      value: 'bottom',\n      icon: 'icon-[lucide--align-end-vertical]'\n    },\n    {\n      name: 'left',\n      localizedName: t('contextMenu.Left'),\n      value: 'left',\n      icon: 'icon-[lucide--align-start-horizontal]'\n    },\n    {\n      name: 'right',\n      localizedName: t('contextMenu.Right'),\n      value: 'right',\n      icon: 'icon-[lucide--align-end-horizontal]'\n    }\n  ]\n\n  const distributeOptions: DistributeOption[] = [\n    {\n      name: 'horizontal',\n      localizedName: t('contextMenu.Horizontal'),\n      value: true,\n      icon: 'icon-[lucide--align-center-horizontal]'\n    },\n    {\n      name: 'vertical',\n      localizedName: t('contextMenu.Vertical'),\n      value: false,\n      icon: 'icon-[lucide--align-center-vertical]'\n    }\n  ]\n\n  const applyAlign = (alignOption: AlignOption) => {\n    const selectedNodes = Array.from(canvasStore.selectedItems).filter((item) =>\n      isLGraphNode(item)\n    )\n\n    if (selectedNodes.length === 0) {\n      return\n    }\n\n    alignNodes(selectedNodes, alignOption.value)\n\n    canvasRefresh.refreshCanvas()\n  }\n\n  const applyDistribute = (distributeOption: DistributeOption) => {\n    const selectedNodes = Array.from(canvasStore.selectedItems).filter((item) =>\n      isLGraphNode(item)\n    )\n\n    if (selectedNodes.length < 2) {\n      return\n    }\n\n    distributeNodes(selectedNodes, distributeOption.value)\n    canvasRefresh.refreshCanvas()\n  }\n\n  return {\n    alignOptions,\n    distributeOptions,\n    applyAlign,\n    applyDistribute\n  }\n}\n","// import { useSelectedLiteGraphItems } from '@/composables/canvas/useSelectedLiteGraphItems' // Unused for now\nimport { t } from '@/i18n'\nimport { LGraphNode } from '@/lib/litegraph/src/litegraph'\nimport { useToastStore } from '@/platform/updates/common/toastStore'\nimport { useWorkflowStore } from '@/platform/workflow/management/stores/workflowStore'\nimport {\n  useCanvasStore,\n  useTitleEditorStore\n} from '@/renderer/core/canvas/canvasStore'\nimport { app } from '@/scripts/app'\nimport { useDialogService } from '@/services/dialogService'\n\n/**\n * Composable for handling basic selection operations like copy, paste, duplicate, delete, rename\n */\nexport function useSelectionOperations() {\n  // const { getSelectedNodes } = useSelectedLiteGraphItems() // Unused for now\n  const canvasStore = useCanvasStore()\n  const toastStore = useToastStore()\n  const dialogService = useDialogService()\n  const titleEditorStore = useTitleEditorStore()\n  const workflowStore = useWorkflowStore()\n\n  const copySelection = () => {\n    const canvas = app.canvas\n    if (!canvas.selectedItems || canvas.selectedItems.size === 0) {\n      toastStore.add({\n        severity: 'warn',\n        summary: t('g.nothingToCopy'),\n        detail: t('g.selectItemsToCopy'),\n        life: 3000\n      })\n      return\n    }\n\n    canvas.copyToClipboard()\n    toastStore.add({\n      severity: 'success',\n      summary: t('g.copied'),\n      detail: t('g.itemsCopiedToClipboard'),\n      life: 2000\n    })\n  }\n\n  const pasteSelection = () => {\n    const canvas = app.canvas\n    canvas.pasteFromClipboard({ connectInputs: false })\n\n    // Trigger change tracking\n    workflowStore.activeWorkflow?.changeTracker?.checkState()\n  }\n\n  const duplicateSelection = () => {\n    const canvas = app.canvas\n    if (!canvas.selectedItems || canvas.selectedItems.size === 0) {\n      toastStore.add({\n        severity: 'warn',\n        summary: t('g.nothingToDuplicate'),\n        detail: t('g.selectItemsToDuplicate'),\n        life: 3000\n      })\n      return\n    }\n\n    // Copy current selection\n    canvas.copyToClipboard()\n\n    // Clear selection to avoid confusion\n    canvas.selectedItems.clear()\n    canvasStore.updateSelectedItems()\n\n    // Paste to create duplicates\n    canvas.pasteFromClipboard({ connectInputs: false })\n\n    // Trigger change tracking\n    workflowStore.activeWorkflow?.changeTracker?.checkState()\n  }\n\n  const deleteSelection = () => {\n    const canvas = app.canvas\n    if (!canvas.selectedItems || canvas.selectedItems.size === 0) {\n      toastStore.add({\n        severity: 'warn',\n        summary: t('g.nothingToDelete'),\n        detail: t('g.selectItemsToDelete'),\n        life: 3000\n      })\n      return\n    }\n\n    canvas.deleteSelected()\n    canvas.setDirty(true, true)\n\n    // Trigger change tracking\n    workflowStore.activeWorkflow?.changeTracker?.checkState()\n  }\n\n  const renameSelection = async () => {\n    const selectedItems = Array.from(canvasStore.selectedItems)\n\n    // Handle single node selection\n    if (selectedItems.length === 1) {\n      const item = selectedItems[0]\n\n      // For nodes, use the title editor\n      if (item instanceof LGraphNode) {\n        titleEditorStore.titleEditorTarget = item\n        return\n      }\n\n      // For other items like groups, use prompt dialog\n      const currentTitle = 'title' in item ? (item.title as string) : ''\n      const newTitle = await dialogService.prompt({\n        title: t('g.rename'),\n        message: t('g.enterNewName'),\n        defaultValue: currentTitle\n      })\n\n      if (newTitle && newTitle !== currentTitle) {\n        if ('title' in item) {\n          // Type-safe assignment for items with title property\n          const titledItem = item as { title: string }\n          titledItem.title = newTitle\n          app.canvas.setDirty(true, true)\n          workflowStore.activeWorkflow?.changeTracker?.checkState()\n        }\n      }\n      return\n    }\n\n    // Handle multiple selections - batch rename\n    if (selectedItems.length > 1) {\n      const baseTitle = await dialogService.prompt({\n        title: t('g.batchRename'),\n        message: t('g.enterBaseName'),\n        defaultValue: 'Item'\n      })\n\n      if (baseTitle) {\n        selectedItems.forEach((item, index) => {\n          if ('title' in item) {\n            // Type-safe assignment for items with title property\n            const titledItem = item as { title: string }\n            titledItem.title = `${baseTitle} ${index + 1}`\n          }\n        })\n        app.canvas.setDirty(true, true)\n        workflowStore.activeWorkflow?.changeTracker?.checkState()\n      }\n      return\n    }\n\n    toastStore.add({\n      severity: 'warn',\n      summary: t('g.nothingToRename'),\n      detail: t('g.selectItemsToRename'),\n      life: 3000\n    })\n  }\n\n  return {\n    copySelection,\n    pasteSelection,\n    duplicateSelection,\n    deleteSelection,\n    renameSelection\n  }\n}\n","import { useSelectedLiteGraphItems } from '@/composables/canvas/useSelectedLiteGraphItems'\nimport { SubgraphNode } from '@/lib/litegraph/src/litegraph'\nimport { useWorkflowStore } from '@/platform/workflow/management/stores/workflowStore'\nimport { useCanvasStore } from '@/renderer/core/canvas/canvasStore'\nimport { useNodeOutputStore } from '@/stores/imagePreviewStore'\nimport { useNodeBookmarkStore } from '@/stores/nodeBookmarkStore'\nimport { useNodeDefStore } from '@/stores/nodeDefStore'\nimport { isLGraphNode } from '@/utils/litegraphUtil'\n\n/**\n * Composable for handling subgraph-related operations\n */\nexport function useSubgraphOperations() {\n  const { getSelectedNodes } = useSelectedLiteGraphItems()\n  const canvasStore = useCanvasStore()\n  const workflowStore = useWorkflowStore()\n  const nodeOutputStore = useNodeOutputStore()\n  const nodeDefStore = useNodeDefStore()\n  const nodeBookmarkStore = useNodeBookmarkStore()\n\n  const convertToSubgraph = () => {\n    const canvas = canvasStore.getCanvas()\n    const graph = canvas.subgraph ?? canvas.graph\n    if (!graph) {\n      return null\n    }\n\n    const res = graph.convertToSubgraph(canvas.selectedItems)\n    if (!res) {\n      return\n    }\n\n    const { node } = res\n    canvas.select(node)\n    canvasStore.updateSelectedItems()\n    // Trigger change tracking\n    workflowStore.activeWorkflow?.changeTracker?.checkState()\n  }\n\n  const unpackSubgraph = () => {\n    const canvas = canvasStore.getCanvas()\n    const graph = canvas.subgraph ?? canvas.graph\n\n    if (!graph) {\n      return\n    }\n\n    const selectedItems = Array.from(canvas.selectedItems)\n    const subgraphNodes = selectedItems.filter(\n      (item): item is SubgraphNode => item instanceof SubgraphNode\n    )\n\n    if (subgraphNodes.length === 0) {\n      return\n    }\n\n    subgraphNodes.forEach((subgraphNode) => {\n      // Revoke any image previews for the subgraph\n      nodeOutputStore.revokeSubgraphPreviews(subgraphNode)\n\n      // Unpack the subgraph\n      graph.unpackSubgraph(subgraphNode)\n    })\n\n    // Trigger change tracking\n    workflowStore.activeWorkflow?.changeTracker?.checkState()\n  }\n\n  const addSubgraphToLibrary = async () => {\n    const selectedItems = Array.from(canvasStore.selectedItems)\n\n    // Handle single node selection like BookmarkButton.vue\n    if (selectedItems.length === 1) {\n      const item = selectedItems[0]\n      if (isLGraphNode(item)) {\n        const nodeDef = nodeDefStore.fromLGraphNode(item)\n        if (nodeDef) {\n          await nodeBookmarkStore.addBookmark(nodeDef.nodePath)\n          return\n        }\n      }\n    }\n\n    // Handle multiple nodes - convert to subgraph first then bookmark\n    const selectedNodes = getSelectedNodes()\n\n    if (selectedNodes.length === 0) {\n      return\n    }\n\n    // Check if selection contains subgraph nodes\n    const hasSubgraphs = selectedNodes.some(\n      (node) => node instanceof SubgraphNode\n    )\n\n    if (!hasSubgraphs) {\n      // Convert regular nodes to subgraph first\n      convertToSubgraph()\n      return\n    }\n\n    // For subgraph nodes, bookmark them\n    let bookmarkedCount = 0\n    for (const node of selectedNodes) {\n      if (node instanceof SubgraphNode) {\n        const nodeDef = nodeDefStore.fromLGraphNode(node)\n        if (nodeDef) {\n          await nodeBookmarkStore.addBookmark(nodeDef.nodePath)\n          bookmarkedCount++\n        }\n      }\n    }\n  }\n\n  const isSubgraphSelected = (): boolean => {\n    const selectedItems = Array.from(canvasStore.selectedItems)\n    return selectedItems.some((item) => item instanceof SubgraphNode)\n  }\n\n  const hasSelectableNodes = (): boolean => {\n    return getSelectedNodes().length > 0\n  }\n\n  return {\n    convertToSubgraph,\n    unpackSubgraph,\n    addSubgraphToLibrary,\n    isSubgraphSelected,\n    hasSelectableNodes\n  }\n}\n","import { computed } from 'vue'\nimport { useI18n } from 'vue-i18n'\n\nimport { useCommandStore } from '@/stores/commandStore'\n\nimport { useFrameNodes } from './useFrameNodes'\nimport { BadgeVariant, type MenuOption } from './useMoreOptionsMenu'\nimport { useNodeArrangement } from './useNodeArrangement'\nimport { useSelectionOperations } from './useSelectionOperations'\nimport { useSubgraphOperations } from './useSubgraphOperations'\n\n/**\n * Composable for selection-related menu operations\n */\nexport function useSelectionMenuOptions() {\n  const { t } = useI18n()\n  const {\n    copySelection,\n    duplicateSelection,\n    deleteSelection,\n    renameSelection\n  } = useSelectionOperations()\n\n  const { alignOptions, distributeOptions, applyAlign, applyDistribute } =\n    useNodeArrangement()\n\n  const { convertToSubgraph, unpackSubgraph, addSubgraphToLibrary } =\n    useSubgraphOperations()\n\n  const { frameNodes } = useFrameNodes()\n\n  const alignSubmenu = computed(() =>\n    alignOptions.map((align) => ({\n      label: align.localizedName,\n      icon: align.icon,\n      action: () => applyAlign(align)\n    }))\n  )\n\n  const distributeSubmenu = computed(() =>\n    distributeOptions.map((distribute) => ({\n      label: distribute.localizedName,\n      icon: distribute.icon,\n      action: () => applyDistribute(distribute)\n    }))\n  )\n\n  const getBasicSelectionOptions = (): MenuOption[] => [\n    {\n      label: t('contextMenu.Rename'),\n      action: renameSelection\n    },\n    {\n      label: t('contextMenu.Copy'),\n      shortcut: 'Ctrl+C',\n      action: copySelection\n    },\n    {\n      label: t('contextMenu.Duplicate'),\n      shortcut: 'Ctrl+D',\n      action: duplicateSelection\n    }\n  ]\n\n  const getSubgraphOptions = (hasSubgraphs: boolean): MenuOption[] => {\n    if (hasSubgraphs) {\n      return [\n        {\n          label: t('contextMenu.Add Subgraph to Library'),\n          icon: 'icon-[lucide--folder-plus]',\n          action: addSubgraphToLibrary\n        },\n        {\n          label: t('contextMenu.Unpack Subgraph'),\n          icon: 'icon-[lucide--expand]',\n          action: unpackSubgraph\n        }\n      ]\n    } else {\n      return [\n        {\n          label: t('contextMenu.Convert to Subgraph'),\n          icon: 'icon-[lucide--shrink]',\n          action: convertToSubgraph,\n          badge: BadgeVariant.NEW\n        }\n      ]\n    }\n  }\n\n  const getMultipleNodesOptions = (): MenuOption[] => {\n    const convertToGroupNodes = () => {\n      const commandStore = useCommandStore()\n      void commandStore.execute(\n        'Comfy.GroupNode.ConvertSelectedNodesToGroupNode'\n      )\n    }\n\n    return [\n      {\n        label: t('contextMenu.Convert to Group Node'),\n        icon: 'icon-[lucide--group]',\n        action: convertToGroupNodes,\n        badge: BadgeVariant.DEPRECATED\n      },\n      {\n        label: t('g.frameNodes'),\n        icon: 'icon-[lucide--frame]',\n        action: frameNodes\n      }\n    ]\n  }\n\n  const getAlignmentOptions = (): MenuOption[] => [\n    {\n      label: t('contextMenu.Align Selected To'),\n      icon: 'icon-[lucide--align-start-horizontal]',\n      hasSubmenu: true,\n      submenu: alignSubmenu.value,\n      action: () => {}\n    },\n    {\n      label: t('contextMenu.Distribute Nodes'),\n      icon: 'icon-[lucide--align-center-horizontal]',\n      hasSubmenu: true,\n      submenu: distributeSubmenu.value,\n      action: () => {}\n    }\n  ]\n\n  const getDeleteOption = (): MenuOption => ({\n    label: t('contextMenu.Delete'),\n    icon: 'icon-[lucide--trash-2]',\n    shortcut: 'Delete',\n    action: deleteSelection\n  })\n\n  return {\n    getBasicSelectionOptions,\n    getSubgraphOptions,\n    getMultipleNodesOptions,\n    getDeleteOption,\n    getAlignmentOptions,\n    alignSubmenu,\n    distributeSubmenu\n  }\n}\n","import { type Ref, computed, ref } from 'vue'\n\nimport type { LGraphGroup } from '@/lib/litegraph/src/litegraph'\nimport { isLGraphGroup } from '@/utils/litegraphUtil'\n\nimport { useGroupMenuOptions } from './useGroupMenuOptions'\nimport { useImageMenuOptions } from './useImageMenuOptions'\nimport { useNodeMenuOptions } from './useNodeMenuOptions'\nimport { useSelectionMenuOptions } from './useSelectionMenuOptions'\nimport { useSelectionState } from './useSelectionState'\n\nexport interface MenuOption {\n  label?: string\n  icon?: string\n  shortcut?: string\n  hasSubmenu?: boolean\n  type?: 'divider'\n  action?: () => void\n  submenu?: SubMenuOption[]\n  badge?: BadgeVariant\n}\n\nexport interface SubMenuOption {\n  label: string\n  icon?: string\n  action: () => void\n  color?: string\n}\n\nexport enum BadgeVariant {\n  NEW = 'new',\n  DEPRECATED = 'deprecated'\n}\n\n// Global singleton for NodeOptions component reference\nlet nodeOptionsInstance: null | NodeOptionsInstance = null\n\n/**\n * Toggle the node options popover\n * @param event - The trigger event\n * @param element - The target element (button) that triggered the popover\n */\nexport function toggleNodeOptions(\n  event: Event,\n  element: HTMLElement,\n  clickedFromToolbox: boolean = false\n) {\n  if (nodeOptionsInstance?.toggle) {\n    nodeOptionsInstance.toggle(event, element, clickedFromToolbox)\n  }\n}\n\n/**\n * Hide the node options popover\n */\ninterface NodeOptionsInstance {\n  toggle: (\n    event: Event,\n    element: HTMLElement,\n    clickedFromToolbox: boolean\n  ) => void\n  hide: () => void\n  isOpen: Ref<boolean>\n}\n\n/**\n * Register the NodeOptions component instance\n * @param instance - The NodeOptions component instance\n */\nexport function registerNodeOptionsInstance(\n  instance: null | NodeOptionsInstance\n) {\n  nodeOptionsInstance = instance\n}\n\n/**\n * Composable for managing the More Options menu configuration\n * Refactored to use smaller, focused composables for better maintainability\n */\nexport function useMoreOptionsMenu() {\n  const {\n    selectedItems,\n    selectedNodes,\n    nodeDef,\n    showNodeHelp,\n    hasSubgraphs: hasSubgraphsComputed,\n    hasImageNode,\n    hasOutputNodesSelected,\n    hasMultipleSelection,\n    computeSelectionFlags\n  } = useSelectionState()\n\n  const { getImageMenuOptions } = useImageMenuOptions()\n  const {\n    getNodeInfoOption,\n    getAdjustSizeOption,\n    getNodeVisualOptions,\n    getPinOption,\n    getBypassOption,\n    getRunBranchOption\n  } = useNodeMenuOptions()\n  const {\n    getFitGroupToNodesOption,\n    getGroupShapeOptions,\n    getGroupColorOptions,\n    getGroupModeOptions\n  } = useGroupMenuOptions()\n  const {\n    getBasicSelectionOptions,\n    getSubgraphOptions,\n    getMultipleNodesOptions,\n    getDeleteOption,\n    getAlignmentOptions\n  } = useSelectionMenuOptions()\n\n  const hasSubgraphs = hasSubgraphsComputed\n  const hasMultipleNodes = hasMultipleSelection\n\n  // Internal version to force menu rebuild after state mutations\n  const optionsVersion = ref(0)\n  const bump = () => {\n    optionsVersion.value++\n  }\n\n  const menuOptions = computed((): MenuOption[] => {\n    // Reference selection flags to ensure re-computation when they change\n    // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n    optionsVersion.value\n    const states = computeSelectionFlags()\n\n    // Detect single group selection context (and no nodes explicitly selected)\n    const selectedGroups = selectedItems.value.filter(\n      isLGraphGroup\n    ) as LGraphGroup[]\n    const groupContext: LGraphGroup | null =\n      selectedGroups.length === 1 && selectedNodes.value.length === 0\n        ? selectedGroups[0]\n        : null\n    const hasSubgraphsSelected = hasSubgraphs.value\n    const options: MenuOption[] = []\n\n    // Section 1: Basic selection operations (Rename, Copy, Duplicate)\n    options.push(...getBasicSelectionOptions())\n    options.push({ type: 'divider' })\n\n    // Section 2: Node Info & Size Adjustment\n    if (nodeDef.value) {\n      options.push(getNodeInfoOption(showNodeHelp))\n    }\n\n    if (groupContext) {\n      options.push(getFitGroupToNodesOption(groupContext))\n    } else {\n      options.push(getAdjustSizeOption())\n    }\n\n    // Section 3: Collapse/Shape/Color\n    if (groupContext) {\n      // Group context: Shape, Color, Divider\n      options.push(getGroupShapeOptions(groupContext, bump))\n      options.push(getGroupColorOptions(groupContext, bump))\n      options.push({ type: 'divider' })\n    } else {\n      // Node context: Expand/Minimize, Shape, Color, Divider\n      options.push(...getNodeVisualOptions(states, bump))\n      options.push({ type: 'divider' })\n    }\n\n    // Section 4: Image operations (if image node)\n    if (hasImageNode.value && selectedNodes.value.length > 0) {\n      options.push(...getImageMenuOptions(selectedNodes.value[0]))\n    }\n\n    // Section 5: Subgraph operations\n    options.push(...getSubgraphOptions(hasSubgraphsSelected))\n\n    // Section 6: Multiple nodes operations\n    if (hasMultipleNodes.value) {\n      options.push(...getMultipleNodesOptions())\n    }\n\n    // Section 7: Divider\n    options.push({ type: 'divider' })\n\n    // Section 8: Pin/Unpin (non-group only)\n    if (!groupContext) {\n      options.push(getPinOption(states, bump))\n    }\n\n    // Section 9: Alignment (if multiple nodes)\n    if (hasMultipleNodes.value) {\n      options.push(...getAlignmentOptions())\n    }\n\n    // Section 10: Mode operations\n    if (groupContext) {\n      // Group mode operations\n      options.push(...getGroupModeOptions(groupContext, bump))\n    } else {\n      // Bypass option for nodes\n      options.push(getBypassOption(states, bump))\n    }\n\n    // Section 11: Run Branch (if output nodes)\n    if (hasOutputNodesSelected.value) {\n      options.push(getRunBranchOption())\n    }\n\n    // Section 12: Final divider and Delete\n    options.push({ type: 'divider' })\n    options.push(getDeleteOption())\n\n    return options\n  })\n\n  // Computed property to get only menu items with submenus\n  const menuOptionsWithSubmenu = computed(() =>\n    menuOptions.value.filter((option) => option.hasSubmenu && option.submenu)\n  )\n\n  return {\n    menuOptions,\n    menuOptionsWithSubmenu,\n    bump,\n    hasSubgraphs,\n    registerNodeOptionsInstance\n  }\n}\n","<template>\n  <Button\n    ref=\"buttonRef\"\n    v-tooltip.top=\"{\n      value: $t('g.moreOptions'),\n      showDelay: 1000\n    }\"\n    data-testid=\"more-options-button\"\n    text\n    class=\"h-8 w-8 px-0\"\n    severity=\"secondary\"\n    @click=\"handleClick\"\n  >\n    <i-lucide:more-vertical class=\"w-4 h-4\" />\n  </Button>\n</template>\n\n<script setup lang=\"ts\">\nimport Button from 'primevue/button'\nimport { ref } from 'vue'\n\nimport { toggleNodeOptions } from '@/composables/graph/useMoreOptionsMenu'\n\nconst buttonRef = ref<InstanceType<typeof Button> | null>(null)\n\nconst handleClick = (event: Event) => {\n  const el = (buttonRef.value as any)?.$el || buttonRef.value\n  const buttonEl = el instanceof HTMLElement ? el : null\n  if (buttonEl) {\n    toggleNodeOptions(event, buttonEl, true)\n  }\n}\n</script>\n","<template>\n  <div class=\"h-6 w-px bg-gray-300/10 dark-theme:bg-gray-600/10 self-center\" />\n</template>\n","<template>\n  <div\n    ref=\"toolboxRef\"\n    style=\"transform: translate(var(--tb-x), var(--tb-y))\"\n    class=\"fixed left-0 top-0 z-40 pointer-events-none\"\n  >\n    <Transition name=\"slide-up\">\n      <Panel\n        v-if=\"visible\"\n        class=\"rounded-lg selection-toolbox pointer-events-auto\"\n        :style=\"`backgroundColor: ${containerStyles.backgroundColor};`\"\n        :pt=\"{\n          header: 'hidden',\n          content: 'p-1 h-10 flex flex-row gap-1'\n        }\"\n        @wheel=\"canvasInteractions.forwardEventToCanvas\"\n      >\n        <DeleteButton v-if=\"showDelete\" />\n        <VerticalDivider v-if=\"showInfoButton && showAnyPrimaryActions\" />\n        <InfoButton v-if=\"showInfoButton\" />\n\n        <ColorPickerButton v-if=\"showColorPicker\" />\n        <FrameNodes v-if=\"showFrameNodes\" />\n        <ConvertToSubgraphButton v-if=\"showConvertToSubgraph\" />\n        <PublishSubgraphButton v-if=\"showPublishSubgraph\" />\n        <MaskEditorButton v-if=\"showMaskEditor\" />\n        <VerticalDivider\n          v-if=\"showAnyPrimaryActions && showAnyControlActions\"\n        />\n\n        <BypassButton v-if=\"showBypass\" />\n        <RefreshSelectionButton v-if=\"showRefresh\" />\n        <Load3DViewerButton v-if=\"showLoad3DViewer\" />\n\n        <ExtensionCommandButton\n          v-for=\"command in extensionToolboxCommands\"\n          :key=\"command.id\"\n          :command=\"command\"\n        />\n        <ExecuteButton v-if=\"showExecute\" />\n        <NodeOptionsButton />\n      </Panel>\n    </Transition>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport Panel from 'primevue/panel'\nimport { computed, ref } from 'vue'\n\nimport BypassButton from '@/components/graph/selectionToolbox/BypassButton.vue'\nimport ColorPickerButton from '@/components/graph/selectionToolbox/ColorPickerButton.vue'\nimport ConvertToSubgraphButton from '@/components/graph/selectionToolbox/ConvertToSubgraphButton.vue'\nimport DeleteButton from '@/components/graph/selectionToolbox/DeleteButton.vue'\nimport ExecuteButton from '@/components/graph/selectionToolbox/ExecuteButton.vue'\nimport ExtensionCommandButton from '@/components/graph/selectionToolbox/ExtensionCommandButton.vue'\nimport InfoButton from '@/components/graph/selectionToolbox/InfoButton.vue'\nimport Load3DViewerButton from '@/components/graph/selectionToolbox/Load3DViewerButton.vue'\nimport MaskEditorButton from '@/components/graph/selectionToolbox/MaskEditorButton.vue'\nimport RefreshSelectionButton from '@/components/graph/selectionToolbox/RefreshSelectionButton.vue'\nimport PublishSubgraphButton from '@/components/graph/selectionToolbox/SaveToSubgraphLibrary.vue'\nimport { useSelectionToolboxPosition } from '@/composables/canvas/useSelectionToolboxPosition'\nimport { useSelectionState } from '@/composables/graph/useSelectionState'\nimport { useCanvasStore } from '@/renderer/core/canvas/canvasStore'\nimport { useCanvasInteractions } from '@/renderer/core/canvas/useCanvasInteractions'\nimport { useMinimap } from '@/renderer/extensions/minimap/composables/useMinimap'\nimport { useExtensionService } from '@/services/extensionService'\nimport { type ComfyCommandImpl, useCommandStore } from '@/stores/commandStore'\n\nimport FrameNodes from './selectionToolbox/FrameNodes.vue'\nimport NodeOptionsButton from './selectionToolbox/NodeOptionsButton.vue'\nimport VerticalDivider from './selectionToolbox/VerticalDivider.vue'\n\nconst commandStore = useCommandStore()\nconst canvasStore = useCanvasStore()\nconst extensionService = useExtensionService()\nconst canvasInteractions = useCanvasInteractions()\nconst minimap = useMinimap()\nconst containerStyles = minimap.containerStyles\n\nconst toolboxRef = ref<HTMLElement | undefined>()\nconst { visible } = useSelectionToolboxPosition(toolboxRef)\n\nconst extensionToolboxCommands = computed<ComfyCommandImpl[]>(() => {\n  const commandIds = new Set<string>(\n    canvasStore.selectedItems\n      .map(\n        (item) =>\n          extensionService\n            .invokeExtensions('getSelectionToolboxCommands', item)\n            .flat() as string[]\n      )\n      .flat()\n  )\n  return Array.from(commandIds)\n    .map((commandId) => commandStore.getCommand(commandId))\n    .filter((command): command is ComfyCommandImpl => command !== undefined)\n})\n\nconst {\n  hasAnySelection,\n  hasMultipleSelection,\n  isSingleNode,\n  isSingleSubgraph,\n  isSingleImageNode,\n  hasAny3DNodeSelected,\n  hasOutputNodesSelected,\n  nodeDef\n} = useSelectionState()\nconst showInfoButton = computed(() => !!nodeDef.value)\n\nconst showColorPicker = computed(() => hasAnySelection.value)\nconst showConvertToSubgraph = computed(() => hasAnySelection.value)\nconst showFrameNodes = computed(() => hasMultipleSelection.value)\nconst showPublishSubgraph = computed(() => isSingleSubgraph.value)\n\nconst showBypass = computed(\n  () =>\n    isSingleNode.value || isSingleSubgraph.value || hasMultipleSelection.value\n)\nconst showLoad3DViewer = computed(() => hasAny3DNodeSelected.value)\nconst showMaskEditor = computed(() => isSingleImageNode.value)\n\nconst showDelete = computed(() => hasAnySelection.value)\nconst showRefresh = computed(() => hasAnySelection.value)\nconst showExecute = computed(() => hasOutputNodesSelected.value)\n\nconst showAnyPrimaryActions = computed(\n  () =>\n    showColorPicker.value ||\n    showConvertToSubgraph.value ||\n    showFrameNodes.value ||\n    showPublishSubgraph.value\n)\n\nconst showAnyControlActions = computed(() => showBypass.value)\n</script>\n\n<style scoped>\n.selection-toolbox {\n  transform: translateX(-50%) translateY(-120%);\n}\n\n@keyframes slideUp {\n  0% {\n    transform: translateX(-50%) translateY(-100%);\n    opacity: 0;\n  }\n  50% {\n    transform: translateX(-50%) translateY(-125%);\n    opacity: 0.5;\n  }\n  100% {\n    transform: translateX(-50%) translateY(-120%);\n    opacity: 1;\n  }\n}\n\n.slide-up-enter-active {\n  animation: slideUp 125ms ease-out;\n}\n\n.slide-up-leave-active {\n  animation: slideUp 25ms ease-out reverse;\n}\n</style>\n","<template>\n  <div\n    v-if=\"showInput\"\n    class=\"group-title-editor node-title-editor\"\n    :style=\"inputStyle\"\n  >\n    <EditableText\n      :is-editing=\"showInput\"\n      :model-value=\"editedTitle\"\n      @edit=\"onEdit\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { useEventListener } from '@vueuse/core'\nimport { type CSSProperties, computed, ref, watch } from 'vue'\n\nimport EditableText from '@/components/common/EditableText.vue'\nimport { useAbsolutePosition } from '@/composables/element/useAbsolutePosition'\nimport {\n  LGraphGroup,\n  LGraphNode,\n  LiteGraph\n} from '@/lib/litegraph/src/litegraph'\nimport type { LiteGraphCanvasEvent } from '@/lib/litegraph/src/litegraph'\nimport { useSettingStore } from '@/platform/settings/settingStore'\nimport {\n  useCanvasStore,\n  useTitleEditorStore\n} from '@/renderer/core/canvas/canvasStore'\nimport { app } from '@/scripts/app'\n\nconst settingStore = useSettingStore()\n\nconst showInput = ref(false)\nconst editedTitle = ref('')\nconst { style: inputPositionStyle, updatePosition } = useAbsolutePosition()\nconst inputFontStyle = ref<CSSProperties>({})\nconst inputStyle = computed<CSSProperties>(() => ({\n  ...inputPositionStyle.value,\n  ...inputFontStyle.value\n}))\n\nconst titleEditorStore = useTitleEditorStore()\nconst canvasStore = useCanvasStore()\nconst previousCanvasDraggable = ref(true)\n\nconst onEdit = (newValue: string) => {\n  if (titleEditorStore.titleEditorTarget && newValue.trim() !== '') {\n    const trimmedTitle = newValue.trim()\n    titleEditorStore.titleEditorTarget.title = trimmedTitle\n\n    // If this is a subgraph node, sync the runtime subgraph name for breadcrumb reactivity\n    const target = titleEditorStore.titleEditorTarget\n    if (target instanceof LGraphNode && target.isSubgraphNode?.()) {\n      target.subgraph.name = trimmedTitle\n    }\n\n    app.graph.setDirtyCanvas(true, true)\n  }\n  showInput.value = false\n  titleEditorStore.titleEditorTarget = null\n  canvasStore.canvas!.allow_dragcanvas = previousCanvasDraggable.value\n}\n\nwatch(\n  () => titleEditorStore.titleEditorTarget,\n  (target) => {\n    if (target === null) {\n      return\n    }\n    editedTitle.value = target.title\n    showInput.value = true\n    const canvas = canvasStore.canvas!\n    previousCanvasDraggable.value = canvas.allow_dragcanvas\n    canvas.allow_dragcanvas = false\n    const scale = canvas.ds.scale\n\n    if (target instanceof LGraphGroup) {\n      const group = target\n      updatePosition({\n        pos: group.pos,\n        size: [group.size[0], group.titleHeight]\n      })\n      inputFontStyle.value = { fontSize: `${group.font_size * scale}px` }\n    } else if (target instanceof LGraphNode) {\n      const node = target\n      const [x, y] = node.getBounding()\n      updatePosition({\n        pos: [x, y],\n        size: [node.width, LiteGraph.NODE_TITLE_HEIGHT]\n      })\n      inputFontStyle.value = { fontSize: `${12 * scale}px` }\n    }\n  }\n)\n\nconst canvasEventHandler = (event: LiteGraphCanvasEvent) => {\n  if (event.detail.subType === 'group-double-click') {\n    if (!settingStore.get('Comfy.Group.DoubleClickTitleToEdit')) {\n      return\n    }\n\n    const group: LGraphGroup = event.detail.group\n    const [_, y] = group.pos\n\n    const e = event.detail.originalEvent\n    const relativeY = e.canvasY - y\n    // Only allow editing if the click is on the title bar\n    if (relativeY <= group.titleHeight) {\n      titleEditorStore.titleEditorTarget = group\n    }\n  } else if (event.detail.subType === 'node-double-click') {\n    if (!settingStore.get('Comfy.Node.DoubleClickTitleToEdit')) {\n      return\n    }\n\n    const node: LGraphNode = event.detail.node\n    const [_, y] = node.pos\n\n    const e = event.detail.originalEvent\n    const relativeY = e.canvasY - y\n    // Only allow editing if the click is on the title bar\n    if (relativeY <= 0) {\n      titleEditorStore.titleEditorTarget = node\n    }\n  }\n}\n\nuseEventListener(document, 'litegraph:canvas', canvasEventHandler)\n</script>\n\n<style scoped>\n.group-title-editor.node-title-editor {\n  z-index: 9999;\n  padding: 0.25rem;\n}\n\n:deep(.editable-text) {\n  width: 100%;\n  height: 100%;\n}\n\n:deep(.editable-text input) {\n  width: 100%;\n  height: 100%;\n  /* Override the default font size */\n  font-size: inherit;\n}\n</style>\n","import { nextTick } from 'vue'\n\nimport type { MenuOption } from './useMoreOptionsMenu'\n\n/**\n * Composable for handling submenu positioning logic\n */\nexport function useSubmenuPositioning() {\n  /**\n   * Toggle submenu visibility with proper positioning\n   * @param option - Menu option with submenu\n   * @param event - Click event\n   * @param submenu - PrimeVue Popover reference\n   * @param currentSubmenu - Currently open submenu name\n   * @param menuOptionsWithSubmenu - All menu options with submenus\n   * @param submenuRefs - References to all submenu popovers\n   */\n  const toggleSubmenu = async (\n    option: MenuOption,\n    event: Event,\n    submenu: any, // Component instance with show/hide methods\n    currentSubmenu: { value: string | null },\n    menuOptionsWithSubmenu: MenuOption[],\n    submenuRefs: Record<string, any> // Component instances\n  ): Promise<void> => {\n    if (!option.label || !option.hasSubmenu) return\n\n    // Check if this submenu is currently open\n    const isCurrentlyOpen = currentSubmenu.value === option.label\n\n    // Hide all submenus first\n    menuOptionsWithSubmenu.forEach((opt) => {\n      const sm = submenuRefs[`submenu-${opt.label}`]\n      if (sm) {\n        sm.hide()\n      }\n    })\n    currentSubmenu.value = null\n\n    // If it wasn't open before, show it now\n    if (!isCurrentlyOpen) {\n      currentSubmenu.value = option.label\n      await nextTick()\n\n      const menuItem = event.currentTarget as HTMLElement\n      const menuItemRect = menuItem.getBoundingClientRect()\n\n      // Find the parent popover content element that contains this menu item\n      const mainPopoverContent = menuItem.closest(\n        '[data-pc-section=\"content\"]'\n      ) as HTMLElement\n\n      if (mainPopoverContent) {\n        const mainPopoverRect = mainPopoverContent.getBoundingClientRect()\n\n        // Create a temporary positioned element as the target\n        const tempTarget = createPositionedTarget(\n          mainPopoverRect.right + 8,\n          menuItemRect.top,\n          `submenu-target-${option.label}`\n        )\n\n        // Create event using the temp target\n        const tempEvent = createMouseEvent(\n          mainPopoverRect.right + 8,\n          menuItemRect.top\n        )\n\n        // Show submenu relative to temp target\n        submenu.show(tempEvent, tempTarget)\n\n        // Clean up temp target after a delay\n        cleanupTempTarget(tempTarget, 100)\n      } else {\n        // Fallback: position to the right of the menu item\n        const tempTarget = createPositionedTarget(\n          menuItemRect.right + 8,\n          menuItemRect.top,\n          `submenu-fallback-target-${option.label}`\n        )\n\n        // Create event using the temp target\n        const tempEvent = createMouseEvent(\n          menuItemRect.right + 8,\n          menuItemRect.top\n        )\n\n        // Show submenu relative to temp target\n        submenu.show(tempEvent, tempTarget)\n\n        // Clean up temp target after a delay\n        cleanupTempTarget(tempTarget, 100)\n      }\n    }\n  }\n\n  /**\n   * Create a temporary positioned DOM element for submenu targeting\n   */\n  const createPositionedTarget = (\n    left: number,\n    top: number,\n    id: string\n  ): HTMLElement => {\n    const tempTarget = document.createElement('div')\n    tempTarget.style.position = 'absolute'\n    tempTarget.style.left = `${left}px`\n    tempTarget.style.top = `${top}px`\n    tempTarget.style.width = '1px'\n    tempTarget.style.height = '1px'\n    tempTarget.style.pointerEvents = 'none'\n    tempTarget.style.visibility = 'hidden'\n    tempTarget.id = id\n\n    document.body.appendChild(tempTarget)\n    return tempTarget\n  }\n\n  /**\n   * Create a mouse event with specific coordinates\n   */\n  const createMouseEvent = (clientX: number, clientY: number): MouseEvent => {\n    return new MouseEvent('click', {\n      bubbles: true,\n      cancelable: true,\n      clientX,\n      clientY\n    })\n  }\n\n  /**\n   * Clean up temporary target element after delay\n   */\n  const cleanupTempTarget = (target: HTMLElement, delay: number): void => {\n    setTimeout(() => {\n      if (target.parentNode) {\n        target.parentNode.removeChild(target)\n      }\n    }, delay)\n  }\n\n  /**\n   * Hide all submenus\n   */\n  const hideAllSubmenus = (\n    menuOptionsWithSubmenu: MenuOption[],\n    submenuRefs: Record<string, any>, // Component instances\n    currentSubmenu: { value: string | null }\n  ): void => {\n    menuOptionsWithSubmenu.forEach((option) => {\n      const submenu = submenuRefs[`submenu-${option.label}`]\n      if (submenu) {\n        submenu.hide()\n      }\n    })\n    currentSubmenu.value = null\n  }\n\n  return {\n    toggleSubmenu,\n    hideAllSubmenus\n  }\n}\n","<template>\n  <div\n    v-if=\"option.type === 'divider'\"\n    class=\"h-px bg-gray-200 dark-theme:bg-zinc-700 my-1\"\n  />\n  <div\n    v-else\n    role=\"button\"\n    class=\"flex items-center gap-2 px-3 py-1.5 text-sm text-left hover:bg-gray-100 dark-theme:hover:bg-zinc-700 rounded cursor-pointer\"\n    @click=\"handleClick\"\n  >\n    <i v-if=\"option.icon\" :class=\"[option.icon, 'w-4 h-4']\" />\n    <span class=\"flex-1\">{{ option.label }}</span>\n    <span v-if=\"option.shortcut\" class=\"text-xs opacity-60\">\n      {{ option.shortcut }}\n    </span>\n    <i-lucide:chevron-right\n      v-if=\"option.hasSubmenu\"\n      :size=\"14\"\n      class=\"opacity-60\"\n    />\n    <Badge\n      v-if=\"option.badge\"\n      :severity=\"option.badge === 'new' ? 'info' : 'secondary'\"\n      :value=\"t(option.badge)\"\n      :class=\"{\n        'bg-[#31B9F4] dark-theme:bg-[#0B8CE9] rounded-4xl':\n          option.badge === 'new',\n        'bg-[#9C9EAB] dark-theme:bg-[#000] rounded-4xl':\n          option.badge === 'deprecated',\n        'text-white uppercase text-[9px] h-4 px-1 gap-2.5': true\n      }\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport Badge from 'primevue/badge'\nimport { useI18n } from 'vue-i18n'\n\nimport type { MenuOption } from '@/composables/graph/useMoreOptionsMenu'\n\nconst { t } = useI18n()\n\ninterface Props {\n  option: MenuOption\n}\n\ninterface Emits {\n  (e: 'click', option: MenuOption, event: Event): void\n}\n\nconst props = defineProps<Props>()\nconst emit = defineEmits<Emits>()\n\nconst handleClick = (event: Event) => {\n  emit('click', props.option, event)\n}\n</script>\n","<template>\n  <Popover\n    ref=\"popover\"\n    :auto-z-index=\"true\"\n    :base-z-index=\"1100\"\n    :dismissable=\"true\"\n    :close-on-escape=\"true\"\n    unstyled\n    :pt=\"submenuPt\"\n  >\n    <div\n      :class=\"\n        isColorSubmenu\n          ? 'flex flex-col gap-1 p-2'\n          : 'flex flex-col p-2 min-w-40'\n      \"\n    >\n      <div\n        v-for=\"subOption in option.submenu\"\n        :key=\"subOption.label\"\n        :class=\"\n          isColorSubmenu\n            ? 'w-7 h-7 flex items-center justify-center hover:bg-gray-100 dark-theme:hover:bg-zinc-700 rounded cursor-pointer'\n            : 'flex items-center gap-2 px-3 py-1.5 text-sm hover:bg-gray-100 dark-theme:hover:bg-zinc-700 rounded cursor-pointer'\n        \"\n        :title=\"subOption.label\"\n        @click=\"handleSubmenuClick(subOption)\"\n      >\n        <div\n          v-if=\"subOption.color\"\n          class=\"w-5 h-5 rounded-full border border-gray-300 dark-theme:border-zinc-600\"\n          :style=\"{ backgroundColor: subOption.color }\"\n        />\n        <template v-else-if=\"!subOption.color\">\n          <i-lucide:check\n            v-if=\"isShapeSelected(subOption)\"\n            class=\"w-4 h-4 flex-shrink-0\"\n          />\n          <div v-else class=\"w-4 flex-shrink-0\" />\n          <span>{{ subOption.label }}</span>\n        </template>\n      </div>\n    </div>\n  </Popover>\n</template>\n\n<script setup lang=\"ts\">\nimport Popover from 'primevue/popover'\nimport { computed, ref } from 'vue'\n\nimport type {\n  MenuOption,\n  SubMenuOption\n} from '@/composables/graph/useMoreOptionsMenu'\nimport { useNodeCustomization } from '@/composables/graph/useNodeCustomization'\n\ninterface Props {\n  option: MenuOption\n  containerStyles: {\n    width: string\n    height: string\n    backgroundColor: string\n    border: string\n    borderRadius: string\n  }\n}\n\ninterface Emits {\n  (e: 'submenu-click', subOption: SubMenuOption): void\n}\n\nconst props = defineProps<Props>()\nconst emit = defineEmits<Emits>()\n\nconst { getCurrentShape } = useNodeCustomization()\n\nconst popover = ref<InstanceType<typeof Popover>>()\n\nconst show = (event: Event, target?: HTMLElement) => {\n  popover.value?.show(event, target)\n}\n\nconst hide = () => {\n  popover.value?.hide()\n}\n\ndefineExpose({\n  show,\n  hide\n})\n\nconst handleSubmenuClick = (subOption: SubMenuOption) => {\n  emit('submenu-click', subOption)\n}\n\nconst isShapeSelected = (subOption: SubMenuOption): boolean => {\n  if (subOption.color) return false\n\n  const currentShape = getCurrentShape()\n  if (!currentShape) return false\n\n  return currentShape.localizedName === subOption.label\n}\n\nconst isColorSubmenu = computed(() => {\n  return (\n    props.option.submenu &&\n    props.option.submenu.length > 0 &&\n    props.option.submenu.every((item) => item.color && !item.icon)\n  )\n})\n\nconst submenuPt = computed(() => ({\n  root: {\n    class: 'absolute z-[60]'\n  },\n  content: {\n    class: [\n      'text-neutral dark-theme:text-white rounded-lg',\n      'shadow-lg border border-zinc-200 dark-theme:border-zinc-700'\n    ],\n    style: {\n      backgroundColor: props.containerStyles.backgroundColor\n    }\n  }\n}))\n</script>\n","<template>\n  <div>\n    <Popover\n      ref=\"popover\"\n      :append-to=\"'body'\"\n      :auto-z-index=\"true\"\n      :base-z-index=\"1000\"\n      :dismissable=\"true\"\n      :close-on-escape=\"true\"\n      unstyled\n      :pt=\"pt\"\n      @show=\"onPopoverShow\"\n      @hide=\"onPopoverHide\"\n      @wheel=\"canvasInteractions.forwardEventToCanvas\"\n    >\n      <div class=\"flex flex-col p-2 min-w-48\">\n        <MenuOptionItem\n          v-for=\"(option, index) in menuOptions\"\n          :key=\"option.label || `divider-${index}`\"\n          :option=\"option\"\n          @click=\"handleOptionClick\"\n        />\n      </div>\n    </Popover>\n\n    <SubmenuPopover\n      v-for=\"option in menuOptionsWithSubmenu\"\n      :key=\"`submenu-${option.label}`\"\n      :ref=\"(el) => setSubmenuRef(`submenu-${option.label}`, el)\"\n      :option=\"option\"\n      :container-styles=\"containerStyles\"\n      @submenu-click=\"handleSubmenuClick\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { useRafFn } from '@vueuse/core'\nimport Popover from 'primevue/popover'\nimport { computed, onMounted, onUnmounted, ref, watch } from 'vue'\n\nimport {\n  forceCloseMoreOptionsSignal,\n  moreOptionsOpen,\n  moreOptionsRestorePending,\n  restoreMoreOptionsSignal\n} from '@/composables/canvas/useSelectionToolboxPosition'\nimport {\n  type MenuOption,\n  type SubMenuOption,\n  registerNodeOptionsInstance,\n  useMoreOptionsMenu\n} from '@/composables/graph/useMoreOptionsMenu'\nimport { useSubmenuPositioning } from '@/composables/graph/useSubmenuPositioning'\nimport { useCanvasInteractions } from '@/renderer/core/canvas/useCanvasInteractions'\nimport { useMinimap } from '@/renderer/extensions/minimap/composables/useMinimap'\n\nimport MenuOptionItem from './MenuOptionItem.vue'\nimport SubmenuPopover from './SubmenuPopover.vue'\n\nconst popover = ref<InstanceType<typeof Popover>>()\nconst targetElement = ref<HTMLElement | null>(null)\nconst isTriggeredByToolbox = ref<boolean>(true)\n// Track open state ourselves so we can restore after drag/move\nconst isOpen = ref(false)\nconst wasOpenBeforeHide = ref(false)\n// Track why the popover was hidden so we only auto-reopen after drag.\ntype HideReason = 'manual' | 'drag'\nconst lastProgrammaticHideReason = ref<HideReason | null>(null)\nconst submenuRefs = ref<Record<string, InstanceType<typeof SubmenuPopover>>>({})\nconst currentSubmenu = ref<string | null>(null)\n\nconst { menuOptions, menuOptionsWithSubmenu, bump } = useMoreOptionsMenu()\nconst { toggleSubmenu, hideAllSubmenus } = useSubmenuPositioning()\nconst canvasInteractions = useCanvasInteractions()\nconst minimap = useMinimap()\nconst containerStyles = minimap.containerStyles\n\nlet lastLogTs = 0\nconst LOG_INTERVAL = 120 // ms\nlet overlayElCache: HTMLElement | null = null\n\nfunction resolveOverlayEl(): HTMLElement | null {\n  // Prefer cached element (cleared on hide)\n  if (overlayElCache && overlayElCache.isConnected) return overlayElCache\n  // PrimeVue Popover root element (component instance $el)\n  const direct = (popover.value as any)?.$el\n  if (direct instanceof HTMLElement) {\n    overlayElCache = direct\n    return direct\n  }\n  // Fallback: try to locate a recent popover root near the button (same z-index class + absolute)\n  const btn = targetElement.value\n  if (btn) {\n    const candidates = Array.from(\n      document.querySelectorAll('div.absolute.z-50')\n    ) as HTMLElement[]\n    // Heuristic: pick the one closest (vertically) below the button\n    const rect = btn.getBoundingClientRect()\n    let best: { el: HTMLElement; dist: number } | null = null\n    for (const el of candidates) {\n      const r = el.getBoundingClientRect()\n      const dist = Math.abs(r.top - rect.bottom)\n      if (!best || dist < best.dist) best = { el, dist }\n    }\n    if (best && best.el) {\n      overlayElCache = best.el\n      return best.el\n    }\n  }\n  return null\n}\n\nconst repositionPopover = () => {\n  if (!isOpen.value) return\n  const btn = targetElement.value\n  const overlayEl = resolveOverlayEl()\n  if (!btn || !overlayEl) return\n  const rect = btn.getBoundingClientRect()\n  const marginY = 8 // tailwind mt-2 ~ 0.5rem = 8px\n  const left = isTriggeredByToolbox.value\n    ? rect.left + rect.width / 2\n    : rect.right - rect.width / 4\n  const top = isTriggeredByToolbox.value\n    ? rect.bottom + marginY\n    : rect.top - marginY - 6\n  try {\n    overlayEl.style.position = 'fixed'\n    overlayEl.style.left = `${left}px`\n    overlayEl.style.top = `${top}px`\n    overlayEl.style.transform = 'translate(-50%, 0)'\n  } catch (e) {\n    console.warn('[NodeOptions] Failed to set overlay style', e)\n    return\n  }\n  const now = performance.now()\n  if (now - lastLogTs > LOG_INTERVAL) {\n    lastLogTs = now\n  }\n}\n\nconst { resume: startSync, pause: stopSync } = useRafFn(repositionPopover)\n\nfunction openPopover(\n  triggerEvent?: Event,\n  element?: HTMLElement,\n  clickedFromToolbox?: boolean\n): boolean {\n  const el = element || targetElement.value\n  if (!el || !el.isConnected) return false\n  targetElement.value = el\n  if (clickedFromToolbox !== undefined)\n    isTriggeredByToolbox.value = clickedFromToolbox\n  bump()\n  popover.value?.show(triggerEvent ?? new Event('reopen'), el)\n  isOpen.value = true\n  moreOptionsOpen.value = true\n  moreOptionsRestorePending.value = false\n  return true\n}\n\nfunction closePopover(reason: HideReason = 'manual') {\n  lastProgrammaticHideReason.value = reason\n  popover.value?.hide()\n  isOpen.value = false\n  moreOptionsOpen.value = false\n  stopSync()\n  hideAll()\n  if (reason !== 'drag') {\n    wasOpenBeforeHide.value = false\n    // Natural hide: cancel any pending restore\n    moreOptionsRestorePending.value = false\n  } else {\n    if (!moreOptionsRestorePending.value) {\n      wasOpenBeforeHide.value = true\n      moreOptionsRestorePending.value = true\n    }\n  }\n}\n\nlet restoreAttempts = 0\nfunction attemptRestore() {\n  if (isOpen.value) return\n  if (!wasOpenBeforeHide.value && !moreOptionsRestorePending.value) return\n  // Try immediately\n  if (openPopover(new Event('reopen'), targetElement.value || undefined)) {\n    wasOpenBeforeHide.value = false\n    restoreAttempts = 0\n    return\n  }\n  // Defer with limited retries (layout / mount race)\n  if (restoreAttempts >= 5) return\n  restoreAttempts++\n  requestAnimationFrame(() => attemptRestore())\n}\n\nconst toggle = (\n  event: Event,\n  element?: HTMLElement,\n  clickedFromToolbox?: boolean\n) => {\n  if (isOpen.value) closePopover('manual')\n  else openPopover(event, element, clickedFromToolbox)\n}\n\nconst hide = (reason: HideReason = 'manual') => closePopover(reason)\n\n// Export functions for external triggering\ndefineExpose({\n  toggle,\n  hide,\n  isOpen\n})\n\nconst hideAll = () => {\n  hideAllSubmenus(\n    menuOptionsWithSubmenu.value,\n    submenuRefs.value,\n    currentSubmenu\n  )\n}\n\nconst handleOptionClick = (option: MenuOption, event: Event) => {\n  if (!option.hasSubmenu && option.action) {\n    option.action()\n    hide()\n  } else if (option.hasSubmenu) {\n    event.stopPropagation()\n    const submenuKey = `submenu-${option.label}`\n    const submenu = submenuRefs.value[submenuKey]\n\n    if (submenu) {\n      void toggleSubmenu(\n        option,\n        event,\n        submenu,\n        currentSubmenu,\n        menuOptionsWithSubmenu.value,\n        submenuRefs.value\n      )\n    }\n  }\n}\n\nconst handleSubmenuClick = (subOption: SubMenuOption) => {\n  subOption.action()\n  hide('manual')\n}\n\nconst setSubmenuRef = (key: string, el: any) => {\n  if (el) {\n    submenuRefs.value[key] = el\n  } else {\n    delete submenuRefs.value[key]\n  }\n}\n\nconst pt = computed(() => ({\n  root: {\n    class: 'absolute z-50 w-[300px] px-[12]'\n  },\n  content: {\n    class: [\n      'mt-2 text-neutral dark-theme:text-white rounded-lg',\n      'shadow-lg border border-zinc-200 dark-theme:border-zinc-700'\n    ],\n    style: {\n      backgroundColor: containerStyles.value.backgroundColor\n    }\n  }\n}))\n\n// Distinguish outside click (PrimeVue dismiss) from programmatic hides.\nconst onPopoverShow = () => {\n  overlayElCache = resolveOverlayEl()\n  // Delay first reposition slightly to ensure DOM fully painted\n  requestAnimationFrame(() => repositionPopover())\n  startSync()\n}\n\nconst onPopoverHide = () => {\n  if (lastProgrammaticHideReason.value == null) {\n    isOpen.value = false\n    hideAll()\n    wasOpenBeforeHide.value = false\n    moreOptionsOpen.value = false\n    moreOptionsRestorePending.value = false\n  }\n  overlayElCache = null\n  stopSync()\n  lastProgrammaticHideReason.value = null\n}\n\n// Watch for forced close (drag start)\nwatch(\n  () => forceCloseMoreOptionsSignal.value,\n  () => {\n    if (isOpen.value) hide('drag')\n    else\n      wasOpenBeforeHide.value =\n        wasOpenBeforeHide.value || moreOptionsRestorePending.value\n  }\n)\n\nwatch(\n  () => restoreMoreOptionsSignal.value,\n  () => attemptRestore()\n)\n\nonMounted(() => {\n  // Register this instance globally\n  registerNodeOptionsInstance({\n    toggle,\n    hide,\n    isOpen\n  })\n\n  if (moreOptionsRestorePending.value && !isOpen.value) {\n    requestAnimationFrame(() => attemptRestore())\n  }\n})\n\nonUnmounted(() => {\n  stopSync()\n  // Unregister on unmount\n  registerNodeOptionsInstance(null)\n})\n</script>\n","import { useMouse } from '@vueuse/core'\nimport { defineStore } from 'pinia'\nimport { computed, ref, shallowRef } from 'vue'\n\nimport type NodeSearchBoxPopover from '@/components/searchbox/NodeSearchBoxPopover.vue'\nimport type { CanvasPointerEvent } from '@/lib/litegraph/src/litegraph'\nimport { useSettingStore } from '@/platform/settings/settingStore'\n\nexport const useSearchBoxStore = defineStore('searchBox', () => {\n  const settingStore = useSettingStore()\n  const { x, y } = useMouse()\n\n  const newSearchBoxEnabled = computed(\n    () => settingStore.get('Comfy.NodeSearchBoxImpl') === 'default'\n  )\n\n  const popoverRef = shallowRef<InstanceType<\n    typeof NodeSearchBoxPopover\n  > | null>(null)\n\n  function setPopoverRef(\n    popover: InstanceType<typeof NodeSearchBoxPopover> | null\n  ) {\n    popoverRef.value = popover\n  }\n\n  const visible = ref(false)\n  function toggleVisible() {\n    if (newSearchBoxEnabled.value) {\n      visible.value = !visible.value\n      return\n    }\n    if (!popoverRef.value) return\n    popoverRef.value.showSearchBox(\n      new MouseEvent('click', {\n        clientX: x.value,\n        clientY: y.value,\n        // @ts-expect-error layerY is a nonstandard property\n        layerY: y.value\n      }) as unknown as CanvasPointerEvent\n    )\n  }\n\n  return {\n    newSearchBoxEnabled,\n    setPopoverRef,\n    toggleVisible,\n    visible\n  }\n})\n","<!-- Auto complete with extra event \"focused-option-changed\" -->\n<script>\nimport AutoComplete from 'primevue/autocomplete'\n\nexport default {\n  name: 'AutoCompletePlus',\n  extends: AutoComplete,\n  emits: ['focused-option-changed'],\n  data() {\n    return {\n      // Flag to determine if IME is active\n      isComposing: false\n    }\n  },\n  mounted() {\n    if (typeof AutoComplete.mounted === 'function') {\n      AutoComplete.mounted.call(this)\n    }\n\n    // Retrieve the actual <input> element and attach IME events\n    const inputEl = this.$el.querySelector('input')\n    if (inputEl) {\n      inputEl.addEventListener('compositionstart', () => {\n        this.isComposing = true\n      })\n      inputEl.addEventListener('compositionend', () => {\n        this.isComposing = false\n      })\n    }\n    // Add a watcher on the focusedOptionIndex property\n    this.$watch(\n      () => this.focusedOptionIndex,\n      (newVal, oldVal) => {\n        // Emit a custom event when focusedOptionIndex changes\n        this.$emit('focused-option-changed', newVal)\n      }\n    )\n  },\n  methods: {\n    // Override onKeyDown to block Enter when IME is active\n    onKeyDown(event) {\n      if (event.key === 'Enter' && this.isComposing) {\n        event.preventDefault()\n        event.stopPropagation()\n        return\n      }\n\n      AutoComplete.methods.onKeyDown.call(this, event)\n    }\n  }\n}\n</script>\n","<template>\n  <div\n    class=\"option-container flex justify-between items-center px-2 py-0 cursor-pointer overflow-hidden w-full\"\n  >\n    <div class=\"option-display-name font-semibold flex flex-col\">\n      <div>\n        <span v-if=\"isBookmarked\">\n          <i class=\"pi pi-bookmark-fill text-sm mr-1\" />\n        </span>\n        <span v-html=\"highlightQuery(nodeDef.display_name, currentQuery)\" />\n        <span>&nbsp;</span>\n        <Tag v-if=\"showIdName\" severity=\"secondary\">\n          <span v-html=\"highlightQuery(nodeDef.name, currentQuery)\" />\n        </Tag>\n      </div>\n      <div\n        v-if=\"showCategory\"\n        class=\"option-category font-light text-sm text-muted overflow-hidden text-ellipsis whitespace-nowrap\"\n      >\n        {{ nodeDef.category.replaceAll('/', ' > ') }}\n      </div>\n    </div>\n    <div class=\"option-badges\">\n      <Tag\n        v-if=\"nodeDef.experimental\"\n        :value=\"$t('g.experimental')\"\n        severity=\"primary\"\n      />\n      <Tag\n        v-if=\"nodeDef.deprecated\"\n        :value=\"$t('g.deprecated')\"\n        severity=\"danger\"\n      />\n      <Tag\n        v-if=\"showNodeFrequency && nodeFrequency > 0\"\n        :value=\"formatNumberWithSuffix(nodeFrequency, { roundToInt: true })\"\n        severity=\"secondary\"\n      />\n      <Chip\n        v-if=\"nodeDef.nodeSource.type !== NodeSourceType.Unknown\"\n        class=\"text-sm font-light\"\n      >\n        {{ nodeDef.nodeSource.displayText }}\n      </Chip>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport Chip from 'primevue/chip'\nimport Tag from 'primevue/tag'\nimport { computed } from 'vue'\n\nimport { useSettingStore } from '@/platform/settings/settingStore'\nimport { useNodeBookmarkStore } from '@/stores/nodeBookmarkStore'\nimport type { ComfyNodeDefImpl } from '@/stores/nodeDefStore'\nimport { useNodeFrequencyStore } from '@/stores/nodeDefStore'\nimport { NodeSourceType } from '@/types/nodeSource'\nimport { highlightQuery } from '@/utils/formatUtil'\nimport { formatNumberWithSuffix } from '@/utils/formatUtil'\n\nconst settingStore = useSettingStore()\nconst showCategory = computed(() =>\n  settingStore.get('Comfy.NodeSearchBoxImpl.ShowCategory')\n)\nconst showIdName = computed(() =>\n  settingStore.get('Comfy.NodeSearchBoxImpl.ShowIdName')\n)\nconst showNodeFrequency = computed(() =>\n  settingStore.get('Comfy.NodeSearchBoxImpl.ShowNodeFrequency')\n)\nconst nodeFrequencyStore = useNodeFrequencyStore()\nconst nodeFrequency = computed(() =>\n  nodeFrequencyStore.getNodeFrequency(props.nodeDef)\n)\n\nconst nodeBookmarkStore = useNodeBookmarkStore()\nconst isBookmarked = computed(() =>\n  nodeBookmarkStore.isBookmarked(props.nodeDef)\n)\n\nconst props = defineProps<{\n  nodeDef: ComfyNodeDefImpl\n  currentQuery: string\n}>()\n</script>\n\n<style scoped>\n:deep(.highlight) {\n  background-color: var(--p-primary-color);\n  color: var(--p-primary-contrast-color);\n  font-weight: bold;\n  border-radius: 0.25rem;\n  padding: 0 0.125rem;\n  margin: -0.125rem 0.125rem;\n}\n</style>\n","<template>\n  <div\n    class=\"comfy-vue-node-search-container flex justify-center items-center w-full min-w-96\"\n  >\n    <div\n      v-if=\"enableNodePreview\"\n      class=\"comfy-vue-node-preview-container absolute left-[-350px] top-[50px]\"\n    >\n      <NodePreview\n        v-if=\"hoveredSuggestion\"\n        :key=\"hoveredSuggestion?.name || ''\"\n        :node-def=\"hoveredSuggestion\"\n      />\n    </div>\n\n    <Button\n      icon=\"pi pi-filter\"\n      severity=\"secondary\"\n      class=\"filter-button z-10\"\n      @click=\"nodeSearchFilterVisible = true\"\n    />\n    <Dialog\n      v-model:visible=\"nodeSearchFilterVisible\"\n      class=\"min-w-96\"\n      dismissable-mask\n      modal\n      @hide=\"reFocusInput\"\n    >\n      <template #header>\n        <h3>{{ $t('g.addNodeFilterCondition') }}</h3>\n      </template>\n      <div class=\"_dialog-body\">\n        <NodeSearchFilter @add-filter=\"onAddFilter\" />\n      </div>\n    </Dialog>\n\n    <AutoCompletePlus\n      :model-value=\"filters\"\n      class=\"comfy-vue-node-search-box z-10 grow\"\n      scroll-height=\"40vh\"\n      :placeholder=\"placeholder\"\n      :input-id=\"inputId\"\n      append-to=\"self\"\n      :suggestions=\"suggestions\"\n      :min-length=\"0\"\n      :delay=\"100\"\n      :loading=\"!nodeFrequencyStore.isLoaded\"\n      complete-on-focus\n      auto-option-focus\n      force-selection\n      multiple\n      :option-label=\"'display_name'\"\n      @complete=\"search($event.query)\"\n      @option-select=\"emit('addNode', $event.value)\"\n      @focused-option-changed=\"setHoverSuggestion($event)\"\n    >\n      <template #option=\"{ option }\">\n        <NodeSearchItem :node-def=\"option\" :current-query=\"currentQuery\" />\n      </template>\n      <!-- FilterAndValue -->\n      <template #chip=\"{ value }\">\n        <SearchFilterChip\n          v-if=\"value.filterDef && value.value\"\n          :key=\"`${value.filterDef.id}-${value.value}`\"\n          :text=\"value.value\"\n          :badge=\"value.filterDef.invokeSequence.toUpperCase()\"\n          :badge-class=\"value.filterDef.invokeSequence + '-badge'\"\n          @remove=\"\n            onRemoveFilter(\n              $event,\n              value as FuseFilterWithValue<ComfyNodeDefImpl, string>\n            )\n          \"\n        />\n      </template>\n    </AutoCompletePlus>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport Button from 'primevue/button'\nimport Dialog from 'primevue/dialog'\nimport { computed, nextTick, onMounted, ref } from 'vue'\nimport { useI18n } from 'vue-i18n'\n\nimport NodePreview from '@/components/node/NodePreview.vue'\nimport AutoCompletePlus from '@/components/primevueOverride/AutoCompletePlus.vue'\nimport NodeSearchFilter from '@/components/searchbox/NodeSearchFilter.vue'\nimport NodeSearchItem from '@/components/searchbox/NodeSearchItem.vue'\nimport { useSettingStore } from '@/platform/settings/settingStore'\nimport type { ComfyNodeDefImpl } from '@/stores/nodeDefStore'\nimport { useNodeDefStore, useNodeFrequencyStore } from '@/stores/nodeDefStore'\nimport type { FuseFilterWithValue } from '@/utils/fuseUtil'\n\nimport SearchFilterChip from '../common/SearchFilterChip.vue'\n\nconst settingStore = useSettingStore()\nconst { t } = useI18n()\n\nconst enableNodePreview = computed(() =>\n  settingStore.get('Comfy.NodeSearchBoxImpl.NodePreview')\n)\n\nconst { filters, searchLimit = 64 } = defineProps<{\n  filters: FuseFilterWithValue<ComfyNodeDefImpl, string>[]\n  searchLimit?: number\n}>()\n\nconst nodeSearchFilterVisible = ref(false)\nconst inputId = `comfy-vue-node-search-box-input-${Math.random()}`\nconst suggestions = ref<ComfyNodeDefImpl[]>([])\nconst hoveredSuggestion = ref<ComfyNodeDefImpl | null>(null)\nconst currentQuery = ref('')\nconst placeholder = computed(() => {\n  return filters.length === 0 ? t('g.searchNodes') + '...' : ''\n})\n\nconst nodeDefStore = useNodeDefStore()\nconst nodeFrequencyStore = useNodeFrequencyStore()\nconst search = (query: string) => {\n  const queryIsEmpty = query === '' && filters.length === 0\n  currentQuery.value = query\n  suggestions.value = queryIsEmpty\n    ? nodeFrequencyStore.topNodeDefs\n    : [\n        ...nodeDefStore.nodeSearchService.searchNode(query, filters, {\n          limit: searchLimit\n        })\n      ]\n}\n\nconst emit = defineEmits(['addFilter', 'removeFilter', 'addNode'])\n\nlet inputElement: HTMLInputElement | null = null\nconst reFocusInput = async () => {\n  inputElement ??= document.getElementById(inputId) as HTMLInputElement\n  if (inputElement) {\n    inputElement.blur()\n    await nextTick(() => inputElement?.focus())\n  }\n}\n\nonMounted(reFocusInput)\nconst onAddFilter = (\n  filterAndValue: FuseFilterWithValue<ComfyNodeDefImpl, string>\n) => {\n  nodeSearchFilterVisible.value = false\n  emit('addFilter', filterAndValue)\n}\nconst onRemoveFilter = async (\n  event: Event,\n  filterAndValue: FuseFilterWithValue<ComfyNodeDefImpl, string>\n) => {\n  event.stopPropagation()\n  event.preventDefault()\n  emit('removeFilter', filterAndValue)\n  await reFocusInput()\n}\nconst setHoverSuggestion = (index: number) => {\n  if (index === -1) {\n    hoveredSuggestion.value = null\n    return\n  }\n  const value = suggestions.value[index]\n  hoveredSuggestion.value = value\n}\n</script>\n","<template>\n  <div>\n    <Dialog\n      v-model:visible=\"visible\"\n      modal\n      :dismissable-mask=\"dismissable\"\n      :pt=\"{\n        root: {\n          class: 'invisible-dialog-root',\n          role: 'search'\n        },\n        mask: { class: 'node-search-box-dialog-mask' },\n        transition: {\n          enterFromClass: 'opacity-0 scale-75',\n          // 100ms is the duration of the transition in the dialog component\n          enterActiveClass: 'transition-all duration-100 ease-out',\n          leaveActiveClass: 'transition-all duration-100 ease-in',\n          leaveToClass: 'opacity-0 scale-75'\n        }\n      }\"\n      @hide=\"clearFilters\"\n    >\n      <template #container>\n        <NodeSearchBox\n          :filters=\"nodeFilters\"\n          @add-filter=\"addFilter\"\n          @remove-filter=\"removeFilter\"\n          @add-node=\"addNode\"\n        />\n      </template>\n    </Dialog>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { useEventListener } from '@vueuse/core'\nimport { storeToRefs } from 'pinia'\nimport Dialog from 'primevue/dialog'\nimport { computed, ref, toRaw, watch, watchEffect } from 'vue'\n\nimport type { Point } from '@/lib/litegraph/src/interfaces'\nimport type { LiteGraphCanvasEvent } from '@/lib/litegraph/src/litegraph'\nimport { LGraphNode, LiteGraph } from '@/lib/litegraph/src/litegraph'\nimport type { CanvasPointerEvent } from '@/lib/litegraph/src/types/events'\nimport { useSettingStore } from '@/platform/settings/settingStore'\nimport { useWorkflowStore } from '@/platform/workflow/management/stores/workflowStore'\nimport { useCanvasStore } from '@/renderer/core/canvas/canvasStore'\nimport { useLitegraphService } from '@/services/litegraphService'\nimport type { ComfyNodeDefImpl } from '@/stores/nodeDefStore'\nimport { useNodeDefStore } from '@/stores/nodeDefStore'\nimport { useSearchBoxStore } from '@/stores/workspace/searchBoxStore'\nimport { LinkReleaseTriggerAction } from '@/types/searchBoxTypes'\nimport type { FuseFilterWithValue } from '@/utils/fuseUtil'\n\nimport NodeSearchBox from './NodeSearchBox.vue'\n\nlet triggerEvent: CanvasPointerEvent | null = null\nlet listenerController: AbortController | null = null\nlet disconnectOnReset = false\n\nconst settingStore = useSettingStore()\nconst searchBoxStore = useSearchBoxStore()\nconst litegraphService = useLitegraphService()\n\nconst { visible, newSearchBoxEnabled } = storeToRefs(searchBoxStore)\nconst dismissable = ref(true)\nfunction getNewNodeLocation(): Point {\n  return triggerEvent\n    ? [triggerEvent.canvasX, triggerEvent.canvasY]\n    : litegraphService.getCanvasCenter()\n}\nconst nodeFilters = ref<FuseFilterWithValue<ComfyNodeDefImpl, string>[]>([])\nfunction addFilter(filter: FuseFilterWithValue<ComfyNodeDefImpl, string>) {\n  nodeFilters.value.push(filter)\n}\nfunction removeFilter(filter: FuseFilterWithValue<ComfyNodeDefImpl, string>) {\n  nodeFilters.value = nodeFilters.value.filter(\n    (f) => toRaw(f) !== toRaw(filter)\n  )\n}\nfunction clearFilters() {\n  nodeFilters.value = []\n}\nfunction closeDialog() {\n  visible.value = false\n}\nconst canvasStore = useCanvasStore()\n\nfunction addNode(nodeDef: ComfyNodeDefImpl) {\n  const node = litegraphService.addNodeOnGraph(nodeDef, {\n    pos: getNewNodeLocation()\n  })\n\n  if (disconnectOnReset && triggerEvent) {\n    canvasStore.getCanvas().linkConnector.connectToNode(node, triggerEvent)\n  } else if (!triggerEvent) {\n    console.warn('The trigger event was undefined when addNode was called.')\n  }\n\n  disconnectOnReset = false\n\n  // Notify changeTracker - new step should be added\n  useWorkflowStore().activeWorkflow?.changeTracker?.checkState()\n  window.requestAnimationFrame(closeDialog)\n}\n\nfunction showSearchBox(e: CanvasPointerEvent | null) {\n  if (newSearchBoxEnabled.value) {\n    if (e?.pointerType === 'touch') {\n      setTimeout(() => {\n        showNewSearchBox(e)\n      }, 128)\n    } else {\n      showNewSearchBox(e)\n    }\n  } else {\n    canvasStore.getCanvas().showSearchBox(e)\n  }\n}\n\nfunction getFirstLink() {\n  return canvasStore.getCanvas().linkConnector.renderLinks.at(0)\n}\n\nconst nodeDefStore = useNodeDefStore()\nfunction showNewSearchBox(e: CanvasPointerEvent | null) {\n  const firstLink = getFirstLink()\n  if (firstLink) {\n    const filter =\n      firstLink.toType === 'input'\n        ? nodeDefStore.nodeSearchService.inputTypeFilter\n        : nodeDefStore.nodeSearchService.outputTypeFilter\n\n    const dataType = firstLink.fromSlot.type?.toString() ?? ''\n    addFilter({\n      filterDef: filter,\n      value: dataType\n    })\n  }\n\n  visible.value = true\n  triggerEvent = e\n\n  // Prevent the dialog from being dismissed immediately\n  dismissable.value = false\n  setTimeout(() => {\n    dismissable.value = true\n  }, 300)\n}\n\nfunction showContextMenu(e: CanvasPointerEvent) {\n  const firstLink = getFirstLink()\n  if (!firstLink) return\n\n  const { node, fromSlot, toType } = firstLink\n  const commonOptions = {\n    e,\n    allow_searchbox: true,\n    showSearchBox: () => {\n      cancelResetOnContextClose()\n      showSearchBox(e)\n    }\n  }\n  const afterRerouteId = firstLink.fromReroute?.id\n  const connectionOptions =\n    toType === 'input'\n      ? { nodeFrom: node, slotFrom: fromSlot, afterRerouteId }\n      : { nodeTo: node, slotTo: fromSlot, afterRerouteId }\n\n  const canvas = canvasStore.getCanvas()\n  const menu = canvas.showConnectionMenu({\n    ...connectionOptions,\n    ...commonOptions\n  })\n\n  if (!menu) {\n    console.warn('No menu was returned from showConnectionMenu')\n    return\n  }\n\n  triggerEvent = e\n  listenerController = new AbortController()\n  const { signal } = listenerController\n  const options = { once: true, signal }\n\n  // Connect the node after it is created via context menu\n  useEventListener(\n    canvas.canvas,\n    'connect-new-default-node',\n    (createEvent) => {\n      if (!(createEvent instanceof CustomEvent))\n        throw new Error('Invalid event')\n\n      const node: unknown = createEvent.detail?.node\n      if (!(node instanceof LGraphNode)) throw new Error('Invalid node')\n\n      disconnectOnReset = false\n      createEvent.preventDefault()\n      canvas.linkConnector.connectToNode(node, e)\n    },\n    options\n  )\n\n  // Reset when the context menu is closed\n  const cancelResetOnContextClose = useEventListener(\n    menu.controller.signal,\n    'abort',\n    reset,\n    options\n  )\n}\n\n// Disable litegraph's default behavior of release link and search box.\nwatchEffect(() => {\n  const { canvas } = canvasStore\n  if (!canvas) return\n\n  LiteGraph.release_link_on_empty_shows_menu = false\n  canvas.allow_searchbox = false\n\n  useEventListener(\n    canvas.linkConnector.events,\n    'dropped-on-canvas',\n    handleDroppedOnCanvas\n  )\n})\n\nfunction canvasEventHandler(e: LiteGraphCanvasEvent) {\n  if (e.detail.subType === 'empty-double-click') {\n    showSearchBox(e.detail.originalEvent)\n  } else if (e.detail.subType === 'group-double-click') {\n    const group = e.detail.group\n    const [_, y] = group.pos\n    const relativeY = e.detail.originalEvent.canvasY - y\n    // Show search box if the click is NOT on the title bar\n    if (relativeY > group.titleHeight) {\n      showSearchBox(e.detail.originalEvent)\n    }\n  }\n}\n\nconst linkReleaseAction = computed(() =>\n  settingStore.get('Comfy.LinkRelease.Action')\n)\n\nconst linkReleaseActionShift = computed(() =>\n  settingStore.get('Comfy.LinkRelease.ActionShift')\n)\n\n// Prevent normal LinkConnector reset (called by CanvasPointer.finally)\nfunction preventDefault(e: Event) {\n  return e.preventDefault()\n}\nfunction cancelNextReset(e: CustomEvent<CanvasPointerEvent>) {\n  e.preventDefault()\n\n  const canvas = canvasStore.getCanvas()\n  canvas.linkConnector.state.snapLinksPos = [e.detail.canvasX, e.detail.canvasY]\n  useEventListener(canvas.linkConnector.events, 'reset', preventDefault, {\n    once: true\n  })\n}\n\nfunction handleDroppedOnCanvas(e: CustomEvent<CanvasPointerEvent>) {\n  disconnectOnReset = true\n  const action = e.detail.shiftKey\n    ? linkReleaseActionShift.value\n    : linkReleaseAction.value\n  switch (action) {\n    case LinkReleaseTriggerAction.SEARCH_BOX:\n      cancelNextReset(e)\n      showSearchBox(e.detail)\n      break\n    case LinkReleaseTriggerAction.CONTEXT_MENU:\n      cancelNextReset(e)\n      showContextMenu(e.detail)\n      break\n    case LinkReleaseTriggerAction.NO_ACTION:\n    default:\n      break\n  }\n}\n\n// Resets litegraph state\nfunction reset() {\n  listenerController?.abort()\n  listenerController = null\n  triggerEvent = null\n\n  const canvas = canvasStore.getCanvas()\n  canvas.linkConnector.events.removeEventListener('reset', preventDefault)\n  if (disconnectOnReset) canvas.linkConnector.disconnectLinks()\n\n  canvas.linkConnector.reset()\n  canvas.setDirty(true, true)\n}\n\n// Reset connecting links when the search box is closed\nwatch(visible, () => {\n  if (!visible.value) reset()\n})\n\nuseEventListener(document, 'litegraph:canvas', canvasEventHandler)\ndefineExpose({ showSearchBox })\n</script>\n\n<style>\n.invisible-dialog-root {\n  width: 60%;\n  min-width: 24rem;\n  max-width: 48rem;\n  border: 0 !important;\n  background-color: transparent !important;\n  margin-top: 25vh;\n  margin-left: 400px;\n}\n@media all and (max-width: 768px) {\n  .invisible-dialog-root {\n    margin-left: 0;\n  }\n}\n\n.node-search-box-dialog-mask {\n  align-items: flex-start !important;\n}\n</style>\n","<template>\n  <Button\n    v-tooltip=\"{\n      value: computedTooltip,\n      showDelay: 300,\n      hideDelay: 300\n    }\"\n    text\n    :pt=\"{\n      root: {\n        class: `side-bar-button ${\n          selected\n            ? 'p-button-primary side-bar-button-selected'\n            : 'p-button-secondary'\n        }`,\n        'aria-label': computedTooltip\n      }\n    }\"\n    @click=\"emit('click', $event)\"\n  >\n    <template #icon>\n      <div class=\"side-bar-button-content\">\n        <slot name=\"icon\">\n          <OverlayBadge v-if=\"shouldShowBadge\" :value=\"overlayValue\">\n            <i\n              v-if=\"typeof icon === 'string'\"\n              :class=\"icon + ' side-bar-button-icon'\"\n            />\n            <component :is=\"icon\" v-else class=\"side-bar-button-icon\" />\n          </OverlayBadge>\n          <i\n            v-else-if=\"typeof icon === 'string'\"\n            :class=\"icon + ' side-bar-button-icon'\"\n          />\n          <component\n            :is=\"icon\"\n            v-else-if=\"typeof icon === 'object'\"\n            class=\"side-bar-button-icon\"\n          />\n        </slot>\n        <span v-if=\"label && !isSmall\" class=\"side-bar-button-label\">{{\n          t(label)\n        }}</span>\n      </div>\n    </template>\n  </Button>\n</template>\n\n<script setup lang=\"ts\">\nimport Button from 'primevue/button'\nimport OverlayBadge from 'primevue/overlaybadge'\nimport { computed } from 'vue'\nimport type { Component } from 'vue'\nimport { useI18n } from 'vue-i18n'\n\nconst { t } = useI18n()\nconst {\n  icon = '',\n  selected = false,\n  tooltip = '',\n  tooltipSuffix = '',\n  iconBadge = '',\n  label = '',\n  isSmall = false\n} = defineProps<{\n  icon?: string | Component\n  selected?: boolean\n  tooltip?: string\n  tooltipSuffix?: string\n  iconBadge?: string | (() => string | null)\n  label?: string\n  isSmall?: boolean\n}>()\n\nconst emit = defineEmits<{\n  (e: 'click', event: MouseEvent): void\n}>()\nconst overlayValue = computed(() =>\n  typeof iconBadge === 'function' ? iconBadge() ?? '' : iconBadge\n)\nconst shouldShowBadge = computed(() => !!overlayValue.value)\nconst computedTooltip = computed(() => t(tooltip) + tooltipSuffix)\n</script>\n\n<style>\n.side-bar-button-icon {\n  font-size: var(--sidebar-icon-size) !important;\n}\n\n.side-bar-button-selected .side-bar-button-icon {\n  font-size: var(--sidebar-icon-size) !important;\n  font-weight: bold;\n}\n</style>\n\n<style scoped>\n@reference '../../assets/css/style.css';\n\n.side-bar-button {\n  width: var(--sidebar-width);\n  height: calc(var(--sidebar-width) + 0.5rem);\n  border-radius: 0;\n}\n\n.side-tool-bar-end .side-bar-button {\n  height: var(--sidebar-width);\n}\n\n.side-bar-button-content {\n  @apply flex flex-col items-center gap-2;\n}\n\n.side-bar-button-label {\n  @apply text-[10px] text-center;\n  line-height: 1;\n}\n\n.comfyui-body-left .side-bar-button.side-bar-button-selected,\n.comfyui-body-left .side-bar-button.side-bar-button-selected:hover {\n  border-left: 4px solid var(--p-button-text-primary-color);\n}\n\n.comfyui-body-right .side-bar-button.side-bar-button-selected,\n.comfyui-body-right .side-bar-button.side-bar-button-selected:hover {\n  border-right: 4px solid var(--p-button-text-primary-color);\n}\n</style>\n","<template>\n  <SidebarIcon\n    :tooltip=\"$t('menu.toggleBottomPanel')\"\n    :selected=\"bottomPanelStore.activePanel == 'terminal'\"\n    @click=\"bottomPanelStore.toggleBottomPanel\"\n  >\n    <template #icon>\n      <i-ph:terminal-bold />\n    </template>\n  </SidebarIcon>\n</template>\n\n<script setup lang=\"ts\">\nimport { useBottomPanelStore } from '@/stores/workspace/bottomPanelStore'\n\nimport SidebarIcon from './SidebarIcon.vue'\n\nconst bottomPanelStore = useBottomPanelStore()\n</script>\n","<template>\n  <SidebarIcon\n    :tooltip=\"tooltipText\"\n    :selected=\"isShortcutsPanelVisible\"\n    @click=\"toggleShortcutsPanel\"\n  >\n    <template #icon>\n      <i-lucide:keyboard />\n    </template>\n  </SidebarIcon>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { useI18n } from 'vue-i18n'\n\nimport { useCommandStore } from '@/stores/commandStore'\nimport { useBottomPanelStore } from '@/stores/workspace/bottomPanelStore'\n\nimport SidebarIcon from './SidebarIcon.vue'\n\nconst { t } = useI18n()\nconst bottomPanelStore = useBottomPanelStore()\nconst commandStore = useCommandStore()\nconst command = commandStore.getCommand('Workspace.ToggleBottomPanel.Shortcuts')\nconst { formatKeySequence } = commandStore\n\nconst isShortcutsPanelVisible = computed(\n  () => bottomPanelStore.activePanel === 'shortcuts'\n)\n\nconst tooltipText = computed(\n  () => `${t('shortcuts.keyboardShortcuts')} (${formatKeySequence(command)})`\n)\n\nconst toggleShortcutsPanel = () => {\n  bottomPanelStore.togglePanel('shortcuts')\n}\n</script>\n","<template>\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    :width=\"size\"\n    :height=\"size\"\n    viewBox=\"0 0 16 16\"\n    fill=\"none\"\n    :class=\"iconClass\"\n  >\n    <g clip-path=\"url(#clip0_1099_16244)\">\n      <path\n        d=\"M4.99992 3.00016C4.99992 2.07969 5.74611 1.3335 6.66658 1.3335C7.58706 1.3335 8.33325 2.07969 8.33325 3.00016V4.00016H8.99992C9.9318 4.00016 10.3977 4.00016 10.7653 4.1524C11.2553 4.35539 11.6447 4.74474 11.8477 5.2348C11.9999 5.60234 11.9999 6.06828 11.9999 7.00016H12.9999C13.9204 7.00016 14.6666 7.74635 14.6666 8.66683C14.6666 9.5873 13.9204 10.3335 12.9999 10.3335H11.9999V11.4668C11.9999 12.5869 11.9999 13.147 11.7819 13.5748C11.5902 13.9511 11.2842 14.2571 10.9079 14.4488C10.4801 14.6668 9.92002 14.6668 8.79992 14.6668H8.33325V13.5002C8.33325 12.6717 7.66168 12.0002 6.83325 12.0002C6.00482 12.0002 5.33325 12.6717 5.33325 13.5002V14.6668H4.53325C3.41315 14.6668 2.85309 14.6668 2.42527 14.4488C2.04895 14.2571 1.74299 13.9511 1.55124 13.5748C1.33325 13.147 1.33325 12.5869 1.33325 11.4668V10.3335H2.33325C3.25373 10.3335 3.99992 9.5873 3.99992 8.66683C3.99992 7.74635 3.25373 7.00016 2.33325 7.00016H1.33325C1.33325 6.06828 1.33325 5.60234 1.48549 5.2348C1.68848 4.74474 2.07783 4.35539 2.56789 4.1524C2.93543 4.00016 3.40137 4.00016 4.33325 4.00016H4.99992V3.00016Z\"\n        :stroke=\"color\"\n        stroke-width=\"1.2\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_1099_16244\">\n        <rect width=\"16\" height=\"16\" fill=\"white\" />\n      </clipPath>\n    </defs>\n  </svg>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\n\ninterface Props {\n  size?: number | string\n  color?: string\n  class?: string\n}\nconst {\n  size = 16,\n  color = 'currentColor',\n  class: className\n} = defineProps<Props>()\nconst iconClass = computed(() => className || '')\n</script>\n","import type { AxiosError, AxiosResponse } from 'axios'\nimport axios from 'axios'\nimport { ref } from 'vue'\n\nimport { COMFY_API_BASE_URL } from '@/config/comfyApi'\nimport type { components, operations } from '@/types/comfyRegistryTypes'\nimport { isAbortError } from '@/utils/typeGuardUtil'\n\nconst releaseApiClient = axios.create({\n  baseURL: COMFY_API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n})\n\n// Use generated types from OpenAPI spec\nexport type ReleaseNote = components['schemas']['ReleaseNote']\ntype GetReleasesParams = operations['getReleaseNotes']['parameters']['query']\n\n// Use generated error response type\ntype ErrorResponse = components['schemas']['ErrorResponse']\n\n// Release service for fetching release notes\nexport const useReleaseService = () => {\n  const isLoading = ref(false)\n  const error = ref<string | null>(null)\n\n  // No transformation needed - API response matches the generated type\n\n  // Handle API errors with context\n  const handleApiError = (\n    err: unknown,\n    context: string,\n    routeSpecificErrors?: Record<number, string>\n  ): string => {\n    if (!axios.isAxiosError(err))\n      return err instanceof Error\n        ? `${context}: ${err.message}`\n        : `${context}: Unknown error occurred`\n\n    const axiosError = err as AxiosError<ErrorResponse>\n\n    if (axiosError.response) {\n      const { status, data } = axiosError.response\n\n      if (routeSpecificErrors && routeSpecificErrors[status])\n        return routeSpecificErrors[status]\n\n      switch (status) {\n        case 400:\n          return `Bad request: ${data?.message || 'Invalid input'}`\n        case 401:\n          return 'Unauthorized: Authentication required'\n        case 403:\n          return `Forbidden: ${data?.message || 'Access denied'}`\n        case 404:\n          return `Not found: ${data?.message || 'Resource not found'}`\n        case 500:\n          return `Server error: ${data?.message || 'Internal server error'}`\n        default:\n          return `${context}: ${data?.message || axiosError.message}`\n      }\n    }\n\n    return `${context}: ${axiosError.message}`\n  }\n\n  // Execute API request with error handling\n  const executeApiRequest = async <T>(\n    apiCall: () => Promise<AxiosResponse<T>>,\n    errorContext: string,\n    routeSpecificErrors?: Record<number, string>\n  ): Promise<T | null> => {\n    isLoading.value = true\n    error.value = null\n\n    try {\n      const response = await apiCall()\n      return response.data\n    } catch (err) {\n      // Don't treat cancellations as errors\n      if (isAbortError(err)) return null\n\n      error.value = handleApiError(err, errorContext, routeSpecificErrors)\n      return null\n    } finally {\n      isLoading.value = false\n    }\n  }\n\n  // Fetch release notes from API\n  const getReleases = async (\n    params: GetReleasesParams,\n    signal?: AbortSignal\n  ): Promise<ReleaseNote[] | null> => {\n    const endpoint = '/releases'\n    const errorContext = 'Failed to get releases'\n    const routeSpecificErrors = {\n      400: 'Invalid project or version parameter'\n    }\n\n    const apiResponse = await executeApiRequest(\n      () =>\n        releaseApiClient.get<ReleaseNote[]>(endpoint, {\n          params,\n          signal\n        }),\n      errorContext,\n      routeSpecificErrors\n    )\n\n    return apiResponse\n  }\n\n  return {\n    isLoading,\n    error,\n    getReleases\n  }\n}\n","import { until } from '@vueuse/core'\nimport { defineStore } from 'pinia'\nimport { compare } from 'semver'\nimport { computed, ref } from 'vue'\n\nimport { useSettingStore } from '@/platform/settings/settingStore'\nimport { useSystemStatsStore } from '@/stores/systemStatsStore'\nimport { isElectron } from '@/utils/envUtil'\nimport { stringToLocale } from '@/utils/formatUtil'\n\nimport { type ReleaseNote, useReleaseService } from './releaseService'\n\n// Store for managing release notes\nexport const useReleaseStore = defineStore('release', () => {\n  // State\n  const releases = ref<ReleaseNote[]>([])\n  const isLoading = ref(false)\n  const error = ref<string | null>(null)\n\n  // Services\n  const releaseService = useReleaseService()\n  const systemStatsStore = useSystemStatsStore()\n  const settingStore = useSettingStore()\n\n  // Current ComfyUI version\n  const currentComfyUIVersion = computed(\n    () => systemStatsStore?.systemStats?.system?.comfyui_version ?? ''\n  )\n\n  // Release data from settings\n  const locale = computed(() => settingStore.get('Comfy.Locale'))\n  const releaseVersion = computed(() =>\n    settingStore.get('Comfy.Release.Version')\n  )\n  const releaseStatus = computed(() => settingStore.get('Comfy.Release.Status'))\n  const releaseTimestamp = computed(() =>\n    settingStore.get('Comfy.Release.Timestamp')\n  )\n  const showVersionUpdates = computed(() =>\n    settingStore.get('Comfy.Notification.ShowVersionUpdates')\n  )\n\n  // Most recent release\n  const recentRelease = computed(() => {\n    return releases.value[0] ?? null\n  })\n\n  // 3 most recent releases\n  const recentReleases = computed(() => {\n    return releases.value.slice(0, 3)\n  })\n\n  // Helper constants\n  const THREE_DAYS_MS = 3 * 24 * 60 * 60 * 1000 // 3 days\n\n  // New version available?\n  const isNewVersionAvailable = computed(\n    () =>\n      !!recentRelease.value &&\n      compare(\n        recentRelease.value.version,\n        currentComfyUIVersion.value || '0.0.0'\n      ) > 0\n  )\n\n  const isLatestVersion = computed(\n    () =>\n      !!recentRelease.value &&\n      compare(\n        recentRelease.value.version,\n        currentComfyUIVersion.value || '0.0.0'\n      ) === 0\n  )\n\n  const hasMediumOrHighAttention = computed(() =>\n    recentReleases.value\n      .slice(0, -1)\n      .some(\n        (release) =>\n          release.attention === 'medium' || release.attention === 'high'\n      )\n  )\n\n  // Show toast if needed\n  const shouldShowToast = computed(() => {\n    // Only show on desktop version\n    if (!isElectron()) {\n      return false\n    }\n\n    // Skip if notifications are disabled\n    if (!showVersionUpdates.value) {\n      return false\n    }\n\n    if (!isNewVersionAvailable.value) {\n      return false\n    }\n\n    // Skip if low attention\n    if (!hasMediumOrHighAttention.value) {\n      return false\n    }\n\n    // Skip if user already skipped or changelog seen\n    if (\n      releaseVersion.value === recentRelease.value?.version &&\n      ['skipped', 'changelog seen'].includes(releaseStatus.value)\n    ) {\n      return false\n    }\n\n    return true\n  })\n\n  // Show red-dot indicator\n  const shouldShowRedDot = computed(() => {\n    // Only show on desktop version\n    if (!isElectron()) {\n      return false\n    }\n\n    // Skip if notifications are disabled\n    if (!showVersionUpdates.value) {\n      return false\n    }\n\n    // Already latest → no dot\n    if (!isNewVersionAvailable.value) {\n      return false\n    }\n\n    const { version } = recentRelease.value\n\n    // Changelog seen → clear dot\n    if (\n      releaseVersion.value === version &&\n      releaseStatus.value === 'changelog seen'\n    ) {\n      return false\n    }\n\n    // Attention medium / high (levels 2 & 3)\n    if (hasMediumOrHighAttention.value) {\n      // Persist until changelog is opened\n      return true\n    }\n\n    // Attention low (level 1) and skipped → keep up to 3 d\n    if (\n      releaseVersion.value === version &&\n      releaseStatus.value === 'skipped' &&\n      releaseTimestamp.value &&\n      Date.now() - releaseTimestamp.value >= THREE_DAYS_MS\n    ) {\n      return false\n    }\n\n    // Not skipped → show\n    return true\n  })\n\n  // Show \"What's New\" popup\n  const shouldShowPopup = computed(() => {\n    // Only show on desktop version\n    if (!isElectron()) {\n      return false\n    }\n\n    // Skip if notifications are disabled\n    if (!showVersionUpdates.value) {\n      return false\n    }\n\n    if (!isLatestVersion.value) {\n      return false\n    }\n\n    // Hide if already seen\n    if (\n      releaseVersion.value === recentRelease.value.version &&\n      releaseStatus.value === \"what's new seen\"\n    ) {\n      return false\n    }\n\n    return true\n  })\n\n  // Action handlers for user interactions\n  async function handleSkipRelease(version: string): Promise<void> {\n    if (\n      version !== recentRelease.value?.version ||\n      releaseStatus.value === 'changelog seen'\n    ) {\n      return\n    }\n\n    await settingStore.set('Comfy.Release.Version', version)\n    await settingStore.set('Comfy.Release.Status', 'skipped')\n    await settingStore.set('Comfy.Release.Timestamp', Date.now())\n  }\n\n  async function handleShowChangelog(version: string): Promise<void> {\n    if (version !== recentRelease.value?.version) {\n      return\n    }\n\n    await settingStore.set('Comfy.Release.Version', version)\n    await settingStore.set('Comfy.Release.Status', 'changelog seen')\n    await settingStore.set('Comfy.Release.Timestamp', Date.now())\n  }\n\n  async function handleWhatsNewSeen(version: string): Promise<void> {\n    if (version !== recentRelease.value?.version) {\n      return\n    }\n\n    await settingStore.set('Comfy.Release.Version', version)\n    await settingStore.set('Comfy.Release.Status', \"what's new seen\")\n    await settingStore.set('Comfy.Release.Timestamp', Date.now())\n  }\n\n  // Fetch releases from API\n  async function fetchReleases(): Promise<void> {\n    if (isLoading.value) {\n      return\n    }\n\n    // Skip fetching if notifications are disabled\n    if (!showVersionUpdates.value) {\n      return\n    }\n\n    // Skip fetching if API nodes are disabled via argv\n    if (\n      systemStatsStore.systemStats?.system?.argv?.includes(\n        '--disable-api-nodes'\n      )\n    ) {\n      return\n    }\n    isLoading.value = true\n    error.value = null\n\n    try {\n      // Ensure system stats are loaded\n      if (!systemStatsStore.systemStats) {\n        await until(systemStatsStore.isInitialized)\n      }\n\n      const fetchedReleases = await releaseService.getReleases({\n        project: 'comfyui',\n        current_version: currentComfyUIVersion.value,\n        form_factor: systemStatsStore.getFormFactor(),\n        locale: stringToLocale(locale.value)\n      })\n\n      if (fetchedReleases !== null) {\n        releases.value = fetchedReleases\n      } else if (releaseService.error.value) {\n        error.value = releaseService.error.value\n      }\n    } catch (err) {\n      error.value =\n        err instanceof Error ? err.message : 'Unknown error occurred'\n    } finally {\n      isLoading.value = false\n    }\n  }\n\n  // Initialize store\n  async function initialize(): Promise<void> {\n    await fetchReleases()\n  }\n\n  return {\n    releases,\n    isLoading,\n    error,\n    recentRelease,\n    recentReleases,\n    shouldShowToast,\n    shouldShowRedDot,\n    shouldShowPopup,\n    shouldShowUpdateButton: isNewVersionAvailable,\n    handleSkipRelease,\n    handleShowChangelog,\n    handleWhatsNewSeen,\n    fetchReleases,\n    initialize\n  }\n})\n","<template>\n  <div class=\"help-center-menu\" role=\"menu\" aria-label=\"Help Center Menu\">\n    <!-- Main Menu Items -->\n    <nav class=\"help-menu-section\" role=\"menubar\">\n      <button\n        v-for=\"menuItem in menuItems\"\n        v-show=\"menuItem.visible !== false\"\n        :key=\"menuItem.key\"\n        type=\"button\"\n        class=\"help-menu-item\"\n        :class=\"{ 'more-item': menuItem.key === 'more' }\"\n        role=\"menuitem\"\n        @click=\"menuItem.action\"\n        @mouseenter=\"onMenuItemHover(menuItem.key, $event)\"\n        @mouseleave=\"onMenuItemLeave(menuItem.key)\"\n      >\n        <div class=\"help-menu-icon-container\">\n          <div class=\"help-menu-icon\">\n            <component\n              :is=\"menuItem.icon\"\n              v-if=\"typeof menuItem.icon === 'object'\"\n              :size=\"16\"\n            />\n            <i v-else :class=\"menuItem.icon\" />\n          </div>\n          <div v-if=\"menuItem.showRedDot\" class=\"menu-red-dot\" />\n        </div>\n        <span class=\"menu-label\">{{ menuItem.label }}</span>\n        <i v-if=\"menuItem.key === 'more'\" class=\"pi pi-chevron-right\" />\n      </button>\n    </nav>\n\n    <!-- More Submenu -->\n    <Teleport to=\"body\">\n      <div\n        v-if=\"isSubmenuVisible\"\n        ref=\"submenuRef\"\n        class=\"more-submenu\"\n        :style=\"submenuStyle\"\n        @mouseenter=\"onSubmenuHover\"\n        @mouseleave=\"onSubmenuLeave\"\n      >\n        <template\n          v-for=\"submenuItem in moreMenuItem?.items\"\n          :key=\"submenuItem.key\"\n        >\n          <div\n            v-if=\"submenuItem.type === 'divider'\"\n            v-show=\"submenuItem.visible !== false\"\n            class=\"submenu-divider\"\n          />\n          <button\n            v-else\n            v-show=\"submenuItem.visible !== false\"\n            type=\"button\"\n            class=\"help-menu-item submenu-item\"\n            role=\"menuitem\"\n            @click=\"submenuItem.action\"\n          >\n            <span class=\"menu-label\">{{ submenuItem.label }}</span>\n          </button>\n        </template>\n      </div>\n    </Teleport>\n\n    <!-- What's New Section -->\n    <section v-if=\"showVersionUpdates\" class=\"whats-new-section\">\n      <h3 class=\"section-description\">{{ $t('helpCenter.whatsNew') }}</h3>\n\n      <!-- Release Items -->\n      <div v-if=\"hasReleases\" role=\"group\" aria-label=\"Recent releases\">\n        <article\n          v-for=\"release in releaseStore.recentReleases\"\n          :key=\"release.id || release.version\"\n          class=\"help-menu-item release-menu-item\"\n          role=\"button\"\n          tabindex=\"0\"\n          @click=\"onReleaseClick(release)\"\n          @keydown.enter=\"onReleaseClick(release)\"\n          @keydown.space.prevent=\"onReleaseClick(release)\"\n        >\n          <i class=\"pi pi-refresh help-menu-icon\" aria-hidden=\"true\" />\n          <div class=\"release-content\">\n            <span class=\"release-title\">\n              {{\n                $t('g.releaseTitle', {\n                  package: 'Comfy',\n                  version: release.version\n                })\n              }}\n            </span>\n            <time class=\"release-date\" :datetime=\"release.published_at\">\n              <span class=\"normal-state\">\n                {{ formatReleaseDate(release.published_at) }}\n              </span>\n              <span class=\"hover-state\">\n                {{ $t('helpCenter.clickToLearnMore') }}\n              </span>\n            </time>\n          </div>\n          <Button\n            v-if=\"shouldShowUpdateButton(release)\"\n            :label=\"$t('helpCenter.updateAvailable')\"\n            size=\"small\"\n            class=\"update-button\"\n            @click.stop=\"onUpdate(release)\"\n          />\n        </article>\n      </div>\n\n      <!-- Loading State -->\n      <div\n        v-else-if=\"releaseStore.isLoading\"\n        class=\"help-menu-item\"\n        role=\"status\"\n        aria-live=\"polite\"\n      >\n        <i class=\"pi pi-spin pi-spinner help-menu-icon\" aria-hidden=\"true\" />\n        <span>{{ $t('helpCenter.loadingReleases') }}</span>\n      </div>\n\n      <!-- No Releases State -->\n      <div v-else class=\"help-menu-item\" role=\"status\">\n        <i class=\"pi pi-info-circle help-menu-icon\" aria-hidden=\"true\" />\n        <span>{{ $t('helpCenter.noRecentReleases') }}</span>\n      </div>\n    </section>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport Button from 'primevue/button'\nimport {\n  type CSSProperties,\n  type Component,\n  computed,\n  nextTick,\n  onMounted,\n  ref\n} from 'vue'\nimport { useI18n } from 'vue-i18n'\n\nimport PuzzleIcon from '@/components/icons/PuzzleIcon.vue'\nimport { useSettingStore } from '@/platform/settings/settingStore'\nimport type { ReleaseNote } from '@/platform/updates/common/releaseService'\nimport { useReleaseStore } from '@/platform/updates/common/releaseStore'\nimport { useCommandStore } from '@/stores/commandStore'\nimport { electronAPI, isElectron } from '@/utils/envUtil'\nimport { formatVersionAnchor } from '@/utils/formatUtil'\nimport { useConflictAcknowledgment } from '@/workbench/extensions/manager/composables/useConflictAcknowledgment'\nimport { useManagerState } from '@/workbench/extensions/manager/composables/useManagerState'\nimport { ManagerTab } from '@/workbench/extensions/manager/types/comfyManagerTypes'\n\n// Types\ninterface MenuItem {\n  key: string\n  icon?: string | Component\n  label?: string\n  action?: () => void\n  visible?: boolean\n  type?: 'item' | 'divider'\n  items?: MenuItem[]\n  showRedDot?: boolean\n}\n\n// Constants\nconst EXTERNAL_LINKS = {\n  DOCS: 'https://docs.comfy.org/',\n  DISCORD: 'https://www.comfy.org/discord',\n  GITHUB: 'https://github.com/comfyanonymous/ComfyUI',\n  DESKTOP_GUIDE_WINDOWS: 'https://docs.comfy.org/installation/desktop/windows',\n  DESKTOP_GUIDE_MACOS: 'https://docs.comfy.org/installation/desktop/macos',\n  UPDATE_GUIDE: 'https://docs.comfy.org/installation/update_comfyui'\n} as const\n\nconst TIME_UNITS = {\n  MINUTE: 60 * 1000,\n  HOUR: 60 * 60 * 1000,\n  DAY: 24 * 60 * 60 * 1000,\n  WEEK: 7 * 24 * 60 * 60 * 1000,\n  MONTH: 30 * 24 * 60 * 60 * 1000,\n  YEAR: 365 * 24 * 60 * 60 * 1000\n} as const\n\nconst SUBMENU_CONFIG = {\n  DELAY_MS: 100,\n  OFFSET_PX: 8,\n  Z_INDEX: 10001\n} as const\n\n// Composables\nconst { t, locale } = useI18n()\nconst releaseStore = useReleaseStore()\nconst commandStore = useCommandStore()\nconst settingStore = useSettingStore()\n\n// Emits\nconst emit = defineEmits<{\n  close: []\n}>()\n\n// State\nconst isSubmenuVisible = ref(false)\nconst submenuRef = ref<HTMLElement | null>(null)\nconst submenuStyle = ref<CSSProperties>({})\nlet hoverTimeout: number | null = null\n\n// Computed\nconst hasReleases = computed(() => releaseStore.releases.length > 0)\nconst showVersionUpdates = computed(() =>\n  settingStore.get('Comfy.Notification.ShowVersionUpdates')\n)\n\n// Use conflict acknowledgment state from composable\nconst { shouldShowRedDot: shouldShowManagerRedDot } =\n  useConflictAcknowledgment()\n\nconst moreItems = computed<MenuItem[]>(() => {\n  const allMoreItems: MenuItem[] = [\n    {\n      key: 'desktop-guide',\n      type: 'item',\n      label: t('helpCenter.desktopUserGuide'),\n      visible: isElectron(),\n      action: () => {\n        const docsUrl =\n          electronAPI().getPlatform() === 'darwin'\n            ? EXTERNAL_LINKS.DESKTOP_GUIDE_MACOS\n            : EXTERNAL_LINKS.DESKTOP_GUIDE_WINDOWS\n        openExternalLink(docsUrl)\n        emit('close')\n      }\n    },\n    {\n      key: 'dev-tools',\n      type: 'item',\n      label: t('helpCenter.openDevTools'),\n      visible: isElectron(),\n      action: () => {\n        openDevTools()\n        emit('close')\n      }\n    },\n    {\n      key: 'divider-1',\n      type: 'divider',\n      visible: isElectron()\n    },\n    {\n      key: 'reinstall',\n      type: 'item',\n      label: t('helpCenter.reinstall'),\n      visible: isElectron(),\n      action: () => {\n        onReinstall()\n        emit('close')\n      }\n    }\n  ]\n\n  // Filter for visible items only\n  return allMoreItems.filter((item) => item.visible !== false)\n})\n\nconst hasVisibleMoreItems = computed(() => {\n  return !!moreItems.value.length\n})\n\nconst moreMenuItem = computed(() =>\n  menuItems.value.find((item) => item.key === 'more')\n)\n\nconst menuItems = computed<MenuItem[]>(() => {\n  return [\n    {\n      key: 'docs',\n      type: 'item',\n      icon: 'pi pi-book',\n      label: t('helpCenter.docs'),\n      action: () => {\n        openExternalLink(EXTERNAL_LINKS.DOCS)\n        emit('close')\n      }\n    },\n    {\n      key: 'discord',\n      type: 'item',\n      icon: 'pi pi-discord',\n      label: 'Discord',\n      action: () => {\n        openExternalLink(EXTERNAL_LINKS.DISCORD)\n        emit('close')\n      }\n    },\n    {\n      key: 'github',\n      type: 'item',\n      icon: 'pi pi-github',\n      label: t('helpCenter.github'),\n      action: () => {\n        openExternalLink(EXTERNAL_LINKS.GITHUB)\n        emit('close')\n      }\n    },\n    {\n      key: 'help',\n      type: 'item',\n      icon: 'pi pi-question-circle',\n      label: t('helpCenter.helpFeedback'),\n      action: () => {\n        void commandStore.execute('Comfy.ContactSupport')\n        emit('close')\n      }\n    },\n    {\n      key: 'manager',\n      type: 'item',\n      icon: PuzzleIcon,\n      label: t('helpCenter.managerExtension'),\n      showRedDot: shouldShowManagerRedDot.value,\n      action: async () => {\n        await useManagerState().openManager({\n          initialTab: ManagerTab.All,\n          showToastOnLegacyError: false\n        })\n        emit('close')\n      }\n    },\n    {\n      key: 'more',\n      type: 'item',\n      icon: '',\n      label: t('helpCenter.more'),\n      visible: hasVisibleMoreItems.value,\n      action: () => {}, // No action for more item\n      items: moreItems.value\n    }\n  ]\n})\n\n// Utility Functions\nconst openExternalLink = (url: string): void => {\n  window.open(url, '_blank', 'noopener,noreferrer')\n}\n\nconst clearHoverTimeout = (): void => {\n  if (hoverTimeout) {\n    clearTimeout(hoverTimeout)\n    hoverTimeout = null\n  }\n}\n\nconst calculateSubmenuPosition = (button: HTMLElement): CSSProperties => {\n  const rect = button.getBoundingClientRect()\n  const submenuWidth = 210 // Width defined in CSS\n\n  // Get actual submenu height if available, otherwise estimate based on visible item count\n  const visibleItemCount =\n    moreMenuItem.value?.items?.filter((item) => item.visible !== false)\n      .length || 0\n  const estimatedHeight = visibleItemCount * 48 + 16 // ~48px per item + padding\n  const submenuHeight = submenuRef.value?.offsetHeight || estimatedHeight\n\n  // Get viewport dimensions\n  const viewportWidth = window.innerWidth\n  const viewportHeight = window.innerHeight\n\n  // Calculate basic position (aligned with button)\n  let top = rect.top\n  let left = rect.right + SUBMENU_CONFIG.OFFSET_PX\n\n  // Check if submenu would overflow viewport on the right\n  if (left + submenuWidth > viewportWidth) {\n    // Position submenu to the left of the button instead\n    left = rect.left - submenuWidth - SUBMENU_CONFIG.OFFSET_PX\n  }\n\n  // Check if submenu would overflow viewport at the bottom\n  if (top + submenuHeight > viewportHeight) {\n    // Position submenu above the button, aligned to bottom\n    top = Math.max(\n      SUBMENU_CONFIG.OFFSET_PX, // Minimum distance from top of viewport\n      rect.bottom - submenuHeight\n    )\n  }\n\n  // Ensure submenu doesn't go above viewport\n  if (top < SUBMENU_CONFIG.OFFSET_PX) {\n    top = SUBMENU_CONFIG.OFFSET_PX\n  }\n\n  top -= 8\n\n  return {\n    position: 'fixed',\n    top: `${top}px`,\n    left: `${left}px`,\n    zIndex: SUBMENU_CONFIG.Z_INDEX\n  }\n}\n\nconst formatReleaseDate = (dateString?: string): string => {\n  if (!dateString) return 'date'\n\n  const date = new Date(dateString)\n  const now = new Date()\n  const diffTime = Math.abs(now.getTime() - date.getTime())\n\n  const timeUnits = [\n    { unit: TIME_UNITS.YEAR, suffix: 'y' },\n    { unit: TIME_UNITS.MONTH, suffix: 'mo' },\n    { unit: TIME_UNITS.WEEK, suffix: 'w' },\n    { unit: TIME_UNITS.DAY, suffix: 'd' },\n    { unit: TIME_UNITS.HOUR, suffix: 'h' },\n    { unit: TIME_UNITS.MINUTE, suffix: 'min' }\n  ]\n\n  for (const { unit, suffix } of timeUnits) {\n    const value = Math.floor(diffTime / unit)\n    if (value > 0) {\n      return `${value}${suffix} ago`\n    }\n  }\n\n  return 'now'\n}\n\nconst shouldShowUpdateButton = (release: ReleaseNote): boolean => {\n  return (\n    releaseStore.shouldShowUpdateButton &&\n    release === releaseStore.recentReleases[0]\n  )\n}\n\n// Event Handlers\nconst onMenuItemHover = async (\n  key: string,\n  event: MouseEvent\n): Promise<void> => {\n  if (key !== 'more' || !moreMenuItem.value?.items) return\n\n  // Don't show submenu if all items are hidden\n  const hasVisibleItems = moreMenuItem.value.items.some(\n    (item) => item.visible !== false\n  )\n  if (!hasVisibleItems) return\n\n  clearHoverTimeout()\n\n  const moreButton = event.currentTarget as HTMLElement\n\n  // Calculate initial position before showing submenu\n  submenuStyle.value = calculateSubmenuPosition(moreButton)\n\n  // Show submenu with correct position\n  isSubmenuVisible.value = true\n\n  // After submenu is rendered, refine position if needed\n  await nextTick()\n  if (submenuRef.value) {\n    submenuStyle.value = calculateSubmenuPosition(moreButton)\n  }\n}\n\nconst onMenuItemLeave = (key: string): void => {\n  if (key !== 'more') return\n\n  hoverTimeout = window.setTimeout(() => {\n    isSubmenuVisible.value = false\n  }, SUBMENU_CONFIG.DELAY_MS)\n}\n\nconst onSubmenuHover = (): void => {\n  clearHoverTimeout()\n}\n\nconst onSubmenuLeave = (): void => {\n  isSubmenuVisible.value = false\n}\n\nconst openDevTools = (): void => {\n  if (isElectron()) {\n    electronAPI().openDevTools()\n  }\n}\n\nconst onReinstall = (): void => {\n  if (isElectron()) {\n    void electronAPI().reinstall()\n  }\n}\n\nconst onReleaseClick = (release: ReleaseNote): void => {\n  void releaseStore.handleShowChangelog(release.version)\n  const versionAnchor = formatVersionAnchor(release.version)\n  const changelogUrl = `${getChangelogUrl()}#${versionAnchor}`\n  openExternalLink(changelogUrl)\n  emit('close')\n}\n\nconst onUpdate = (_: ReleaseNote): void => {\n  openExternalLink(EXTERNAL_LINKS.UPDATE_GUIDE)\n  emit('close')\n}\n\n// Generate language-aware changelog URL\nconst getChangelogUrl = (): string => {\n  const isChineseLocale = locale.value === 'zh'\n  return isChineseLocale\n    ? 'https://docs.comfy.org/zh-CN/changelog'\n    : 'https://docs.comfy.org/changelog'\n}\n\n// Lifecycle\nonMounted(async () => {\n  if (!hasReleases.value) {\n    await releaseStore.fetchReleases()\n  }\n})\n</script>\n\n<style scoped>\n.help-center-menu {\n  width: 380px;\n  max-height: 500px;\n  overflow-y: auto;\n  background: var(--p-content-background);\n  border-radius: 12px;\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.15);\n  border: 1px solid var(--p-content-border-color);\n  backdrop-filter: blur(8px);\n  position: relative;\n}\n\n.help-menu-section {\n  padding: 0.5rem 0;\n  border-bottom: 1px solid var(--p-content-border-color);\n}\n\n.help-menu-item {\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 0.75rem 1rem;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  transition: background-color 0.2s;\n  font-size: 0.9rem;\n  color: inherit;\n  text-align: left;\n}\n\n.help-menu-item:hover {\n  background-color: #007aff26;\n}\n\n.help-menu-item:focus,\n.help-menu-item:focus-visible {\n  outline: none;\n  box-shadow: none;\n}\n\n.help-menu-icon-container {\n  position: relative;\n  margin-right: 0.75rem;\n  width: 16px;\n  flex-shrink: 0;\n}\n\n.help-menu-icon {\n  margin-right: 0.75rem;\n  font-size: 1rem;\n  color: var(--p-text-muted-color);\n  width: 16px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-shrink: 0;\n}\n\n.help-menu-icon svg {\n  color: var(--p-text-muted-color);\n}\n\n.menu-red-dot {\n  position: absolute;\n  top: -2px;\n  right: -2px;\n  width: 8px;\n  height: 8px;\n  background: #ff3b30;\n  border-radius: 50%;\n  border: 1.5px solid var(--p-content-background);\n  z-index: 1;\n}\n\n.menu-label {\n  flex: 1;\n}\n\n.more-item {\n  justify-content: space-between;\n}\n\n.whats-new-section {\n  padding: 0.5rem 0;\n}\n\n.section-description {\n  font-size: 0.8rem;\n  font-weight: 600;\n  color: var(--p-text-muted-color);\n  margin: 0 0 0.5rem 0;\n  padding: 0 1rem;\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n}\n\n.release-menu-item {\n  position: relative;\n}\n\n.release-content {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  gap: 0.25rem;\n  min-width: 0;\n}\n\n.release-title {\n  font-size: 0.9rem;\n  line-height: 1.2;\n  font-weight: 500;\n}\n\n.release-date {\n  height: 16px;\n  font-size: 0.75rem;\n  color: var(--p-text-muted-color);\n}\n\n.release-date .hover-state {\n  display: none;\n}\n\n.release-menu-item:hover .release-date .normal-state,\n.release-menu-item:focus-within .release-date .normal-state {\n  display: none;\n}\n\n.release-menu-item:hover .release-date .hover-state,\n.release-menu-item:focus-within .release-date .hover-state {\n  display: inline;\n}\n\n.update-button {\n  margin-left: 0.5rem;\n  font-size: 0.8rem;\n  padding: 0.25rem 0.75rem;\n  flex-shrink: 0;\n}\n\n/* Submenu Styles */\n.more-submenu {\n  width: 210px;\n  padding: 0.5rem 0;\n  background: var(--p-content-background);\n  border-radius: 12px;\n  border: 1px solid var(--p-content-border-color);\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.15);\n  overflow: hidden;\n  transition: opacity 0.15s ease-out;\n}\n\n.submenu-item {\n  padding: 0.75rem 1rem;\n  color: inherit;\n  font-size: 0.9rem;\n  font-weight: inherit;\n  line-height: inherit;\n}\n\n.submenu-item:hover {\n  background-color: #007aff26;\n}\n\n.submenu-item:focus,\n.submenu-item:focus-visible {\n  outline: none;\n  box-shadow: none;\n}\n\n.submenu-divider {\n  height: 1px;\n  background: #3e3e3e;\n  margin: 0.5rem 0;\n}\n\n/* Scrollbar Styling */\n.help-center-menu::-webkit-scrollbar {\n  width: 6px;\n}\n\n.help-center-menu::-webkit-scrollbar-track {\n  background: transparent;\n}\n\n.help-center-menu::-webkit-scrollbar-thumb {\n  background: var(--p-content-border-color);\n  border-radius: 3px;\n}\n\n.help-center-menu::-webkit-scrollbar-thumb:hover {\n  background: var(--p-text-muted-color);\n}\n\n/* Reduced Motion */\n@media (prefers-reduced-motion: reduce) {\n  .help-menu-item {\n    transition: none;\n  }\n}\n</style>\n","<template>\n  <div v-if=\"shouldShow\" class=\"release-toast-popup\">\n    <div class=\"release-notification-toast\">\n      <!-- Header section with icon and text -->\n      <div class=\"toast-header\">\n        <div class=\"toast-icon\">\n          <i class=\"pi pi-download\" />\n        </div>\n        <div class=\"toast-text\">\n          <div class=\"toast-title\">\n            {{ $t('releaseToast.newVersionAvailable') }}\n          </div>\n          <div class=\"toast-version-badge\">\n            {{ latestRelease?.version }}\n          </div>\n        </div>\n      </div>\n\n      <!-- Actions section -->\n      <div class=\"toast-actions-section\">\n        <div class=\"actions-row\">\n          <div class=\"left-actions\">\n            <a\n              class=\"learn-more-link\"\n              :href=\"changelogUrl\"\n              target=\"_blank\"\n              rel=\"noopener,noreferrer\"\n              @click=\"handleLearnMore\"\n            >\n              {{ $t('releaseToast.whatsNew') }}\n            </a>\n          </div>\n          <div class=\"right-actions\">\n            <button class=\"skip-button\" @click=\"handleSkip\">\n              {{ $t('releaseToast.skip') }}\n            </button>\n            <button class=\"cta-button\" @click=\"handleUpdate\">\n              {{ $t('releaseToast.update') }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, onMounted, ref, watch } from 'vue'\nimport { useI18n } from 'vue-i18n'\n\nimport { formatVersionAnchor } from '@/utils/formatUtil'\n\nimport type { ReleaseNote } from '../common/releaseService'\nimport { useReleaseStore } from '../common/releaseStore'\n\nconst { locale } = useI18n()\nconst releaseStore = useReleaseStore()\n\n// Local state for dismissed status\nconst isDismissed = ref(false)\n\n// Get latest release from store\nconst latestRelease = computed<ReleaseNote | null>(\n  () => releaseStore.recentRelease\n)\n\n// Show toast when new version available and not dismissed\nconst shouldShow = computed(\n  () => releaseStore.shouldShowToast && !isDismissed.value\n)\n\n// Generate changelog URL with version anchor (language-aware)\nconst changelogUrl = computed(() => {\n  const isChineseLocale = locale.value === 'zh'\n  const baseUrl = isChineseLocale\n    ? 'https://docs.comfy.org/zh-CN/changelog'\n    : 'https://docs.comfy.org/changelog'\n\n  if (latestRelease.value?.version) {\n    const versionAnchor = formatVersionAnchor(latestRelease.value.version)\n    return `${baseUrl}#${versionAnchor}`\n  }\n  return baseUrl\n})\n\n// Auto-hide timer\nlet hideTimer: ReturnType<typeof setTimeout> | null = null\n\nconst startAutoHide = () => {\n  if (hideTimer) clearTimeout(hideTimer)\n  hideTimer = setTimeout(() => {\n    dismissToast()\n  }, 8000) // 8 second auto-hide\n}\n\nconst clearAutoHide = () => {\n  if (hideTimer) {\n    clearTimeout(hideTimer)\n    hideTimer = null\n  }\n}\n\nconst dismissToast = () => {\n  isDismissed.value = true\n  clearAutoHide()\n}\n\nconst handleSkip = () => {\n  if (latestRelease.value) {\n    void releaseStore.handleSkipRelease(latestRelease.value.version)\n  }\n  dismissToast()\n}\n\nconst handleLearnMore = () => {\n  if (latestRelease.value) {\n    void releaseStore.handleShowChangelog(latestRelease.value.version)\n  }\n  // Do not dismiss; anchor will navigate in new tab but keep toast? spec maybe wants dismiss? We'll dismiss.\n  dismissToast()\n}\n\nconst handleUpdate = () => {\n  window.open('https://docs.comfy.org/installation/update_comfyui', '_blank')\n  dismissToast()\n}\n\n// Learn more handled by anchor href\n\n// Start auto-hide when toast becomes visible\nwatch(shouldShow, (isVisible) => {\n  if (isVisible) {\n    startAutoHide()\n  } else {\n    clearAutoHide()\n  }\n})\n\n// Initialize on mount\nonMounted(async () => {\n  // Fetch releases if not already loaded\n  if (!releaseStore.releases.length) {\n    await releaseStore.fetchReleases()\n  }\n})\n</script>\n\n<style scoped>\n/* Toast popup - positioning handled by parent */\n.release-toast-popup {\n  position: absolute;\n  bottom: 1rem;\n  z-index: 1000;\n  pointer-events: auto;\n}\n\n/* Sidebar positioning classes applied by parent - matching help center */\n.release-toast-popup.sidebar-left {\n  left: 1rem;\n}\n\n.release-toast-popup.sidebar-left.small-sidebar {\n  left: 1rem;\n}\n\n.release-toast-popup.sidebar-right {\n  right: 1rem;\n}\n\n/* Main toast container */\n.release-notification-toast {\n  width: 448px;\n  padding: 16px 16px 8px;\n  background: #353535;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  border-radius: 12px;\n  outline: 1px solid #4e4e4e;\n  outline-offset: -1px;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n/* Header section */\n.toast-header {\n  display: flex;\n  gap: 16px;\n  align-items: flex-start;\n}\n\n/* Icon container */\n.toast-icon {\n  width: 42px;\n  height: 42px;\n  padding: 10px;\n  background: rgba(0, 122, 255, 0.2);\n  border-radius: 8px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.toast-icon i {\n  color: #007aff;\n  font-size: 16px;\n}\n\n/* Text content */\n.toast-text {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 4px;\n}\n\n.toast-title {\n  color: white;\n  font-size: 14px;\n  font-family: 'Satoshi', sans-serif;\n  font-weight: 500;\n  line-height: 18.2px;\n}\n\n.toast-version-badge {\n  color: #a0a1a2;\n  font-size: 12px;\n  font-family: 'Satoshi', sans-serif;\n  font-weight: 500;\n  line-height: 15.6px;\n}\n\n/* Actions section */\n.toast-actions-section {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.actions-row {\n  padding-left: 58px; /* Align with text content */\n  padding-right: 0;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.left-actions {\n  display: flex;\n  align-items: center;\n}\n\n/* Learn more link - simple text link */\n.learn-more-link {\n  color: #60a5fa;\n  font-size: 12px;\n  font-family: 'Inter', sans-serif;\n  font-weight: 500;\n  line-height: 15.6px;\n  text-decoration: none;\n}\n\n.learn-more-link:hover {\n  text-decoration: underline;\n}\n\n.right-actions {\n  display: flex;\n  gap: 8px;\n  align-items: center;\n}\n\n/* Button styles */\n.skip-button {\n  padding: 8px 16px;\n  background: #353535;\n  border-radius: 6px;\n  outline: 1px solid #4e4e4e;\n  outline-offset: -1px;\n  border: none;\n  color: #aeaeb2;\n  font-size: 12px;\n  font-family: 'Inter', sans-serif;\n  font-weight: 500;\n  cursor: pointer;\n}\n\n.skip-button:hover {\n  background: #404040;\n}\n\n.cta-button {\n  padding: 8px 16px;\n  background: white;\n  border-radius: 6px;\n  outline: 1px solid #4e4e4e;\n  outline-offset: -1px;\n  border: none;\n  color: black;\n  font-size: 12px;\n  font-family: 'Inter', sans-serif;\n  font-weight: 500;\n  cursor: pointer;\n}\n\n.cta-button:hover {\n  background: #f0f0f0;\n}\n</style>\n","<template>\n  <div v-if=\"shouldShow\" class=\"whats-new-popup-container\">\n    <!-- Arrow pointing to help center -->\n    <div class=\"help-center-arrow\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"16\"\n        height=\"19\"\n        viewBox=\"0 0 16 19\"\n        fill=\"none\"\n      >\n        <!-- Arrow fill -->\n        <path\n          d=\"M15.25 1.27246L15.25 17.7275L0.999023 9.5L15.25 1.27246Z\"\n          fill=\"#353535\"\n        />\n        <!-- Top and bottom outlines only -->\n        <path\n          d=\"M15.25 1.27246L0.999023 9.5\"\n          stroke=\"#4e4e4e\"\n          stroke-width=\"1\"\n          fill=\"none\"\n        />\n        <path\n          d=\"M0.999023 9.5L15.25 17.7275\"\n          stroke=\"#4e4e4e\"\n          stroke-width=\"1\"\n          fill=\"none\"\n        />\n      </svg>\n    </div>\n\n    <div class=\"whats-new-popup\" @click.stop>\n      <!-- Close Button -->\n      <button\n        class=\"close-button\"\n        :aria-label=\"$t('g.close')\"\n        @click=\"closePopup\"\n      >\n        <div class=\"close-icon\"></div>\n      </button>\n\n      <!-- Release Content -->\n      <div class=\"popup-content\">\n        <div class=\"content-text\" v-html=\"formattedContent\"></div>\n\n        <!-- Actions Section -->\n        <div class=\"popup-actions\">\n          <a\n            class=\"learn-more-link\"\n            :href=\"changelogUrl\"\n            target=\"_blank\"\n            rel=\"noopener,noreferrer\"\n            @click=\"closePopup\"\n          >\n            {{ $t('whatsNewPopup.learnMore') }}\n          </a>\n          <!-- TODO: CTA button -->\n          <!-- <button class=\"cta-button\" @click=\"handleCTA\">CTA</button> -->\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { marked } from 'marked'\nimport { computed, onMounted, ref } from 'vue'\nimport { useI18n } from 'vue-i18n'\n\nimport { formatVersionAnchor } from '@/utils/formatUtil'\n\nimport type { ReleaseNote } from '../common/releaseService'\nimport { useReleaseStore } from '../common/releaseStore'\n\nconst { locale, t } = useI18n()\nconst releaseStore = useReleaseStore()\n\n// Define emits\nconst emit = defineEmits<{\n  'whats-new-dismissed': []\n}>()\n\n// Local state for dismissed status\nconst isDismissed = ref(false)\n\n// Get latest release from store\nconst latestRelease = computed<ReleaseNote | null>(\n  () => releaseStore.recentRelease\n)\n\n// Show popup when on latest version and not dismissed\nconst shouldShow = computed(\n  () => releaseStore.shouldShowPopup && !isDismissed.value\n)\n\n// Generate changelog URL with version anchor (language-aware)\nconst changelogUrl = computed(() => {\n  const isChineseLocale = locale.value === 'zh'\n  const baseUrl = isChineseLocale\n    ? 'https://docs.comfy.org/zh-CN/changelog'\n    : 'https://docs.comfy.org/changelog'\n\n  if (latestRelease.value?.version) {\n    const versionAnchor = formatVersionAnchor(latestRelease.value.version)\n    return `${baseUrl}#${versionAnchor}`\n  }\n  return baseUrl\n})\n\n// Format release content for display using marked\nconst formattedContent = computed(() => {\n  if (!latestRelease.value?.content) {\n    return `<p>${t('whatsNewPopup.noReleaseNotes')}</p>`\n  }\n\n  try {\n    // Use marked to parse markdown to HTML\n    return marked(latestRelease.value.content, {\n      gfm: true // Enable GitHub Flavored Markdown\n    })\n  } catch (error) {\n    console.error('Error parsing markdown:', error)\n    // Fallback to plain text with line breaks\n    return latestRelease.value.content.replace(/\\n/g, '<br>')\n  }\n})\n\nconst show = () => {\n  isDismissed.value = false\n}\n\nconst hide = () => {\n  isDismissed.value = true\n  emit('whats-new-dismissed')\n}\n\nconst closePopup = async () => {\n  // Mark \"what's new\" seen when popup is closed\n  if (latestRelease.value) {\n    await releaseStore.handleWhatsNewSeen(latestRelease.value.version)\n  }\n  hide()\n}\n\n// const handleCTA = async () => {\n//   window.open('https://docs.comfy.org/installation/update_comfyui', '_blank')\n//   await closePopup()\n// }\n\n// Initialize on mount\nonMounted(async () => {\n  // Fetch releases if not already loaded\n  if (!releaseStore.releases.length) {\n    await releaseStore.fetchReleases()\n  }\n})\n\n// Expose methods for parent component\ndefineExpose({\n  show,\n  hide\n})\n</script>\n\n<style scoped>\n/* Popup container - positioning handled by parent */\n.whats-new-popup-container {\n  --whats-new-popup-bottom: 1rem;\n\n  position: absolute;\n  bottom: var(--whats-new-popup-bottom);\n  z-index: 1000;\n  pointer-events: auto;\n}\n\n/* Arrow pointing to help center */\n.help-center-arrow {\n  position: absolute;\n  bottom: calc(\n    var(--sidebar-width) * 2 + var(--sidebar-width) / 2\n  ); /* Position to center of help center icon (2 icons below + half icon height for center) */\n  transform: none;\n  z-index: 999;\n  pointer-events: none;\n}\n\n/* Position arrow based on sidebar location */\n.whats-new-popup-container.sidebar-left .help-center-arrow {\n  left: -14px; /* Overlap with popup outline */\n}\n\n.whats-new-popup-container.sidebar-left.small-sidebar .help-center-arrow {\n  left: -14px; /* Overlap with popup outline */\n  bottom: calc(\n    var(--sidebar-width) * 2 + var(--sidebar-icon-size) / 2 -\n      var(--whats-new-popup-bottom)\n  ); /* Position to center of help center icon (2 icons below + half icon height for center - whats new popup bottom position ) */\n}\n\n/* Sidebar positioning classes applied by parent */\n.whats-new-popup-container.sidebar-left {\n  left: 1rem;\n}\n\n.whats-new-popup-container.sidebar-left.small-sidebar {\n  left: 1rem;\n}\n\n.whats-new-popup-container.sidebar-right {\n  right: 1rem;\n}\n\n.whats-new-popup {\n  background: #353535;\n  border-radius: 12px;\n  max-width: 400px;\n  width: 400px;\n  outline: 1px solid #4e4e4e;\n  outline-offset: -1px;\n  box-shadow: 0px 8px 32px rgba(0, 0, 0, 0.3);\n  position: relative;\n}\n\n/* Content Section */\n.popup-content {\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n  max-height: 80vh;\n  overflow-y: auto;\n  padding: 32px 32px 24px;\n  border-radius: 12px;\n}\n\n/* Close button */\n.close-button {\n  position: absolute;\n  top: 0;\n  right: 0;\n  width: 32px;\n  height: 32px;\n  padding: 6px;\n  background: #7c7c7c;\n  border-radius: 16px;\n  border: none;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  transform: translate(30%, -30%);\n  transition:\n    background-color 0.2s ease,\n    transform 0.1s ease;\n  z-index: 1;\n}\n\n.close-button:hover {\n  background: #8e8e8e;\n}\n\n.close-button:active {\n  background: #6a6a6a;\n  transform: translate(30%, -30%) scale(0.95);\n}\n\n.close-icon {\n  width: 16px;\n  height: 16px;\n  position: relative;\n  opacity: 0.9;\n  transition: opacity 0.2s ease;\n}\n\n.close-button:hover .close-icon {\n  opacity: 1;\n}\n\n.close-icon::before,\n.close-icon::after {\n  content: '';\n  position: absolute;\n  width: 12px;\n  height: 2px;\n  background: white;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%) rotate(45deg);\n  transition: background-color 0.2s ease;\n}\n\n.close-icon::after {\n  transform: translate(-50%, -50%) rotate(-45deg);\n}\n\n/* Content Section */\n.popup-content {\n  display: flex;\n  flex-direction: column;\n}\n\n.content-text {\n  color: white;\n  font-size: 14px;\n  line-height: 1.5;\n  word-wrap: break-word;\n}\n\n/* Style the markdown content */\n/* Title */\n.content-text :deep(*) {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\n\n.content-text :deep(h1) {\n  font-size: 16px;\n  font-weight: 700;\n  margin-bottom: 8px;\n}\n\n/* Version subtitle - targets the first p tag after h1 */\n.content-text :deep(h1 + p) {\n  color: #c0c0c0;\n  font-size: 16px;\n  font-weight: 500;\n  margin-bottom: 16px;\n  opacity: 0.8;\n}\n\n/* Regular paragraphs - short description */\n.content-text :deep(p) {\n  margin-bottom: 16px;\n  color: #e0e0e0;\n}\n\n/* List */\n.content-text :deep(ul),\n.content-text :deep(ol) {\n  margin-bottom: 16px;\n  padding-left: 0;\n  list-style: none;\n}\n\n.content-text :deep(ul:first-child),\n.content-text :deep(ol:first-child) {\n  margin-top: 0;\n}\n\n.content-text :deep(ul:last-child),\n.content-text :deep(ol:last-child) {\n  margin-bottom: 0;\n}\n\n/* List items */\n.content-text :deep(li) {\n  margin-bottom: 8px;\n  position: relative;\n  padding-left: 20px;\n}\n\n.content-text :deep(li:last-child) {\n  margin-bottom: 0;\n}\n\n/* Custom bullet points */\n.content-text :deep(li::before) {\n  content: '';\n  position: absolute;\n  left: 0;\n  top: 10px;\n  display: flex;\n  width: 8px;\n  height: 8px;\n  justify-content: center;\n  align-items: center;\n  aspect-ratio: 1/1;\n  border-radius: 100px;\n  background: #60a5fa;\n}\n\n/* List item strong text */\n.content-text :deep(li strong) {\n  color: #fff;\n  font-size: 14px;\n  display: block;\n  margin-bottom: 4px;\n}\n\n.content-text :deep(li p) {\n  font-size: 12px;\n  margin-bottom: 0;\n  line-height: 2;\n}\n\n/* Code styling */\n.content-text :deep(code) {\n  background-color: #2a2a2a;\n  border: 1px solid #4a4a4a;\n  border-radius: 4px;\n  padding: 2px 6px;\n  color: #f8f8f2;\n  white-space: nowrap;\n}\n\n/* Remove top margin for first media element */\n.content-text :deep(img:first-child),\n.content-text :deep(video:first-child),\n.content-text :deep(iframe:first-child) {\n  margin-top: -32px; /* Align with the top edge of the popup content */\n  margin-bottom: 24px;\n}\n\n/* Media elements */\n.content-text :deep(img),\n.content-text :deep(video),\n.content-text :deep(iframe) {\n  width: calc(100% + 64px);\n  height: auto;\n  margin: 24px -32px;\n  display: block;\n}\n\n/* Actions Section */\n.popup-actions {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 8px;\n}\n\n.learn-more-link {\n  color: #60a5fa;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 18.2px;\n  text-decoration: none;\n}\n\n.learn-more-link:hover {\n  text-decoration: underline;\n}\n\n.cta-button {\n  height: 40px;\n  padding: 0 20px;\n  background: white;\n  border-radius: 6px;\n  outline: 1px solid #4e4e4e;\n  outline-offset: -1px;\n  border: none;\n  color: #121212;\n  font-size: 14px;\n  font-weight: 500;\n  cursor: pointer;\n}\n\n.cta-button:hover {\n  background: #f0f0f0;\n}\n</style>\n","import { defineStore } from 'pinia'\nimport { ref } from 'vue'\n\nexport const useHelpCenterStore = defineStore('helpCenter', () => {\n  const isVisible = ref(false)\n\n  const toggle = () => {\n    isVisible.value = !isVisible.value\n  }\n\n  const show = () => {\n    isVisible.value = true\n  }\n\n  const hide = () => {\n    isVisible.value = false\n  }\n\n  return {\n    isVisible,\n    toggle,\n    show,\n    hide\n  }\n})\n","<template>\n  <div>\n    <SidebarIcon\n      icon=\"pi pi-question-circle\"\n      class=\"comfy-help-center-btn\"\n      :tooltip=\"$t('sideToolbar.helpCenter')\"\n      :icon-badge=\"shouldShowRedDot ? '•' : ''\"\n      @click=\"toggleHelpCenter\"\n    />\n\n    <!-- Help Center Popup positioned within canvas area -->\n    <Teleport to=\"#graph-canvas-container\">\n      <div\n        v-if=\"isHelpCenterVisible\"\n        class=\"help-center-popup\"\n        :class=\"{\n          'sidebar-left': sidebarLocation === 'left',\n          'sidebar-right': sidebarLocation === 'right',\n          'small-sidebar': sidebarSize === 'small'\n        }\"\n      >\n        <HelpCenterMenuContent @close=\"closeHelpCenter\" />\n      </div>\n    </Teleport>\n\n    <!-- Release Notification Toast positioned within canvas area -->\n    <Teleport to=\"#graph-canvas-container\">\n      <ReleaseNotificationToast\n        :class=\"{\n          'sidebar-left': sidebarLocation === 'left',\n          'sidebar-right': sidebarLocation === 'right',\n          'small-sidebar': sidebarSize === 'small'\n        }\"\n      />\n    </Teleport>\n\n    <!-- WhatsNew Popup positioned within canvas area -->\n    <Teleport to=\"#graph-canvas-container\">\n      <WhatsNewPopup\n        :class=\"{\n          'sidebar-left': sidebarLocation === 'left',\n          'sidebar-right': sidebarLocation === 'right',\n          'small-sidebar': sidebarSize === 'small'\n        }\"\n        @whats-new-dismissed=\"handleWhatsNewDismissed\"\n      />\n    </Teleport>\n\n    <!-- Backdrop to close popup when clicking outside -->\n    <Teleport to=\"body\">\n      <div\n        v-if=\"isHelpCenterVisible\"\n        class=\"help-center-backdrop\"\n        @click=\"closeHelpCenter\"\n      />\n    </Teleport>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { storeToRefs } from 'pinia'\nimport { computed, onMounted } from 'vue'\n\nimport HelpCenterMenuContent from '@/components/helpcenter/HelpCenterMenuContent.vue'\nimport { useSettingStore } from '@/platform/settings/settingStore'\nimport { useReleaseStore } from '@/platform/updates/common/releaseStore'\nimport ReleaseNotificationToast from '@/platform/updates/components/ReleaseNotificationToast.vue'\nimport WhatsNewPopup from '@/platform/updates/components/WhatsNewPopup.vue'\nimport { useDialogService } from '@/services/dialogService'\nimport { useHelpCenterStore } from '@/stores/helpCenterStore'\nimport { useConflictAcknowledgment } from '@/workbench/extensions/manager/composables/useConflictAcknowledgment'\nimport { useConflictDetection } from '@/workbench/extensions/manager/composables/useConflictDetection'\n\nimport SidebarIcon from './SidebarIcon.vue'\n\nconst settingStore = useSettingStore()\nconst releaseStore = useReleaseStore()\nconst helpCenterStore = useHelpCenterStore()\nconst { isVisible: isHelpCenterVisible } = storeToRefs(helpCenterStore)\nconst { shouldShowRedDot: showReleaseRedDot } = storeToRefs(releaseStore)\n\nconst conflictDetection = useConflictDetection()\n\nconst { showNodeConflictDialog } = useDialogService()\n\n// Use conflict acknowledgment state from composable - call only once\nconst { shouldShowRedDot: shouldShowConflictRedDot, markConflictsAsSeen } =\n  useConflictAcknowledgment()\n\n// Use either release red dot or conflict red dot\nconst shouldShowRedDot = computed((): boolean => {\n  const releaseRedDot = showReleaseRedDot.value\n  return releaseRedDot || shouldShowConflictRedDot.value\n})\n\nconst sidebarLocation = computed(() =>\n  settingStore.get('Comfy.Sidebar.Location')\n)\n\nconst sidebarSize = computed(() => settingStore.get('Comfy.Sidebar.Size'))\n\nconst toggleHelpCenter = () => {\n  helpCenterStore.toggle()\n}\n\nconst closeHelpCenter = () => {\n  helpCenterStore.hide()\n}\n\n/**\n * Handle What's New popup dismissal\n * Check if conflict modal should be shown after ComfyUI update\n */\nconst handleWhatsNewDismissed = async () => {\n  try {\n    // Check if conflict modal should be shown after update\n    const shouldShow =\n      await conflictDetection.shouldShowConflictModalAfterUpdate()\n    if (shouldShow) {\n      showConflictModal()\n    }\n  } catch (error) {\n    console.error('[HelpCenter] Error checking conflict modal:', error)\n  }\n}\n/**\n * Show the node conflict dialog with current conflict data\n */\nconst showConflictModal = () => {\n  showNodeConflictDialog({\n    showAfterWhatsNew: true,\n    dialogComponentProps: {\n      onClose: () => {\n        markConflictsAsSeen()\n      }\n    }\n  })\n}\n\n// Initialize release store on mount\nonMounted(async () => {\n  // Initialize release store to fetch releases for toast and popup\n  await releaseStore.initialize()\n})\n</script>\n\n<style scoped>\n.help-center-backdrop {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  z-index: 9999;\n  background: transparent;\n}\n\n.help-center-popup {\n  position: absolute;\n  bottom: 1rem;\n  z-index: 10000;\n  animation: slideInUp 0.2s ease-out;\n  pointer-events: auto;\n}\n\n.help-center-popup.sidebar-left {\n  left: 1rem;\n}\n\n.help-center-popup.sidebar-left.small-sidebar {\n  left: 1rem;\n}\n\n.help-center-popup.sidebar-right {\n  right: 1rem;\n}\n\n@keyframes slideInUp {\n  from {\n    opacity: 0;\n    transform: translateY(20px);\n  }\n\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n:deep(.p-badge) {\n  background: #ff3b30;\n  color: #ff3b30;\n  min-width: 8px;\n  height: 8px;\n  padding: 0;\n  border-radius: 9999px;\n  font-size: 0;\n  margin-top: 4px;\n  margin-right: 4px;\n  border: none;\n  outline: none;\n  box-shadow: none;\n}\n\n:deep(.p-badge.p-badge-dot) {\n  width: 8px !important;\n}\n</style>\n","<template>\n  <SidebarIcon icon=\"pi pi-sign-out\" :tooltip=\"tooltip\" @click=\"logout\" />\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { useI18n } from 'vue-i18n'\n\nimport { useUserStore } from '@/stores/userStore'\n\nimport SidebarIcon from './SidebarIcon.vue'\n\nconst { t } = useI18n()\nconst userStore = useUserStore()\n\nconst tooltip = computed(\n  () => `${t('sideToolbar.logout')} (${userStore.currentUser?.username})`\n)\nconst logout = async () => {\n  await userStore.logout()\n  window.location.reload()\n}\n</script>\n","<template>\n  <SidebarIcon\n    icon=\"icon-[comfy--template]\"\n    :tooltip=\"$t('sideToolbar.templates')\"\n    :label=\"$t('sideToolbar.labels.templates')\"\n    :is-small=\"isSmall\"\n    class=\"templates-tab-button\"\n    @click=\"openTemplates\"\n  />\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\n\nimport { useSettingStore } from '@/platform/settings/settingStore'\nimport { useCommandStore } from '@/stores/commandStore'\n\nimport SidebarIcon from './SidebarIcon.vue'\n\nconst settingStore = useSettingStore()\nconst commandStore = useCommandStore()\n\nconst isSmall = computed(\n  () => settingStore.get('Comfy.Sidebar.Size') === 'small'\n)\n\nconst openTemplates = () => {\n  void commandStore.execute('Comfy.BrowseTemplates')\n}\n</script>\n","<template>\n  <teleport :to=\"teleportTarget\">\n    <nav class=\"side-tool-bar-container\" :class=\"{ 'small-sidebar': isSmall }\">\n      <SidebarIcon\n        v-for=\"tab in tabs\"\n        :key=\"tab.id\"\n        :icon=\"tab.icon\"\n        :icon-badge=\"tab.iconBadge\"\n        :tooltip=\"tab.tooltip\"\n        :tooltip-suffix=\"getTabTooltipSuffix(tab)\"\n        :label=\"tab.label || tab.title\"\n        :is-small=\"isSmall\"\n        :selected=\"tab.id === selectedTab?.id\"\n        :class=\"tab.id + '-tab-button'\"\n        @click=\"onTabClick(tab)\"\n      />\n      <SidebarTemplatesButton />\n      <div class=\"side-tool-bar-end\">\n        <SidebarLogoutIcon v-if=\"userStore.isMultiUserServer\" />\n        <SidebarHelpCenterIcon />\n        <SidebarBottomPanelToggleButton />\n        <SidebarShortcutsToggleButton />\n      </div>\n    </nav>\n  </teleport>\n  <div\n    v-if=\"selectedTab\"\n    class=\"sidebar-content-container h-full overflow-y-auto overflow-x-hidden\"\n  >\n    <ExtensionSlot :extension=\"selectedTab\" />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\n\nimport ExtensionSlot from '@/components/common/ExtensionSlot.vue'\nimport SidebarBottomPanelToggleButton from '@/components/sidebar/SidebarBottomPanelToggleButton.vue'\nimport SidebarShortcutsToggleButton from '@/components/sidebar/SidebarShortcutsToggleButton.vue'\nimport { useSettingStore } from '@/platform/settings/settingStore'\nimport { useKeybindingStore } from '@/stores/keybindingStore'\nimport { useUserStore } from '@/stores/userStore'\nimport { useWorkspaceStore } from '@/stores/workspaceStore'\nimport type { SidebarTabExtension } from '@/types/extensionTypes'\n\nimport SidebarHelpCenterIcon from './SidebarHelpCenterIcon.vue'\nimport SidebarIcon from './SidebarIcon.vue'\nimport SidebarLogoutIcon from './SidebarLogoutIcon.vue'\nimport SidebarTemplatesButton from './SidebarTemplatesButton.vue'\n\nconst workspaceStore = useWorkspaceStore()\nconst settingStore = useSettingStore()\nconst userStore = useUserStore()\n\nconst teleportTarget = computed(() =>\n  settingStore.get('Comfy.Sidebar.Location') === 'left'\n    ? '.comfyui-body-left'\n    : '.comfyui-body-right'\n)\n\nconst isSmall = computed(\n  () => settingStore.get('Comfy.Sidebar.Size') === 'small'\n)\n\nconst tabs = computed(() => workspaceStore.getSidebarTabs())\nconst selectedTab = computed(() => workspaceStore.sidebarTab.activeSidebarTab)\nconst onTabClick = (item: SidebarTabExtension) => {\n  workspaceStore.sidebarTab.toggleSidebarTab(item.id)\n}\nconst keybindingStore = useKeybindingStore()\nconst getTabTooltipSuffix = (tab: SidebarTabExtension) => {\n  const keybinding = keybindingStore.getKeybindingByCommandId(\n    `Workspace.ToggleSidebarTab.${tab.id}`\n  )\n  return keybinding ? ` (${keybinding.combo.toString()})` : ''\n}\n</script>\n\n<style>\n/* Global CSS variables for sidebar\n * These variables need to be global (not scoped) because they are used by\n * teleported components like WhatsNewPopup that render outside the sidebar\n * but need to reference sidebar dimensions for proper positioning.\n */\n:root {\n  --sidebar-width: 4rem;\n  --sidebar-icon-size: 1rem;\n}\n\n:root:has(.side-tool-bar-container.small-sidebar) {\n  --sidebar-width: 2.5rem;\n}\n</style>\n\n<style scoped>\n.side-tool-bar-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  width: var(--sidebar-width);\n  height: 100%;\n\n  background-color: var(--comfy-menu-secondary-bg);\n  color: var(--fg-color);\n  box-shadow: var(--bar-shadow);\n}\n\n.side-tool-bar-container.small-sidebar {\n  --sidebar-width: 2.5rem;\n  --sidebar-icon-size: 1rem;\n}\n\n.side-tool-bar-end {\n  align-self: flex-end;\n  margin-top: auto;\n}\n</style>\n","<template>\n  <div\n    ref=\"positionRef\"\n    class=\"absolute left-1/2 -translate-x-1/2\"\n    :class=\"positions.positioner\"\n  ></div>\n  <Popover\n    ref=\"popoverRef\"\n    append-to=\"body\"\n    :pt=\"{\n      root: {\n        class: 'workflow-popover-fade fit-content ' + positions.root,\n        'data-popover-id': id,\n        style: {\n          transform: positions.active\n        }\n      }\n    }\"\n    @mouseenter=\"cancelHidePopover\"\n    @mouseleave=\"hidePopover\"\n  >\n    <div class=\"workflow-preview-content\">\n      <div\n        v-if=\"thumbnailUrl && !isActiveTab\"\n        class=\"workflow-preview-thumbnail relative\"\n      >\n        <img\n          :src=\"thumbnailUrl\"\n          class=\"block h-[200px] object-cover rounded-lg p-2\"\n          :style=\"{ width: `${POPOVER_WIDTH}px` }\"\n        />\n      </div>\n      <div class=\"workflow-preview-footer\">\n        <span class=\"workflow-preview-name\">{{ workflowFilename }}</span>\n      </div>\n    </div>\n  </Popover>\n</template>\n\n<script setup lang=\"ts\">\nimport Popover from 'primevue/popover'\nimport { computed, nextTick, ref, toRefs, useId } from 'vue'\n\nimport { useSettingStore } from '@/platform/settings/settingStore'\n\nconst POPOVER_WIDTH = 250\n\ninterface Props {\n  workflowFilename: string\n  thumbnailUrl?: string\n  isActiveTab: boolean\n}\n\nconst props = defineProps<Props>()\nconst { thumbnailUrl, isActiveTab } = toRefs(props)\n\nconst settingStore = useSettingStore()\nconst positions = computed<{\n  positioner: string\n  root?: string\n  active?: string\n}>(() => {\n  if (\n    settingStore.get('Comfy.Workflow.WorkflowTabsPosition') === 'Topbar' &&\n    settingStore.get('Comfy.UseNewMenu') === 'Bottom'\n  ) {\n    return {\n      positioner: 'top-0',\n      root: 'p-popover-flipped',\n      active: isActiveTab.value ? 'translateY(-100%)' : undefined\n    }\n  }\n\n  return {\n    positioner: 'bottom-0'\n  }\n})\n\nconst popoverRef = ref<InstanceType<typeof Popover> | null>(null)\nconst positionRef = ref<HTMLElement | null>(null)\nlet hideTimeout: ReturnType<typeof setTimeout> | null = null\nlet showTimeout: ReturnType<typeof setTimeout> | null = null\nconst id = useId()\n\nconst showPopover = (event: Event) => {\n  // Clear any existing timeouts\n  if (hideTimeout) {\n    clearTimeout(hideTimeout)\n    hideTimeout = null\n  }\n  if (showTimeout) {\n    clearTimeout(showTimeout)\n    showTimeout = null\n  }\n\n  // Show popover after a short delay\n  showTimeout = setTimeout(async () => {\n    if (popoverRef.value && positionRef.value) {\n      popoverRef.value.show(event, positionRef.value)\n      await nextTick()\n      // PrimeVue has a bug where when the tabs are scrolled, it positions the element incorrectly\n      // Manually set the position to the middle of the tab and prevent it from going off the left/right edge\n      const el = document.querySelector(\n        `.workflow-popover-fade[data-popover-id=\"${id}\"]`\n      ) as HTMLElement\n      if (el) {\n        const middle = positionRef.value!.getBoundingClientRect().left\n        const popoverWidth = el.getBoundingClientRect().width\n        const halfWidth = popoverWidth / 2\n        let pos = middle - halfWidth\n        let shift = 0\n\n        // Calculate shift when clamping is needed\n        if (pos < 0) {\n          shift = pos - 8 // Negative shift to move arrow left\n          pos = 8\n        } else if (pos + popoverWidth > window.innerWidth) {\n          const newPos = window.innerWidth - popoverWidth - 16\n          shift = pos - newPos // Positive shift to move arrow right\n          pos = newPos\n        }\n\n        if (shift + halfWidth < 0) {\n          shift = -halfWidth + 24\n        }\n\n        el.style.left = `${pos}px`\n        el.style.setProperty('--shift', `${shift}px`)\n      }\n    }\n  }, 200) // 200ms delay before showing\n}\n\nconst cancelHidePopover = () => {\n  // Temporarily disable this functionality until we need the popover to be interactive:\n  /*\n  if (hideTimeout) {\n    clearTimeout(hideTimeout)\n    hideTimeout = null\n  }\n  */\n}\n\nconst hidePopover = () => {\n  // Clear show timeout if mouse leaves before popover appears\n  if (showTimeout) {\n    clearTimeout(showTimeout)\n    showTimeout = null\n  }\n\n  hideTimeout = setTimeout(() => {\n    if (popoverRef.value) {\n      popoverRef.value.hide()\n    }\n  }, 100) // Minimal delay to allow moving to popover\n}\n\nconst togglePopover = (event: Event) => {\n  if (popoverRef.value) {\n    popoverRef.value.toggle(event)\n  }\n}\n\ndefineExpose({\n  showPopover,\n  hidePopover,\n  togglePopover\n})\n</script>\n\n<style scoped>\n@reference '../../assets/css/style.css';\n\n.workflow-preview-content {\n  @apply flex flex-col rounded-xl overflow-hidden;\n  max-width: var(--popover-width);\n  background-color: var(--comfy-menu-secondary-bg);\n  color: var(--fg-color);\n}\n\n.workflow-preview-thumbnail {\n  @apply relative p-2;\n}\n\n.workflow-preview-thumbnail img {\n  @apply shadow-md;\n  background-color: color-mix(\n    in srgb,\n    var(--comfy-menu-secondary-bg) 70%,\n    black\n  );\n}\n\n.dark-theme .workflow-preview-thumbnail img {\n  @apply shadow-lg;\n}\n\n.workflow-preview-footer {\n  @apply pt-1 pb-2 px-3;\n}\n\n.workflow-preview-name {\n  @apply block text-sm font-medium overflow-hidden text-ellipsis whitespace-nowrap;\n  color: var(--fg-color);\n}\n</style>\n\n<style>\n@reference '../../assets/css/style.css';\n\n.workflow-popover-fade {\n  --p-popover-background: transparent;\n  --p-popover-content-padding: 0;\n  @apply bg-transparent rounded-xl shadow-lg;\n  transition: opacity 0.15s ease-out !important;\n}\n\n.workflow-popover-fade.p-popover-flipped {\n  @apply -translate-y-full;\n}\n\n.dark-theme .workflow-popover-fade {\n  @apply shadow-2xl;\n}\n\n.workflow-popover-fade.p-popover:after,\n.workflow-popover-fade.p-popover:before {\n  --p-popover-border-color: var(--comfy-menu-secondary-bg);\n  left: 50%;\n  transform: translateX(calc(-50% + var(--shift)));\n  margin-left: 0;\n}\n</style>\n","<template>\n  <div\n    ref=\"workflowTabRef\"\n    class=\"flex p-2 gap-2 workflow-tab group\"\n    v-bind=\"$attrs\"\n    @mouseenter=\"handleMouseEnter\"\n    @mouseleave=\"handleMouseLeave\"\n    @click=\"handleClick\"\n  >\n    <span class=\"workflow-label text-sm max-w-[150px] truncate inline-block\">\n      {{ workflowOption.workflow.filename }}\n    </span>\n    <div class=\"relative\">\n      <span\n        v-if=\"shouldShowStatusIndicator\"\n        class=\"group-hover:hidden absolute font-bold text-2xl top-1/2 left-1/2 -translate-1/2 z-10 bg-(--comfy-menu-secondary-bg) w-4\"\n        >•</span\n      >\n      <Button\n        class=\"close-button p-0 w-auto invisible\"\n        icon=\"pi pi-times\"\n        text\n        severity=\"secondary\"\n        size=\"small\"\n        @click.stop=\"onCloseWorkflow(workflowOption)\"\n      />\n    </div>\n  </div>\n\n  <WorkflowTabPopover\n    ref=\"popoverRef\"\n    :workflow-filename=\"workflowOption.workflow.filename\"\n    :thumbnail-url=\"thumbnailUrl\"\n    :is-active-tab=\"isActiveTab\"\n  />\n</template>\n\n<script setup lang=\"ts\">\nimport Button from 'primevue/button'\nimport { computed, onUnmounted, ref } from 'vue'\nimport { useI18n } from 'vue-i18n'\n\nimport {\n  usePragmaticDraggable,\n  usePragmaticDroppable\n} from '@/composables/usePragmaticDragAndDrop'\nimport { useSettingStore } from '@/platform/settings/settingStore'\nimport { useWorkflowService } from '@/platform/workflow/core/services/workflowService'\nimport type { ComfyWorkflow } from '@/platform/workflow/management/stores/workflowStore'\nimport { useWorkflowStore } from '@/platform/workflow/management/stores/workflowStore'\nimport { useWorkflowThumbnail } from '@/renderer/core/thumbnail/useWorkflowThumbnail'\nimport { useWorkspaceStore } from '@/stores/workspaceStore'\n\nimport WorkflowTabPopover from './WorkflowTabPopover.vue'\n\ninterface WorkflowOption {\n  value: string\n  workflow: ComfyWorkflow\n}\n\nconst props = defineProps<{\n  class?: string\n  workflowOption: WorkflowOption\n}>()\n\nconst { t } = useI18n()\n\nconst workspaceStore = useWorkspaceStore()\nconst workflowStore = useWorkflowStore()\nconst settingStore = useSettingStore()\nconst workflowTabRef = ref<HTMLElement | null>(null)\nconst popoverRef = ref<InstanceType<typeof WorkflowTabPopover> | null>(null)\nconst workflowThumbnail = useWorkflowThumbnail()\n\n// Use computed refs to cache autosave settings\nconst autoSaveSetting = computed(() =>\n  settingStore.get('Comfy.Workflow.AutoSave')\n)\nconst autoSaveDelay = computed(() =>\n  settingStore.get('Comfy.Workflow.AutoSaveDelay')\n)\n\nconst shouldShowStatusIndicator = computed(() => {\n  if (workspaceStore.shiftDown) {\n    // Branch 1: Shift key is held down, do not show the status indicator.\n    return false\n  }\n  if (!props.workflowOption.workflow.isPersisted) {\n    // Branch 2: Workflow is not persisted, show the status indicator.\n    return true\n  }\n  if (props.workflowOption.workflow.isModified) {\n    // Branch 3: Workflow is modified.\n    if (autoSaveSetting.value === 'off') {\n      // Sub-branch 3a: Autosave is off, so show the status indicator.\n      return true\n    }\n    if (autoSaveSetting.value === 'after delay' && autoSaveDelay.value > 3000) {\n      // Sub-branch 3b: Autosave delay is too high, so show the status indicator.\n      return true\n    }\n    // Sub-branch 3c: Workflow is modified but no condition applies, do not show the status indicator.\n    return false\n  }\n  // Default: do not show the status indicator. This should not be reachable.\n  return false\n})\n\nconst isActiveTab = computed(() => {\n  return workflowStore.activeWorkflow?.key === props.workflowOption.workflow.key\n})\n\nconst thumbnailUrl = computed(() => {\n  return workflowThumbnail.getThumbnail(props.workflowOption.workflow.key)\n})\n\n// Event handlers that delegate to the popover component\nconst handleMouseEnter = (event: Event) => {\n  popoverRef.value?.showPopover(event)\n}\n\nconst handleMouseLeave = () => {\n  popoverRef.value?.hidePopover()\n}\n\nconst handleClick = (event: Event) => {\n  popoverRef.value?.togglePopover(event)\n}\n\nconst closeWorkflows = async (options: WorkflowOption[]) => {\n  for (const opt of options) {\n    if (\n      !(await useWorkflowService().closeWorkflow(opt.workflow, {\n        warnIfUnsaved: !workspaceStore.shiftDown,\n        hint: t('sideToolbar.workflowTab.dirtyCloseHint')\n      }))\n    ) {\n      // User clicked cancel\n      break\n    }\n  }\n}\n\nconst onCloseWorkflow = async (option: WorkflowOption) => {\n  await closeWorkflows([option])\n}\nconst tabGetter = () => workflowTabRef.value as HTMLElement\n\nusePragmaticDraggable(tabGetter, {\n  getInitialData: () => {\n    return {\n      workflowKey: props.workflowOption.workflow.key\n    }\n  }\n})\n\nusePragmaticDroppable(tabGetter, {\n  getData: () => {\n    return {\n      workflowKey: props.workflowOption.workflow.key\n    }\n  },\n  onDrop: (e) => {\n    const fromIndex = workflowStore.openWorkflows.findIndex(\n      (wf) => wf.key === e.source.data.workflowKey\n    )\n    const toIndex = workflowStore.openWorkflows.findIndex(\n      (wf) => wf.key === e.location.current.dropTargets[0]?.data.workflowKey\n    )\n    if (fromIndex !== toIndex) {\n      workflowStore.reorderWorkflows(fromIndex, toIndex)\n    }\n  }\n})\n\nonUnmounted(() => {\n  popoverRef.value?.hidePopover()\n})\n</script>\n\n<style>\n.p-tooltip.workflow-tab-tooltip {\n  z-index: 1200 !important;\n}\n</style>\n","import { useMutationObserver, useResizeObserver } from '@vueuse/core'\nimport { debounce } from 'es-toolkit/compat'\nimport { readonly, ref } from 'vue'\n\n/**\n * Observes an element for overflow changes and optionally debounces the check\n * @param element - The element to observe\n * @param options - The options for the observer\n * @param options.debounceTime - The time to debounce the check in milliseconds\n * @param options.useMutationObserver - Whether to use a mutation observer to check for overflow\n * @param options.useResizeObserver - Whether to use a resize observer to check for overflow\n * @returns An object containing the isOverflowing state and the checkOverflow function to manually trigger\n */\nexport const useOverflowObserver = (\n  element: HTMLElement,\n  options?: {\n    debounceTime?: number\n    useMutationObserver?: boolean\n    useResizeObserver?: boolean\n    onCheck?: (isOverflowing: boolean) => void\n  }\n) => {\n  options = {\n    debounceTime: 25,\n    useMutationObserver: true,\n    useResizeObserver: true,\n    ...options\n  }\n\n  const isOverflowing = ref(false)\n  const disposeFns: (() => void)[] = []\n  const disposed = ref(false)\n\n  const checkOverflowFn = () => {\n    isOverflowing.value = element.scrollWidth > element.clientWidth\n    options.onCheck?.(isOverflowing.value)\n  }\n\n  const checkOverflow = options.debounceTime\n    ? debounce(checkOverflowFn, options.debounceTime)\n    : checkOverflowFn\n\n  if (options.useMutationObserver) {\n    disposeFns.push(\n      useMutationObserver(element, checkOverflow, {\n        subtree: true,\n        childList: true\n      }).stop\n    )\n  }\n  if (options.useResizeObserver) {\n    disposeFns.push(useResizeObserver(element, checkOverflow).stop)\n  }\n\n  return {\n    isOverflowing: readonly(isOverflowing),\n    disposed: readonly(disposed),\n    checkOverflow,\n    dispose: () => {\n      disposed.value = true\n      disposeFns.forEach((fn) => fn())\n    }\n  }\n}\n","import { useEventListener } from '@vueuse/core'\n\nexport const whileMouseDown = (\n  elementOrEvent: HTMLElement | Event,\n  callback: (iteration: number) => void,\n  interval: number = 30\n) => {\n  const element =\n    elementOrEvent instanceof HTMLElement\n      ? elementOrEvent\n      : (elementOrEvent.target as HTMLElement)\n\n  let iteration = 0\n\n  const intervalId = setInterval(() => {\n    callback(iteration++)\n  }, interval)\n\n  const dispose = () => {\n    clearInterval(intervalId)\n    disposeGlobal()\n    disposeLocal()\n  }\n\n  // Listen for mouseup globally to catch cases where user drags out of element\n  const disposeGlobal = useEventListener(document, 'mouseup', dispose)\n  const disposeLocal = useEventListener(element, 'mouseup', dispose)\n\n  return {\n    dispose: dispose\n  }\n}\n","<template>\n  <div>\n    <Button\n      v-tooltip=\"{ value: $t('g.moreWorkflows'), showDelay: 300 }\"\n      class=\"rounded-none\"\n      icon=\"pi pi-ellipsis-h\"\n      text\n      severity=\"secondary\"\n      :aria-label=\"$t('g.moreWorkflows')\"\n      @click=\"menu?.toggle($event)\"\n    />\n    <Menu\n      ref=\"menu\"\n      :model=\"menuItems\"\n      :popup=\"true\"\n      class=\"max-h-[40vh] overflow-auto\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport Button from 'primevue/button'\nimport Menu from 'primevue/menu'\nimport { computed, ref } from 'vue'\n\nimport { useWorkflowService } from '@/platform/workflow/core/services/workflowService'\nimport type { ComfyWorkflow } from '@/platform/workflow/management/stores/workflowStore'\n\nconst props = defineProps<{\n  workflows: ComfyWorkflow[]\n  activeWorkflow: ComfyWorkflow | null\n}>()\n\nconst menu = ref<InstanceType<typeof Menu> | null>(null)\nconst workflowService = useWorkflowService()\n\nconst menuItems = computed(() =>\n  props.workflows.map((workflow: ComfyWorkflow) => ({\n    label: workflow.filename,\n    icon:\n      props.activeWorkflow?.key === workflow.key ? 'pi pi-check' : undefined,\n    command: () => {\n      void workflowService.openWorkflow(workflow)\n    }\n  }))\n)\n</script>\n","<template>\n  <div\n    class=\"workflow-tabs-container flex flex-row max-w-full h-full flex-auto overflow-hidden\"\n    :class=\"{ 'workflow-tabs-container-desktop': isDesktop }\"\n  >\n    <Button\n      v-if=\"showOverflowArrows\"\n      icon=\"pi pi-chevron-left\"\n      text\n      severity=\"secondary\"\n      class=\"overflow-arrow overflow-arrow-left\"\n      :disabled=\"!leftArrowEnabled\"\n      @mousedown=\"whileMouseDown($event, () => scroll(-1))\"\n    />\n    <ScrollPanel\n      ref=\"scrollPanelRef\"\n      class=\"overflow-hidden no-drag\"\n      :pt:content=\"{\n        class: 'p-0 w-full flex',\n        onwheel: handleWheel\n      }\"\n      pt:bar-x=\"h-1\"\n    >\n      <SelectButton\n        class=\"workflow-tabs bg-transparent\"\n        :class=\"props.class\"\n        :model-value=\"selectedWorkflow\"\n        :options=\"options\"\n        option-label=\"label\"\n        data-key=\"value\"\n        @update:model-value=\"onWorkflowChange\"\n      >\n        <template #option=\"{ option }\">\n          <WorkflowTab\n            :workflow-option=\"option\"\n            @contextmenu=\"showContextMenu($event, option)\"\n            @click.middle=\"onCloseWorkflow(option)\"\n          />\n        </template>\n      </SelectButton>\n    </ScrollPanel>\n    <Button\n      v-if=\"showOverflowArrows\"\n      icon=\"pi pi-chevron-right\"\n      text\n      severity=\"secondary\"\n      class=\"overflow-arrow overflow-arrow-right\"\n      :disabled=\"!rightArrowEnabled\"\n      @mousedown=\"whileMouseDown($event, () => scroll(1))\"\n    />\n    <WorkflowOverflowMenu\n      v-if=\"showOverflowArrows\"\n      :workflows=\"workflowStore.openWorkflows\"\n      :active-workflow=\"workflowStore.activeWorkflow\"\n    />\n    <Button\n      v-tooltip=\"{ value: $t('sideToolbar.newBlankWorkflow'), showDelay: 300 }\"\n      class=\"new-blank-workflow-button shrink-0 no-drag rounded-none\"\n      icon=\"pi pi-plus\"\n      text\n      severity=\"secondary\"\n      :aria-label=\"$t('sideToolbar.newBlankWorkflow')\"\n      @click=\"() => commandStore.execute('Comfy.NewBlankWorkflow')\"\n    />\n    <ContextMenu ref=\"menu\" :model=\"contextMenuItems\" />\n    <div\n      v-if=\"menuSetting !== 'Bottom' && isDesktop\"\n      class=\"window-actions-spacer shrink-0 app-drag\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { useScroll } from '@vueuse/core'\nimport Button from 'primevue/button'\nimport ContextMenu from 'primevue/contextmenu'\nimport ScrollPanel from 'primevue/scrollpanel'\nimport SelectButton from 'primevue/selectbutton'\nimport { computed, nextTick, onUpdated, ref, watch } from 'vue'\nimport { useI18n } from 'vue-i18n'\n\nimport WorkflowTab from '@/components/topbar/WorkflowTab.vue'\nimport { useOverflowObserver } from '@/composables/element/useOverflowObserver'\nimport { useSettingStore } from '@/platform/settings/settingStore'\nimport { useWorkflowService } from '@/platform/workflow/core/services/workflowService'\nimport type { ComfyWorkflow } from '@/platform/workflow/management/stores/workflowStore'\nimport { useWorkflowBookmarkStore } from '@/platform/workflow/management/stores/workflowStore'\nimport { useWorkflowStore } from '@/platform/workflow/management/stores/workflowStore'\nimport { useCommandStore } from '@/stores/commandStore'\nimport { useWorkspaceStore } from '@/stores/workspaceStore'\nimport { isElectron } from '@/utils/envUtil'\nimport { whileMouseDown } from '@/utils/mouseDownUtil'\n\nimport WorkflowOverflowMenu from './WorkflowOverflowMenu.vue'\n\ninterface WorkflowOption {\n  value: string\n  workflow: ComfyWorkflow\n}\n\nconst props = defineProps<{\n  class?: string\n}>()\n\nconst { t } = useI18n()\nconst workspaceStore = useWorkspaceStore()\nconst workflowStore = useWorkflowStore()\nconst workflowBookmarkStore = useWorkflowBookmarkStore()\nconst settingStore = useSettingStore()\nconst workflowService = useWorkflowService()\n\nconst rightClickedTab = ref<WorkflowOption | undefined>()\nconst menu = ref()\nconst scrollPanelRef = ref()\nconst showOverflowArrows = ref(false)\nconst leftArrowEnabled = ref(false)\nconst rightArrowEnabled = ref(false)\n\nconst isDesktop = isElectron()\nconst menuSetting = computed(() => settingStore.get('Comfy.UseNewMenu'))\n\nconst workflowToOption = (workflow: ComfyWorkflow): WorkflowOption => ({\n  value: workflow.path,\n  workflow\n})\n\nconst options = computed<WorkflowOption[]>(() =>\n  workflowStore.openWorkflows.map(workflowToOption)\n)\nconst selectedWorkflow = computed<WorkflowOption | null>(() =>\n  workflowStore.activeWorkflow\n    ? workflowToOption(workflowStore.activeWorkflow as ComfyWorkflow)\n    : null\n)\n\nconst onWorkflowChange = async (option: WorkflowOption) => {\n  // Prevent unselecting the current workflow\n  if (!option) {\n    return\n  }\n  // Prevent reloading the current workflow\n  if (selectedWorkflow.value?.value === option.value) {\n    return\n  }\n\n  await workflowService.openWorkflow(option.workflow)\n}\n\nconst closeWorkflows = async (options: WorkflowOption[]) => {\n  for (const opt of options) {\n    if (\n      !(await workflowService.closeWorkflow(opt.workflow, {\n        warnIfUnsaved: !workspaceStore.shiftDown\n      }))\n    ) {\n      // User clicked cancel\n      break\n    }\n  }\n}\n\nconst onCloseWorkflow = async (option: WorkflowOption) => {\n  await closeWorkflows([option])\n}\n\nconst showContextMenu = (event: MouseEvent, option: WorkflowOption) => {\n  rightClickedTab.value = option\n  menu.value.show(event)\n}\nconst contextMenuItems = computed(() => {\n  const tab = rightClickedTab.value as WorkflowOption\n  if (!tab) return []\n  const index = options.value.findIndex((v) => v.workflow === tab.workflow)\n\n  return [\n    {\n      label: t('tabMenu.duplicateTab'),\n      command: async () => {\n        await workflowService.duplicateWorkflow(tab.workflow)\n      }\n    },\n    {\n      separator: true\n    },\n    {\n      label: t('tabMenu.closeTab'),\n      command: () => onCloseWorkflow(tab)\n    },\n    {\n      label: t('tabMenu.closeTabsToLeft'),\n      command: () => closeWorkflows(options.value.slice(0, index)),\n      disabled: index <= 0\n    },\n    {\n      label: t('tabMenu.closeTabsToRight'),\n      command: () => closeWorkflows(options.value.slice(index + 1)),\n      disabled: index === options.value.length - 1\n    },\n    {\n      label: t('tabMenu.closeOtherTabs'),\n      command: () =>\n        closeWorkflows([\n          ...options.value.slice(index + 1),\n          ...options.value.slice(0, index)\n        ]),\n      disabled: options.value.length <= 1\n    },\n    {\n      label: workflowBookmarkStore.isBookmarked(tab.workflow.path)\n        ? t('tabMenu.removeFromBookmarks')\n        : t('tabMenu.addToBookmarks'),\n      command: () => workflowBookmarkStore.toggleBookmarked(tab.workflow.path),\n      disabled: tab.workflow.isTemporary\n    }\n  ]\n})\nconst commandStore = useCommandStore()\n\n// Horizontal scroll on wheel\nconst handleWheel = (event: WheelEvent) => {\n  const scrollElement = event.currentTarget as HTMLElement\n  const scrollAmount = event.deltaX || event.deltaY\n  scrollElement.scroll({\n    left: scrollElement.scrollLeft + scrollAmount\n  })\n}\n\nconst scroll = (direction: number) => {\n  const scrollElement = scrollPanelRef.value.$el.querySelector(\n    '.p-scrollpanel-content'\n  ) as HTMLElement\n  scrollElement.scrollBy({ left: direction * 20 })\n}\n\n// Scroll to active offscreen tab when opened\nwatch(\n  () => workflowStore.activeWorkflow,\n  async () => {\n    if (!selectedWorkflow.value) return\n\n    await nextTick()\n\n    const activeTabElement = document.querySelector('.p-togglebutton-checked')\n    if (!activeTabElement || !scrollPanelRef.value) return\n\n    const container = scrollPanelRef.value.$el.querySelector(\n      '.p-scrollpanel-content'\n    )\n    if (!container) return\n\n    const tabRect = activeTabElement.getBoundingClientRect()\n    const containerRect = container.getBoundingClientRect()\n\n    const offsetLeft = tabRect.left - containerRect.left\n    const offsetRight = tabRect.right - containerRect.right\n\n    if (offsetRight > 0) {\n      container.scrollBy({ left: offsetRight })\n    } else if (offsetLeft < 0) {\n      container.scrollBy({ left: offsetLeft })\n    }\n  },\n  { immediate: true }\n)\n\nconst scrollContent = computed(\n  () =>\n    scrollPanelRef.value?.$el.querySelector(\n      '.p-scrollpanel-content'\n    ) as HTMLElement\n)\nlet overflowObserver: ReturnType<typeof useOverflowObserver> | null = null\nlet overflowWatch: ReturnType<typeof watch> | null = null\nwatch(scrollContent, (value) => {\n  const scrollState = useScroll(value)\n\n  watch(scrollState.arrivedState, () => {\n    leftArrowEnabled.value = !scrollState.arrivedState.left\n    rightArrowEnabled.value = !scrollState.arrivedState.right\n  })\n\n  overflowObserver?.dispose()\n  overflowWatch?.stop()\n  overflowObserver = useOverflowObserver(value)\n  overflowWatch = watch(\n    overflowObserver.isOverflowing,\n    (value) => {\n      showOverflowArrows.value = value\n      void nextTick(() => {\n        // Force a new check after arrows are updated\n        scrollState.measure()\n      })\n    },\n    { immediate: true }\n  )\n})\n\nonUpdated(() => {\n  if (!overflowObserver?.disposed.value) {\n    overflowObserver?.checkOverflow()\n  }\n})\n</script>\n\n<style scoped>\n@reference '../../assets/css/style.css';\n\n.workflow-tabs-container {\n  background-color: var(--comfy-menu-secondary-bg);\n}\n\n:deep(.p-togglebutton) {\n  @apply p-0 bg-transparent rounded-none shrink relative border-0 border-r border-solid;\n  border-right-color: var(--border-color);\n  min-width: 90px;\n}\n\n.overflow-arrow {\n  @apply px-2 rounded-none;\n}\n\n.overflow-arrow[disabled] {\n  @apply opacity-25;\n}\n\n:deep(.p-togglebutton > .p-togglebutton-content) {\n  @apply max-w-full;\n}\n\n:deep(.workflow-tab) {\n  @apply max-w-full;\n}\n\n:deep(.p-togglebutton::before) {\n  @apply hidden;\n}\n\n:deep(.p-togglebutton:first-child) {\n  @apply border-l border-solid;\n  border-left-color: var(--border-color);\n}\n\n:deep(.p-togglebutton:not(:first-child)) {\n  @apply border-l-0;\n}\n\n:deep(.p-togglebutton.p-togglebutton-checked) {\n  @apply border-b border-solid h-full;\n  border-bottom-color: var(--p-button-text-primary-color);\n}\n\n:deep(.p-togglebutton:not(.p-togglebutton-checked)) {\n  @apply opacity-75;\n}\n\n:deep(.p-togglebutton-checked) .close-button,\n:deep(.p-togglebutton:hover) .close-button {\n  @apply visible;\n}\n\n:deep(.p-scrollpanel-content) {\n  @apply h-full;\n}\n\n:deep(.workflow-tabs) {\n  display: flex;\n}\n\n/* Scrollbar half opacity to avoid blocking the active tab bottom border */\n:deep(.p-scrollpanel:hover .p-scrollpanel-bar),\n:deep(.p-scrollpanel:active .p-scrollpanel-bar) {\n  @apply opacity-50;\n}\n\n:deep(.p-selectbutton) {\n  @apply rounded-none h-full;\n}\n\n.workflow-tabs-container-desktop {\n  max-width: env(titlebar-area-width, 100vw);\n}\n\n.window-actions-spacer {\n  @apply flex-auto;\n  /* If we are using custom titlebar, then we need to add a gap for the user to drag the window */\n  --window-actions-spacer-width: min(75px, env(titlebar-area-width, 0) * 9999);\n  min-width: var(--window-actions-spacer-width);\n}\n</style>\n","/**\n * Vue node lifecycle management for LiteGraph integration\n * Provides event-driven reactivity with performance optimizations\n */\nimport { reactive } from 'vue'\n\nimport { useChainCallback } from '@/composables/functional/useChainCallback'\nimport type { INodeOutputSlot } from '@/lib/litegraph/src/interfaces'\nimport type { INodeInputSlot } from '@/lib/litegraph/src/interfaces'\nimport { useLayoutMutations } from '@/renderer/core/layout/operations/layoutMutations'\nimport { LayoutSource } from '@/renderer/core/layout/types'\nimport type { InputSpec } from '@/schemas/nodeDef/nodeDefSchemaV2'\nimport { useNodeDefStore } from '@/stores/nodeDefStore'\nimport type { WidgetValue } from '@/types/simplifiedWidget'\n\nimport type { LGraph, LGraphNode } from '../../lib/litegraph/src/litegraph'\n\nexport interface SafeWidgetData {\n  name: string\n  type: string\n  value: WidgetValue\n  label?: string\n  options?: Record<string, unknown>\n  callback?: ((value: unknown) => void) | undefined\n  spec?: InputSpec\n}\n\nexport interface VueNodeData {\n  id: string\n  title: string\n  type: string\n  mode: number\n  selected: boolean\n  executing: boolean\n  subgraphId?: string | null\n  widgets?: SafeWidgetData[]\n  inputs?: INodeInputSlot[]\n  outputs?: INodeOutputSlot[]\n  hasErrors?: boolean\n  flags?: {\n    collapsed?: boolean\n    pinned?: boolean\n  }\n  color?: string\n  bgcolor?: string\n}\n\nexport interface GraphNodeManager {\n  // Reactive state - safe data extracted from LiteGraph nodes\n  vueNodeData: ReadonlyMap<string, VueNodeData>\n\n  // Access to original LiteGraph nodes (non-reactive)\n  getNode(id: string): LGraphNode | undefined\n\n  // Lifecycle methods\n  cleanup(): void\n}\n\nexport function useGraphNodeManager(graph: LGraph): GraphNodeManager {\n  // Get layout mutations composable\n  const { createNode, deleteNode, setSource } = useLayoutMutations()\n  const nodeDefStore = useNodeDefStore()\n  // Safe reactive data extracted from LiteGraph nodes\n  const vueNodeData = reactive(new Map<string, VueNodeData>())\n\n  // Non-reactive storage for original LiteGraph nodes\n  const nodeRefs = new Map<string, LGraphNode>()\n\n  // Extract safe data from LiteGraph node for Vue consumption\n  const extractVueNodeData = (node: LGraphNode): VueNodeData => {\n    // Determine subgraph ID - null for root graph, string for subgraphs\n    const subgraphId =\n      node.graph && 'id' in node.graph && node.graph !== node.graph.rootGraph\n        ? String(node.graph.id)\n        : null\n    // Extract safe widget data\n    const safeWidgets = node.widgets?.map((widget) => {\n      try {\n        // TODO: Use widget.getReactiveData() once TypeScript types are updated\n        let value = widget.value\n\n        // For combo widgets, if value is undefined, use the first option as default\n        if (\n          value === undefined &&\n          widget.type === 'combo' &&\n          widget.options?.values &&\n          Array.isArray(widget.options.values) &&\n          widget.options.values.length > 0\n        ) {\n          value = widget.options.values[0]\n        }\n        const spec = nodeDefStore.getInputSpecForWidget(node, widget.name)\n\n        return {\n          name: widget.name,\n          type: widget.type,\n          value: value,\n          label: widget.label,\n          options: widget.options ? { ...widget.options } : undefined,\n          callback: widget.callback,\n          spec\n        }\n      } catch (error) {\n        return {\n          name: widget.name || 'unknown',\n          type: widget.type || 'text',\n          value: undefined\n        }\n      }\n    })\n\n    const nodeType =\n      node.type ||\n      node.constructor?.comfyClass ||\n      node.constructor?.title ||\n      node.constructor?.name ||\n      'Unknown'\n\n    return {\n      id: String(node.id),\n      title: typeof node.title === 'string' ? node.title : '',\n      type: nodeType,\n      mode: node.mode || 0,\n      selected: node.selected || false,\n      executing: false, // Will be updated separately based on execution state\n      subgraphId,\n      hasErrors: !!node.has_errors,\n      widgets: safeWidgets,\n      inputs: node.inputs ? [...node.inputs] : undefined,\n      outputs: node.outputs ? [...node.outputs] : undefined,\n      flags: node.flags ? { ...node.flags } : undefined,\n      color: node.color || undefined,\n      bgcolor: node.bgcolor || undefined\n    }\n  }\n\n  // Get access to original LiteGraph node (non-reactive)\n  const getNode = (id: string): LGraphNode | undefined => {\n    return nodeRefs.get(id)\n  }\n\n  /**\n   * Validates that a value is a valid WidgetValue type\n   */\n  const validateWidgetValue = (value: unknown): WidgetValue => {\n    if (value === null || value === undefined || value === void 0) {\n      return undefined\n    }\n    if (\n      typeof value === 'string' ||\n      typeof value === 'number' ||\n      typeof value === 'boolean'\n    ) {\n      return value\n    }\n    if (typeof value === 'object') {\n      // Check if it's a File array\n      if (\n        Array.isArray(value) &&\n        value.length > 0 &&\n        value.every((item): item is File => item instanceof File)\n      ) {\n        return value\n      }\n      // Otherwise it's a generic object\n      return value\n    }\n    // If none of the above, return undefined\n    console.warn(`Invalid widget value type: ${typeof value}`, value)\n    return undefined\n  }\n\n  /**\n   * Updates Vue state when widget values change\n   */\n  const updateVueWidgetState = (\n    nodeId: string,\n    widgetName: string,\n    value: unknown\n  ): void => {\n    try {\n      const currentData = vueNodeData.get(nodeId)\n      if (!currentData?.widgets) return\n\n      const updatedWidgets = currentData.widgets.map((w) =>\n        w.name === widgetName ? { ...w, value: validateWidgetValue(value) } : w\n      )\n      vueNodeData.set(nodeId, {\n        ...currentData,\n        widgets: updatedWidgets\n      })\n    } catch (error) {\n      // Ignore widget update errors to prevent cascade failures\n    }\n  }\n\n  /**\n   * Creates a wrapped callback for a widget that maintains LiteGraph/Vue sync\n   */\n  const createWrappedWidgetCallback = (\n    widget: { value?: unknown; name: string }, // LiteGraph widget with minimal typing\n    originalCallback: ((value: unknown) => void) | undefined,\n    nodeId: string\n  ) => {\n    let updateInProgress = false\n\n    return (value: unknown) => {\n      if (updateInProgress) return\n      updateInProgress = true\n\n      try {\n        // 1. Update the widget value in LiteGraph (critical for LiteGraph state)\n        // Validate that the value is of an acceptable type\n        if (\n          value !== null &&\n          value !== undefined &&\n          typeof value !== 'string' &&\n          typeof value !== 'number' &&\n          typeof value !== 'boolean' &&\n          typeof value !== 'object'\n        ) {\n          console.warn(`Invalid widget value type: ${typeof value}`)\n          updateInProgress = false\n          return\n        }\n\n        // Always update widget.value to ensure sync\n        widget.value = value\n\n        // 2. Call the original callback if it exists\n        if (originalCallback) {\n          originalCallback.call(widget, value)\n        }\n\n        // 3. Update Vue state to maintain synchronization\n        updateVueWidgetState(nodeId, widget.name, value)\n      } finally {\n        updateInProgress = false\n      }\n    }\n  }\n\n  /**\n   * Sets up widget callbacks for a node\n   */\n  const setupNodeWidgetCallbacks = (node: LGraphNode) => {\n    if (!node.widgets) return\n\n    const nodeId = String(node.id)\n\n    node.widgets.forEach((widget) => {\n      const originalCallback = widget.callback\n      widget.callback = createWrappedWidgetCallback(\n        widget,\n        originalCallback,\n        nodeId\n      )\n    })\n  }\n\n  const syncWithGraph = () => {\n    if (!graph?._nodes) return\n\n    const currentNodes = new Set(graph._nodes.map((n) => String(n.id)))\n\n    // Remove deleted nodes\n    for (const id of Array.from(vueNodeData.keys())) {\n      if (!currentNodes.has(id)) {\n        nodeRefs.delete(id)\n        vueNodeData.delete(id)\n      }\n    }\n\n    // Add/update existing nodes\n    graph._nodes.forEach((node) => {\n      const id = String(node.id)\n\n      // Store non-reactive reference\n      nodeRefs.set(id, node)\n\n      // Set up widget callbacks BEFORE extracting data (critical order)\n      setupNodeWidgetCallbacks(node)\n\n      // Extract and store safe data for Vue\n      vueNodeData.set(id, extractVueNodeData(node))\n    })\n  }\n\n  /**\n   * Handles node addition to the graph - sets up Vue state and spatial indexing\n   * Defers position extraction until after potential configure() calls\n   */\n  const handleNodeAdded = (\n    node: LGraphNode,\n    originalCallback?: (node: LGraphNode) => void\n  ) => {\n    const id = String(node.id)\n\n    // Store non-reactive reference to original node\n    nodeRefs.set(id, node)\n\n    // Set up widget callbacks BEFORE extracting data (critical order)\n    setupNodeWidgetCallbacks(node)\n\n    // Extract initial data for Vue (may be incomplete during graph configure)\n    vueNodeData.set(id, extractVueNodeData(node))\n\n    const initializeVueNodeLayout = () => {\n      // Extract actual positions after configure() has potentially updated them\n      const nodePosition = { x: node.pos[0], y: node.pos[1] }\n      const nodeSize = { width: node.size[0], height: node.size[1] }\n\n      // Add node to layout store with final positions\n      setSource(LayoutSource.Canvas)\n      void createNode(id, {\n        position: nodePosition,\n        size: nodeSize,\n        zIndex: node.order || 0,\n        visible: true\n      })\n    }\n\n    // Check if we're in the middle of configuring the graph (workflow loading)\n    if (window.app?.configuringGraph) {\n      // During workflow loading - defer layout initialization until configure completes\n      // Chain our callback with any existing onAfterGraphConfigured callback\n      node.onAfterGraphConfigured = useChainCallback(\n        node.onAfterGraphConfigured,\n        () => {\n          // Re-extract data now that configure() has populated title/slots/widgets/etc.\n          vueNodeData.set(id, extractVueNodeData(node))\n          initializeVueNodeLayout()\n        }\n      )\n    } else {\n      // Not during workflow loading - initialize layout immediately\n      // This handles individual node additions during normal operation\n      initializeVueNodeLayout()\n    }\n\n    // Call original callback if provided\n    if (originalCallback) {\n      void originalCallback(node)\n    }\n  }\n\n  /**\n   * Handles node removal from the graph - cleans up all references\n   */\n  const handleNodeRemoved = (\n    node: LGraphNode,\n    originalCallback?: (node: LGraphNode) => void\n  ) => {\n    const id = String(node.id)\n\n    // Remove node from layout store\n    setSource(LayoutSource.Canvas)\n    void deleteNode(id)\n\n    // Clean up all tracking references\n    nodeRefs.delete(id)\n    vueNodeData.delete(id)\n\n    // Call original callback if provided\n    if (originalCallback) {\n      originalCallback(node)\n    }\n  }\n\n  /**\n   * Creates cleanup function for event listeners and state\n   */\n  const createCleanupFunction = (\n    originalOnNodeAdded: ((node: LGraphNode) => void) | undefined,\n    originalOnNodeRemoved: ((node: LGraphNode) => void) | undefined,\n    originalOnTrigger: ((action: string, param: unknown) => void) | undefined\n  ) => {\n    return () => {\n      // Restore original callbacks\n      graph.onNodeAdded = originalOnNodeAdded || undefined\n      graph.onNodeRemoved = originalOnNodeRemoved || undefined\n      graph.onTrigger = originalOnTrigger || undefined\n\n      // Clear all state maps\n      nodeRefs.clear()\n      vueNodeData.clear()\n    }\n  }\n\n  /**\n   * Sets up event listeners - now simplified with extracted handlers\n   */\n  const setupEventListeners = (): (() => void) => {\n    // Store original callbacks\n    const originalOnNodeAdded = graph.onNodeAdded\n    const originalOnNodeRemoved = graph.onNodeRemoved\n    const originalOnTrigger = graph.onTrigger\n\n    // Set up graph event handlers\n    graph.onNodeAdded = (node: LGraphNode) => {\n      handleNodeAdded(node, originalOnNodeAdded)\n    }\n\n    graph.onNodeRemoved = (node: LGraphNode) => {\n      handleNodeRemoved(node, originalOnNodeRemoved)\n    }\n\n    // Listen for property change events from instrumented nodes\n    graph.onTrigger = (action: string, param: unknown) => {\n      if (\n        action === 'node:property:changed' &&\n        param &&\n        typeof param === 'object'\n      ) {\n        const event = param as {\n          nodeId: string | number\n          property: string\n          oldValue: unknown\n          newValue: unknown\n        }\n\n        const nodeId = String(event.nodeId)\n        const currentData = vueNodeData.get(nodeId)\n\n        if (currentData) {\n          switch (event.property) {\n            case 'title':\n              vueNodeData.set(nodeId, {\n                ...currentData,\n                title: String(event.newValue)\n              })\n              break\n            case 'flags.collapsed':\n              vueNodeData.set(nodeId, {\n                ...currentData,\n                flags: {\n                  ...currentData.flags,\n                  collapsed: Boolean(event.newValue)\n                }\n              })\n              break\n            case 'flags.pinned':\n              vueNodeData.set(nodeId, {\n                ...currentData,\n                flags: {\n                  ...currentData.flags,\n                  pinned: Boolean(event.newValue)\n                }\n              })\n              break\n            case 'mode':\n              vueNodeData.set(nodeId, {\n                ...currentData,\n                mode: typeof event.newValue === 'number' ? event.newValue : 0\n              })\n              break\n            case 'color':\n              vueNodeData.set(nodeId, {\n                ...currentData,\n                color:\n                  typeof event.newValue === 'string'\n                    ? event.newValue\n                    : undefined\n              })\n              break\n            case 'bgcolor':\n              vueNodeData.set(nodeId, {\n                ...currentData,\n                bgcolor:\n                  typeof event.newValue === 'string'\n                    ? event.newValue\n                    : undefined\n              })\n          }\n        }\n      } else if (\n        action === 'node:slot-errors:changed' &&\n        param &&\n        typeof param === 'object'\n      ) {\n        const event = param as { nodeId: string | number }\n        const nodeId = String(event.nodeId)\n        const litegraphNode = nodeRefs.get(nodeId)\n        const currentData = vueNodeData.get(nodeId)\n\n        if (litegraphNode && currentData) {\n          // Re-extract slot data with updated hasErrors properties\n          vueNodeData.set(nodeId, {\n            ...currentData,\n            inputs: litegraphNode.inputs\n              ? [...litegraphNode.inputs]\n              : undefined,\n            outputs: litegraphNode.outputs\n              ? [...litegraphNode.outputs]\n              : undefined\n          })\n        }\n      }\n\n      // Call original trigger handler if it exists\n      if (originalOnTrigger) {\n        originalOnTrigger(action, param)\n      }\n    }\n\n    // Initialize state\n    syncWithGraph()\n\n    // Return cleanup function\n    return createCleanupFunction(\n      originalOnNodeAdded || undefined,\n      originalOnNodeRemoved || undefined,\n      originalOnTrigger || undefined\n    )\n  }\n\n  // Set up event listeners immediately\n  const cleanup = setupEventListeners()\n\n  // Process any existing nodes after event listeners are set up\n  if (graph._nodes && graph._nodes.length > 0) {\n    graph._nodes.forEach((node: LGraphNode) => {\n      if (graph.onNodeAdded) {\n        graph.onNodeAdded(node)\n      }\n    })\n  }\n\n  return {\n    vueNodeData,\n    getNode,\n    cleanup\n  }\n}\n","/**\n * Composable for syncing LiteGraph with the Layout system\n *\n * Implements one-way sync from Layout Store to LiteGraph.\n * The layout store is the single source of truth.\n */\nimport { onUnmounted } from 'vue'\nimport { ref } from 'vue'\n\nimport type { useCanvasStore } from '@/renderer/core/canvas/canvasStore'\nimport { layoutStore } from '@/renderer/core/layout/store/layoutStore'\n\n/**\n * Composable for syncing LiteGraph with the Layout system\n * This replaces the bidirectional sync with a one-way sync\n */\nexport function useLayoutSync() {\n  const unsubscribe = ref<() => void>()\n\n  /**\n   * Start syncing from Layout → LiteGraph\n   */\n  function startSync(canvas: ReturnType<typeof useCanvasStore>['canvas']) {\n    if (!canvas?.graph) return\n\n    // Cancel last subscription\n    stopSync()\n    // Subscribe to layout changes\n    unsubscribe.value = layoutStore.onChange((change) => {\n      // Apply changes to LiteGraph regardless of source\n      // The layout store is the single source of truth\n      for (const nodeId of change.nodeIds) {\n        const layout = layoutStore.getNodeLayoutRef(nodeId).value\n        if (!layout) continue\n\n        const liteNode = canvas.graph?.getNodeById(parseInt(nodeId))\n        if (!liteNode) continue\n\n        if (\n          liteNode.pos[0] !== layout.position.x ||\n          liteNode.pos[1] !== layout.position.y\n        ) {\n          liteNode.pos[0] = layout.position.x\n          liteNode.pos[1] = layout.position.y\n        }\n\n        if (\n          liteNode.size[0] !== layout.size.width ||\n          liteNode.size[1] !== layout.size.height\n        ) {\n          liteNode.size[0] = layout.size.width\n          liteNode.size[1] = layout.size.height\n        }\n      }\n\n      // Trigger single redraw for all changes\n      canvas.setDirty(true, true)\n    })\n  }\n\n  function stopSync() {\n    unsubscribe.value?.()\n    unsubscribe.value = undefined\n  }\n\n  onUnmounted(stopSync)\n\n  return {\n    startSync,\n    stopSync\n  }\n}\n","import { tryOnScopeDispose } from '@vueuse/core'\nimport { computed, ref, toValue } from 'vue'\n\nimport type { LGraphCanvas } from '@/lib/litegraph/src/LGraphCanvas'\nimport { LLink } from '@/lib/litegraph/src/LLink'\nimport { Reroute } from '@/lib/litegraph/src/Reroute'\nimport type { ReadOnlyPoint } from '@/lib/litegraph/src/interfaces'\nimport { LinkDirection } from '@/lib/litegraph/src/types/globalEnums'\nimport { LitegraphLinkAdapter } from '@/renderer/core/canvas/litegraph/litegraphLinkAdapter'\nimport type { LinkRenderContext } from '@/renderer/core/canvas/litegraph/litegraphLinkAdapter'\nimport { getSlotPosition } from '@/renderer/core/canvas/litegraph/slotCalculations'\nimport { layoutStore } from '@/renderer/core/layout/store/layoutStore'\nimport type { LayoutChange } from '@/renderer/core/layout/types'\n\nexport function useLinkLayoutSync() {\n  const canvasRef = ref<LGraphCanvas>()\n  const graphRef = computed(() => canvasRef.value?.graph)\n  const unsubscribeLayoutChange = ref<() => void>()\n  const adapter = new LitegraphLinkAdapter()\n\n  /**\n   * Build link render context from canvas properties\n   */\n  function buildLinkRenderContext(): LinkRenderContext {\n    const canvas = toValue(canvasRef)\n    if (!canvas) {\n      throw new Error('Canvas not initialized')\n    }\n\n    return {\n      // Canvas settings\n      renderMode: canvas.links_render_mode,\n      connectionWidth: canvas.connections_width,\n      renderBorder: canvas.render_connections_border,\n      lowQuality: canvas.low_quality,\n      highQualityRender: canvas.highquality_render,\n      scale: canvas.ds.scale,\n      linkMarkerShape: canvas.linkMarkerShape,\n      renderConnectionArrows: canvas.render_connection_arrows,\n\n      // State\n      highlightedLinks: new Set(Object.keys(canvas.highlighted_links)),\n\n      // Colors\n      defaultLinkColor: canvas.default_link_color,\n      linkTypeColors: (canvas.constructor as any).link_type_colors || {},\n\n      // Pattern for disabled links\n      disabledPattern: canvas._pattern\n    }\n  }\n\n  /**\n   * Recompute a single link and all its segments\n   *\n   * Note: This logic mirrors LGraphCanvas#renderAllLinkSegments but:\n   * - Works with offscreen context for event-driven updates\n   * - No visibility checks (always computes full geometry)\n   * - No dragging state handling (pure geometry computation)\n   */\n  function recomputeLinkById(linkId: number): void {\n    const canvas = toValue(canvasRef)\n    const graph = toValue(graphRef)\n    if (!graph || !canvas) return\n\n    const link = graph.links.get(linkId)\n    if (!link || link.id === -1) return // Skip floating/temp links\n\n    // Get source and target nodes\n    const sourceNode = graph.getNodeById(link.origin_id)\n    const targetNode = graph.getNodeById(link.target_id)\n    if (!sourceNode || !targetNode) return\n\n    // Get slots\n    const sourceSlot = sourceNode.outputs?.[link.origin_slot]\n    const targetSlot = targetNode.inputs?.[link.target_slot]\n    if (!sourceSlot || !targetSlot) return\n\n    // Get positions\n    const startPos = getSlotPosition(sourceNode, link.origin_slot, false)\n    const endPos = getSlotPosition(targetNode, link.target_slot, true)\n\n    // Get directions\n    const startDir = sourceSlot.dir || LinkDirection.RIGHT\n    const endDir = targetSlot.dir || LinkDirection.LEFT\n\n    // Get reroutes for this link\n    const reroutes = LLink.getReroutes(graph, link)\n\n    // Build render context\n    const context = buildLinkRenderContext()\n\n    if (reroutes.length > 0) {\n      // Render segmented link with reroutes\n      let segmentStartPos = startPos\n      let segmentStartDir = startDir\n\n      for (let i = 0; i < reroutes.length; i++) {\n        const reroute = reroutes[i]\n\n        // Calculate reroute angle\n        reroute.calculateAngle(Date.now(), graph, [\n          segmentStartPos[0],\n          segmentStartPos[1]\n        ])\n\n        // Calculate control points\n        const distance = Math.sqrt(\n          (reroute.pos[0] - segmentStartPos[0]) ** 2 +\n            (reroute.pos[1] - segmentStartPos[1]) ** 2\n        )\n        const dist = Math.min(Reroute.maxSplineOffset, distance * 0.25)\n\n        // Special handling for floating input chain\n        const isFloatingInputChain = !sourceNode && targetNode\n        const startControl: ReadOnlyPoint = isFloatingInputChain\n          ? [0, 0]\n          : [dist * reroute.cos, dist * reroute.sin]\n\n        // Render segment to this reroute\n        adapter.renderLinkDirect(\n          canvas.ctx,\n          segmentStartPos,\n          reroute.pos,\n          link,\n          true, // skip_border\n          0, // flow\n          null, // color\n          segmentStartDir,\n          LinkDirection.CENTER,\n          context,\n          {\n            startControl,\n            endControl: reroute.controlPoint,\n            reroute,\n            disabled: false\n          }\n        )\n\n        // Prepare for next segment\n        segmentStartPos = reroute.pos\n        segmentStartDir = LinkDirection.CENTER\n      }\n\n      // Render final segment from last reroute to target\n      const lastReroute = reroutes[reroutes.length - 1]\n      const finalDistance = Math.sqrt(\n        (endPos[0] - lastReroute.pos[0]) ** 2 +\n          (endPos[1] - lastReroute.pos[1]) ** 2\n      )\n      const finalDist = Math.min(Reroute.maxSplineOffset, finalDistance * 0.25)\n      const finalStartControl: ReadOnlyPoint = [\n        finalDist * lastReroute.cos,\n        finalDist * lastReroute.sin\n      ]\n\n      adapter.renderLinkDirect(\n        canvas.ctx,\n        lastReroute.pos,\n        endPos,\n        link,\n        true, // skip_border\n        0, // flow\n        null, // color\n        LinkDirection.CENTER,\n        endDir,\n        context,\n        {\n          startControl: finalStartControl,\n          disabled: false\n        }\n      )\n    } else {\n      // No reroutes - render direct link\n      adapter.renderLinkDirect(\n        canvas.ctx,\n        startPos,\n        endPos,\n        link,\n        true, // skip_border\n        0, // flow\n        null, // color\n        startDir,\n        endDir,\n        context,\n        {\n          disabled: false\n        }\n      )\n    }\n  }\n\n  /**\n   * Recompute all links connected to a node\n   */\n  function recomputeLinksForNode(nodeId: number): void {\n    const graph = toValue(graphRef)\n    if (!graph) return\n\n    const node = graph.getNodeById(nodeId)\n    if (!node) return\n\n    const linkIds = new Set<number>()\n\n    // Collect output links\n    if (node.outputs) {\n      for (const output of node.outputs) {\n        if (output.links) {\n          for (const linkId of output.links) {\n            linkIds.add(linkId)\n          }\n        }\n      }\n    }\n\n    // Collect input links\n    if (node.inputs) {\n      for (const input of node.inputs) {\n        if (input.link !== null && input.link !== undefined) {\n          linkIds.add(input.link)\n        }\n      }\n    }\n\n    // Recompute each link\n    for (const linkId of linkIds) {\n      recomputeLinkById(linkId)\n    }\n  }\n\n  /**\n   * Recompute all links associated with a reroute\n   */\n  function recomputeLinksForReroute(rerouteId: number): void {\n    const graph = toValue(graphRef)\n    if (!graph) return\n\n    const reroute = graph.reroutes.get(rerouteId)\n    if (!reroute) return\n\n    // Recompute all links that pass through this reroute\n    for (const linkId of reroute.linkIds) {\n      recomputeLinkById(linkId)\n    }\n  }\n\n  /**\n   * Start link layout sync with event-driven functionality\n   */\n  function start(canvasInstance: LGraphCanvas): void {\n    canvasRef.value = canvasInstance\n    if (!canvasInstance.graph) return\n\n    // Initial computation for all existing links\n    for (const link of canvasInstance.graph._links.values()) {\n      if (link.id !== -1) {\n        recomputeLinkById(link.id)\n      }\n    }\n\n    // Subscribe to layout store changes\n    unsubscribeLayoutChange.value?.()\n    unsubscribeLayoutChange.value = layoutStore.onChange(\n      (change: LayoutChange) => {\n        switch (change.operation.type) {\n          case 'moveNode':\n          case 'resizeNode':\n            recomputeLinksForNode(parseInt(change.operation.nodeId))\n            break\n          case 'createLink':\n            recomputeLinkById(change.operation.linkId)\n            break\n          case 'deleteLink':\n            // No-op - store already cleaned by existing code\n            break\n          case 'createReroute':\n          case 'deleteReroute':\n            // Recompute all affected links\n            if ('linkIds' in change.operation) {\n              for (const linkId of change.operation.linkIds) {\n                recomputeLinkById(linkId)\n              }\n            }\n            break\n          case 'moveReroute':\n            recomputeLinksForReroute(change.operation.rerouteId)\n            break\n        }\n      }\n    )\n  }\n\n  function stop(): void {\n    unsubscribeLayoutChange.value?.()\n    unsubscribeLayoutChange.value = undefined\n    canvasRef.value = undefined\n  }\n\n  tryOnScopeDispose(stop)\n\n  return {\n    start,\n    stop\n  }\n}\n","/**\n * Slot Registration\n *\n * Handles registration of slot layouts with the layout store for hit testing.\n * This module manages the state mutation side of slot layout management,\n * while pure calculations are handled separately in SlotCalculations.ts.\n */\nimport type { Point } from '@/lib/litegraph/src/interfaces'\nimport { LiteGraph } from '@/lib/litegraph/src/litegraph'\nimport {\n  type SlotPositionContext,\n  calculateInputSlotPos,\n  calculateOutputSlotPos\n} from '@/renderer/core/canvas/litegraph/slotCalculations'\nimport { layoutStore } from '@/renderer/core/layout/store/layoutStore'\nimport type { SlotLayout } from '@/renderer/core/layout/types'\n\nimport { getSlotKey } from './slotIdentifier'\n\n/**\n * Register slot layout with the layout store for hit testing\n * @param nodeId The node ID\n * @param slotIndex The slot index\n * @param isInput Whether this is an input slot\n * @param position The slot position in graph coordinates\n */\nfunction registerSlotLayout(\n  nodeId: string,\n  slotIndex: number,\n  isInput: boolean,\n  position: Point\n): void {\n  const slotKey = getSlotKey(nodeId, slotIndex, isInput)\n\n  // Calculate bounds for the slot using LiteGraph's standard slot height\n  const slotSize = LiteGraph.NODE_SLOT_HEIGHT\n  const halfSize = slotSize / 2\n\n  const slotLayout: SlotLayout = {\n    nodeId,\n    index: slotIndex,\n    type: isInput ? 'input' : 'output',\n    position: { x: position[0], y: position[1] },\n    bounds: {\n      x: position[0] - halfSize,\n      y: position[1] - halfSize,\n      width: slotSize,\n      height: slotSize\n    }\n  }\n\n  layoutStore.updateSlotLayout(slotKey, slotLayout)\n}\n\n/**\n * Register all slots for a node\n * @param nodeId The node ID\n * @param context The slot position context\n */\nexport function registerNodeSlots(\n  nodeId: string,\n  context: SlotPositionContext\n): void {\n  // Register input slots\n  context.inputs.forEach((_, index) => {\n    const position = calculateInputSlotPos(context, index)\n    registerSlotLayout(nodeId, index, true, position)\n  })\n\n  // Register output slots\n  context.outputs.forEach((_, index) => {\n    const position = calculateOutputSlotPos(context, index)\n    registerSlotLayout(nodeId, index, false, position)\n  })\n}\n","import { tryOnScopeDispose } from '@vueuse/core'\nimport { ref } from 'vue'\n\nimport type { LGraphCanvas } from '@/lib/litegraph/src/LGraphCanvas'\nimport type { LGraphNode } from '@/lib/litegraph/src/litegraph'\nimport { LiteGraph } from '@/lib/litegraph/src/litegraph'\nimport type { SlotPositionContext } from '@/renderer/core/canvas/litegraph/slotCalculations'\nimport { registerNodeSlots } from '@/renderer/core/layout/slots/register'\nimport { layoutStore } from '@/renderer/core/layout/store/layoutStore'\n\nfunction computeAndRegisterSlots(node: LGraphNode): void {\n  const nodeId = String(node.id)\n  const nodeLayout = layoutStore.getNodeLayoutRef(nodeId).value\n\n  // Fallback to live node values if layout not ready\n  const nodeX = nodeLayout?.position.x ?? node.pos[0]\n  const nodeY = nodeLayout?.position.y ?? node.pos[1]\n  const nodeWidth = nodeLayout?.size.width ?? node.size[0]\n  const nodeHeight = nodeLayout?.size.height ?? node.size[1]\n\n  // Ensure concrete slots & arrange when needed for accurate positions\n  node._setConcreteSlots()\n  const collapsed = node.flags.collapsed ?? false\n  if (!collapsed) {\n    node.arrange()\n  }\n\n  const context: SlotPositionContext = {\n    nodeX,\n    nodeY,\n    nodeWidth,\n    nodeHeight,\n    collapsed,\n    collapsedWidth: node._collapsed_width,\n    slotStartY: node.constructor.slot_start_y,\n    inputs: node.inputs,\n    outputs: node.outputs,\n    widgets: node.widgets\n  }\n\n  registerNodeSlots(nodeId, context)\n}\n\nexport function useSlotLayoutSync() {\n  const unsubscribeLayoutChange = ref<() => void>()\n  const restoreHandlers = ref<() => void>()\n\n  /**\n   * Attempt to start slot layout sync with full event-driven functionality\n   * @param canvas LiteGraph canvas instance\n   * @returns true if sync was actually started, false if early-returned\n   */\n  function attemptStart(canvas: LGraphCanvas): boolean {\n    // When Vue nodes are enabled, slot DOM registers exact positions.\n    // Skip calculated registration to avoid conflicts.\n    if (LiteGraph.vueNodesMode) {\n      return false\n    }\n    const graph = canvas?.graph\n    if (!graph) return false\n\n    // Initial registration for all nodes in the current graph\n    for (const node of graph.nodes) {\n      computeAndRegisterSlots(node)\n    }\n\n    // Layout changes → recompute slots for changed nodes\n    unsubscribeLayoutChange.value?.()\n    unsubscribeLayoutChange.value = layoutStore.onChange((change) => {\n      for (const nodeId of change.nodeIds) {\n        const node = graph.getNodeById(parseInt(nodeId))\n        if (node) {\n          computeAndRegisterSlots(node)\n        }\n      }\n    })\n\n    // LiteGraph event hooks\n    const origNodeAdded = graph.onNodeAdded\n    const origNodeRemoved = graph.onNodeRemoved\n    const origTrigger = graph.onTrigger\n    const origAfterChange = graph.onAfterChange\n\n    graph.onNodeAdded = (node: LGraphNode) => {\n      computeAndRegisterSlots(node)\n      if (origNodeAdded) {\n        origNodeAdded.call(graph, node)\n      }\n    }\n\n    graph.onNodeRemoved = (node: LGraphNode) => {\n      layoutStore.deleteNodeSlotLayouts(String(node.id))\n      if (origNodeRemoved) {\n        origNodeRemoved.call(graph, node)\n      }\n    }\n\n    graph.onTrigger = (action: string, param: any) => {\n      if (\n        action === 'node:property:changed' &&\n        param?.property === 'flags.collapsed'\n      ) {\n        const node = graph.getNodeById(parseInt(String(param.nodeId)))\n        if (node) {\n          computeAndRegisterSlots(node)\n        }\n      }\n      if (origTrigger) {\n        origTrigger.call(graph, action, param)\n      }\n    }\n\n    graph.onAfterChange = (graph: any, node?: any) => {\n      if (node && node.id) {\n        computeAndRegisterSlots(node)\n      }\n      if (origAfterChange) {\n        origAfterChange.call(graph, graph, node)\n      }\n    }\n\n    // Store cleanup function\n    restoreHandlers.value = () => {\n      graph.onNodeAdded = origNodeAdded || undefined\n      graph.onNodeRemoved = origNodeRemoved || undefined\n      // Only restore onTrigger if Vue nodes are not active\n      // Vue node manager sets its own onTrigger handler\n      if (!LiteGraph.vueNodesMode) {\n        graph.onTrigger = origTrigger || undefined\n      }\n      graph.onAfterChange = origAfterChange || undefined\n    }\n\n    return true\n  }\n\n  function stop(): void {\n    unsubscribeLayoutChange.value?.()\n    unsubscribeLayoutChange.value = undefined\n    restoreHandlers.value?.()\n    restoreHandlers.value = undefined\n  }\n\n  tryOnScopeDispose(stop)\n\n  return {\n    attemptStart,\n    stop\n  }\n}\n","import { createSharedComposable } from '@vueuse/core'\nimport { shallowRef, watch } from 'vue'\n\nimport { useGraphNodeManager } from '@/composables/graph/useGraphNodeManager'\nimport type { GraphNodeManager } from '@/composables/graph/useGraphNodeManager'\nimport { useVueFeatureFlags } from '@/composables/useVueFeatureFlags'\nimport type { LGraphCanvas, LGraphNode } from '@/lib/litegraph/src/litegraph'\nimport { useCanvasStore } from '@/renderer/core/canvas/canvasStore'\nimport { useLayoutMutations } from '@/renderer/core/layout/operations/layoutMutations'\nimport { layoutStore } from '@/renderer/core/layout/store/layoutStore'\nimport { useLayoutSync } from '@/renderer/core/layout/sync/useLayoutSync'\nimport { useLinkLayoutSync } from '@/renderer/core/layout/sync/useLinkLayoutSync'\nimport { useSlotLayoutSync } from '@/renderer/core/layout/sync/useSlotLayoutSync'\nimport { app as comfyApp } from '@/scripts/app'\n\nfunction useVueNodeLifecycleIndividual() {\n  const canvasStore = useCanvasStore()\n  const layoutMutations = useLayoutMutations()\n  const { shouldRenderVueNodes } = useVueFeatureFlags()\n\n  const nodeManager = shallowRef<GraphNodeManager | null>(null)\n\n  const { startSync } = useLayoutSync()\n  const linkSyncManager = useLinkLayoutSync()\n  const slotSyncManager = useSlotLayoutSync()\n\n  const initializeNodeManager = () => {\n    // Use canvas graph if available (handles subgraph contexts), fallback to app graph\n    const activeGraph = comfyApp.canvas?.graph\n    if (!activeGraph || nodeManager.value) return\n\n    // Initialize the core node manager\n    const manager = useGraphNodeManager(activeGraph)\n    nodeManager.value = manager\n\n    // Initialize layout system with existing nodes from active graph\n    const nodes = activeGraph._nodes.map((node: LGraphNode) => ({\n      id: node.id.toString(),\n      pos: [node.pos[0], node.pos[1]] as [number, number],\n      size: [node.size[0], node.size[1]] as [number, number]\n    }))\n    layoutStore.initializeFromLiteGraph(nodes)\n\n    // Seed reroutes into the Layout Store so hit-testing uses the new path\n    for (const reroute of activeGraph.reroutes.values()) {\n      const [x, y] = reroute.pos\n      const parent = reroute.parentId ?? undefined\n      const linkIds = Array.from(reroute.linkIds)\n      layoutMutations.createReroute(reroute.id, { x, y }, parent, linkIds)\n    }\n\n    // Seed existing links into the Layout Store (topology only)\n    for (const link of activeGraph._links.values()) {\n      layoutMutations.createLink(\n        link.id,\n        link.origin_id,\n        link.origin_slot,\n        link.target_id,\n        link.target_slot\n      )\n    }\n\n    // Initialize layout sync (one-way: Layout Store → LiteGraph)\n    startSync(canvasStore.canvas)\n\n    if (comfyApp.canvas) {\n      linkSyncManager.start(comfyApp.canvas)\n    }\n  }\n\n  const disposeNodeManagerAndSyncs = () => {\n    if (!nodeManager.value) return\n\n    try {\n      nodeManager.value.cleanup()\n    } catch {\n      /* empty */\n    }\n    nodeManager.value = null\n\n    linkSyncManager.stop()\n  }\n\n  // Watch for Vue nodes enabled state changes\n  watch(\n    () => shouldRenderVueNodes.value && Boolean(comfyApp.canvas?.graph),\n    (enabled) => {\n      if (enabled) {\n        initializeNodeManager()\n      } else {\n        disposeNodeManagerAndSyncs()\n      }\n    },\n    { immediate: true }\n  )\n\n  // Consolidated watch for slot layout sync management\n  watch(\n    [() => canvasStore.canvas, () => shouldRenderVueNodes.value],\n    ([canvas, vueMode], [, oldVueMode]) => {\n      const modeChanged = vueMode !== oldVueMode\n\n      // Clear stale slot layouts when switching modes\n      if (modeChanged) {\n        layoutStore.clearAllSlotLayouts()\n      }\n\n      // Switching to Vue\n      if (vueMode) {\n        slotSyncManager.stop()\n      }\n\n      // Switching to LG\n      const shouldRun = Boolean(canvas?.graph) && !vueMode\n      if (shouldRun && canvas) {\n        slotSyncManager.attemptStart(canvas as LGraphCanvas)\n      }\n    },\n    { immediate: true }\n  )\n\n  // Handle case where Vue nodes are enabled but graph starts empty\n  const setupEmptyGraphListener = () => {\n    const activeGraph = comfyApp.canvas?.graph\n    if (\n      !shouldRenderVueNodes.value ||\n      nodeManager.value ||\n      activeGraph?._nodes.length !== 0\n    ) {\n      return\n    }\n    const originalOnNodeAdded = activeGraph.onNodeAdded\n    activeGraph.onNodeAdded = function (node: LGraphNode) {\n      // Restore original handler\n      activeGraph.onNodeAdded = originalOnNodeAdded\n\n      // Initialize node manager if needed\n      if (shouldRenderVueNodes.value && !nodeManager.value) {\n        initializeNodeManager()\n      }\n\n      // Call original handler\n      if (originalOnNodeAdded) {\n        originalOnNodeAdded.call(this, node)\n      }\n    }\n  }\n\n  // Cleanup function for component unmounting\n  const cleanup = () => {\n    if (nodeManager.value) {\n      nodeManager.value.cleanup()\n      nodeManager.value = null\n    }\n    slotSyncManager.stop()\n    linkSyncManager.stop()\n  }\n\n  return {\n    nodeManager,\n\n    // Lifecycle methods\n    initializeNodeManager,\n    disposeNodeManagerAndSyncs,\n    setupEmptyGraphListener,\n    cleanup\n  }\n}\n\nexport const useVueNodeLifecycle = createSharedComposable(\n  useVueNodeLifecycleIndividual\n)\n","/**\n * Vue Nodes Viewport Culling\n *\n * Principles:\n * 1. Query DOM directly using data attributes (no cache to maintain)\n * 2. Set display none on element to avoid cascade resolution overhead\n * 3. Only run when transform changes (event driven)\n */\nimport { createSharedComposable, useThrottleFn } from '@vueuse/core'\nimport { computed } from 'vue'\n\nimport { useVueNodeLifecycle } from '@/composables/graph/useVueNodeLifecycle'\nimport type { LGraphNode } from '@/lib/litegraph/src/LGraphNode'\nimport { useCanvasStore } from '@/renderer/core/canvas/canvasStore'\nimport { app } from '@/scripts/app'\n\ntype Bounds = [left: number, right: number, top: number, bottom: number]\n\nfunction getNodeBounds(node: LGraphNode): Bounds {\n  const [nodeLeft, nodeTop] = node.pos\n  const nodeRight = nodeLeft + node.size[0]\n  const nodeBottom = nodeTop + node.size[1]\n  return [nodeLeft, nodeRight, nodeTop, nodeBottom]\n}\n\nfunction viewportEdges(\n  canvas: ReturnType<typeof useCanvasStore>['canvas']\n): Bounds | undefined {\n  if (!canvas) {\n    return\n  }\n  const ds = canvas.ds\n  const viewport_width = canvas.canvas.width\n  const viewport_height = canvas.canvas.height\n  const margin = 500 * ds.scale\n\n  const [xOffset, yOffset] = ds.offset\n\n  const leftEdge = -margin / ds.scale - xOffset\n  const rightEdge = (viewport_width + margin) / ds.scale - xOffset\n  const topEdge = -margin / ds.scale - yOffset\n  const bottomEdge = (viewport_height + margin) / ds.scale - yOffset\n  return [leftEdge, rightEdge, topEdge, bottomEdge]\n}\n\nfunction boundsIntersect(boxA: Bounds, boxB: Bounds): boolean {\n  const [aLeft, aRight, aTop, aBottom] = boxA\n  const [bLeft, bRight, bTop, bBottom] = boxB\n\n  const leftOf = aRight < bLeft\n  const rightOf = aLeft > bRight\n  const above = aBottom < bTop\n  const below = aTop > bBottom\n  return !(leftOf || rightOf || above || below)\n}\n\nfunction useViewportCullingIndividual() {\n  const canvasStore = useCanvasStore()\n  const { nodeManager } = useVueNodeLifecycle()\n\n  const viewport = computed(() => viewportEdges(canvasStore.canvas))\n\n  function inViewport(node: LGraphNode | undefined): boolean {\n    if (!viewport.value || !node) {\n      return true\n    }\n    const nodeBounds = getNodeBounds(node)\n    return boundsIntersect(nodeBounds, viewport.value)\n  }\n\n  /**\n   * Update visibility of all nodes based on viewport\n   * Queries DOM directly - no cache maintenance needed\n   */\n  function updateVisibility() {\n    if (!nodeManager.value || !app.canvas) return // load bearing app.canvas check for workflows being loaded.\n\n    const nodeElements = document.querySelectorAll('[data-node-id]')\n    for (const element of nodeElements) {\n      const nodeId = element.getAttribute('data-node-id')\n      if (!nodeId) continue\n\n      const node = nodeManager.value.getNode(nodeId)\n      if (!node) continue\n\n      const displayValue = inViewport(node) ? '' : 'none'\n      if (\n        element instanceof HTMLElement &&\n        element.style.display !== displayValue\n      ) {\n        element.style.display = displayValue\n      }\n    }\n  }\n\n  const handleTransformUpdate = useThrottleFn(() => updateVisibility, 100, true)\n\n  return { handleTransformUpdate }\n}\n\nexport const useViewportCulling = createSharedComposable(\n  useViewportCullingIndividual\n)\n","import type { INodeInputSlot, LGraphNode } from '@/lib/litegraph/src/litegraph'\nimport type { IComboWidget } from '@/lib/litegraph/src/types/widgets'\n\n/**\n * Function that calculates dynamic pricing based on node widget values\n */\ntype PricingFunction = (node: LGraphNode) => string\n\n/**\n * Safely executes a pricing function with error handling\n * Returns null if the function throws an error, allowing the node to still render\n */\nfunction safePricingExecution(\n  fn: PricingFunction,\n  node: LGraphNode,\n  fallback: string = ''\n): string {\n  try {\n    return fn(node)\n  } catch (error) {\n    // Log error in development but don't throw to avoid breaking node rendering\n    if (process.env.NODE_ENV === 'development') {\n      console.warn(\n        'Pricing calculation failed for node:',\n        node.constructor?.nodeData?.name,\n        error\n      )\n    }\n    return fallback\n  }\n}\n\n/**\n * Helper function to calculate Runway duration-based pricing\n * @param node - The LiteGraph node\n * @returns Formatted price string\n */\nconst calculateRunwayDurationPrice = (node: LGraphNode): string => {\n  const durationWidget = node.widgets?.find(\n    (w) => w.name === 'duration'\n  ) as IComboWidget\n\n  if (!durationWidget) return '$0.05/second'\n\n  const duration = Number(durationWidget.value)\n  // If duration is 0 or NaN, don't fall back to 5 seconds - just use 0\n  const validDuration = isNaN(duration) ? 5 : duration\n  const cost = (0.05 * validDuration).toFixed(2)\n  return `$${cost}/Run`\n}\n\nconst pixversePricingCalculator = (node: LGraphNode): string => {\n  const durationWidget = node.widgets?.find(\n    (w) => w.name === 'duration_seconds'\n  ) as IComboWidget\n  const qualityWidget = node.widgets?.find(\n    (w) => w.name === 'quality'\n  ) as IComboWidget\n  const motionModeWidget = node.widgets?.find(\n    (w) => w.name === 'motion_mode'\n  ) as IComboWidget\n\n  if (!durationWidget || !qualityWidget) {\n    return '$0.45-1.2/Run (varies with duration, quality & motion mode)'\n  }\n\n  const duration = String(durationWidget.value)\n  const quality = String(qualityWidget.value)\n  const motionMode = String(motionModeWidget?.value)\n\n  // Basic pricing based on duration and quality\n  if (duration.includes('5')) {\n    if (quality.includes('1080p')) return '$1.2/Run'\n    if (quality.includes('720p') && motionMode?.includes('fast'))\n      return '$1.2/Run'\n    if (quality.includes('720p') && motionMode?.includes('normal'))\n      return '$0.6/Run'\n    if (quality.includes('540p') && motionMode?.includes('fast'))\n      return '$0.9/Run'\n    if (quality.includes('540p') && motionMode?.includes('normal'))\n      return '$0.45/Run'\n    if (quality.includes('360p') && motionMode?.includes('fast'))\n      return '$0.9/Run'\n    if (quality.includes('360p') && motionMode?.includes('normal'))\n      return '$0.45/Run'\n    if (quality.includes('720p') && motionMode?.includes('fast'))\n      return '$1.2/Run'\n  } else if (duration.includes('8')) {\n    if (quality.includes('720p') && motionMode?.includes('normal'))\n      return '$1.2/Run'\n    if (quality.includes('540p') && motionMode?.includes('normal'))\n      return '$0.9/Run'\n    if (quality.includes('540p') && motionMode?.includes('fast'))\n      return '$1.2/Run'\n    if (quality.includes('360p') && motionMode?.includes('normal'))\n      return '$0.9/Run'\n    if (quality.includes('360p') && motionMode?.includes('fast'))\n      return '$1.2/Run'\n    if (quality.includes('1080p') && motionMode?.includes('normal'))\n      return '$1.2/Run'\n    if (quality.includes('1080p') && motionMode?.includes('fast'))\n      return '$1.2/Run'\n    if (quality.includes('720p') && motionMode?.includes('normal'))\n      return '$1.2/Run'\n    if (quality.includes('720p') && motionMode?.includes('fast'))\n      return '$1.2/Run'\n  }\n\n  return '$0.9/Run'\n}\n\nconst byteDanceVideoPricingCalculator = (node: LGraphNode): string => {\n  const modelWidget = node.widgets?.find(\n    (w) => w.name === 'model'\n  ) as IComboWidget\n  const durationWidget = node.widgets?.find(\n    (w) => w.name === 'duration'\n  ) as IComboWidget\n  const resolutionWidget = node.widgets?.find(\n    (w) => w.name === 'resolution'\n  ) as IComboWidget\n\n  if (!modelWidget || !durationWidget || !resolutionWidget) return 'Token-based'\n\n  const model = String(modelWidget.value).toLowerCase()\n  const resolution = String(resolutionWidget.value).toLowerCase()\n  const seconds = parseFloat(String(durationWidget.value))\n  const priceByModel: Record<string, Record<string, [number, number]>> = {\n    'seedance-1-0-pro': {\n      '480p': [0.23, 0.24],\n      '720p': [0.51, 0.56],\n      '1080p': [1.18, 1.22]\n    },\n    'seedance-1-0-lite': {\n      '480p': [0.17, 0.18],\n      '720p': [0.37, 0.41],\n      '1080p': [0.85, 0.88]\n    }\n  }\n\n  const modelKey = model.includes('seedance-1-0-pro')\n    ? 'seedance-1-0-pro'\n    : model.includes('seedance-1-0-lite')\n      ? 'seedance-1-0-lite'\n      : ''\n\n  const resKey = resolution.includes('1080')\n    ? '1080p'\n    : resolution.includes('720')\n      ? '720p'\n      : resolution.includes('480')\n        ? '480p'\n        : ''\n\n  const baseRange =\n    modelKey && resKey ? priceByModel[modelKey]?.[resKey] : undefined\n  if (!baseRange) return 'Token-based'\n\n  const [min10s, max10s] = baseRange\n  const scale = seconds / 10\n  const minCost = min10s * scale\n  const maxCost = max10s * scale\n\n  const minStr = `$${minCost.toFixed(2)}/Run`\n  const maxStr = `$${maxCost.toFixed(2)}/Run`\n\n  return minStr === maxStr\n    ? minStr\n    : `$${minCost.toFixed(2)}-$${maxCost.toFixed(2)}/Run`\n}\n\n/**\n * Static pricing data for API nodes, now supporting both strings and functions\n */\nconst apiNodeCosts: Record<string, { displayPrice: string | PricingFunction }> =\n  {\n    FluxProCannyNode: {\n      displayPrice: '$0.05/Run'\n    },\n    FluxProDepthNode: {\n      displayPrice: '$0.05/Run'\n    },\n    FluxProExpandNode: {\n      displayPrice: '$0.05/Run'\n    },\n    FluxProFillNode: {\n      displayPrice: '$0.05/Run'\n    },\n    FluxProUltraImageNode: {\n      displayPrice: '$0.06/Run'\n    },\n    FluxProKontextProNode: {\n      displayPrice: '$0.04/Run'\n    },\n    FluxProKontextMaxNode: {\n      displayPrice: '$0.08/Run'\n    },\n    IdeogramV1: {\n      displayPrice: (node: LGraphNode): string => {\n        const numImagesWidget = node.widgets?.find(\n          (w) => w.name === 'num_images'\n        ) as IComboWidget\n        const turboWidget = node.widgets?.find(\n          (w) => w.name === 'turbo'\n        ) as IComboWidget\n\n        if (!numImagesWidget) return '$0.02-0.06 x num_images/Run'\n\n        const numImages = Number(numImagesWidget.value) || 1\n        const turbo = String(turboWidget?.value).toLowerCase() === 'true'\n        const basePrice = turbo ? 0.02 : 0.06\n        const cost = (basePrice * numImages).toFixed(2)\n        return `$${cost}/Run`\n      }\n    },\n    IdeogramV2: {\n      displayPrice: (node: LGraphNode): string => {\n        const numImagesWidget = node.widgets?.find(\n          (w) => w.name === 'num_images'\n        ) as IComboWidget\n        const turboWidget = node.widgets?.find(\n          (w) => w.name === 'turbo'\n        ) as IComboWidget\n\n        if (!numImagesWidget) return '$0.05-0.08 x num_images/Run'\n\n        const numImages = Number(numImagesWidget.value) || 1\n        const turbo = String(turboWidget?.value).toLowerCase() === 'true'\n        const basePrice = turbo ? 0.05 : 0.08\n        const cost = (basePrice * numImages).toFixed(2)\n        return `$${cost}/Run`\n      }\n    },\n    IdeogramV3: {\n      displayPrice: (node: LGraphNode): string => {\n        const renderingSpeedWidget = node.widgets?.find(\n          (w) => w.name === 'rendering_speed'\n        ) as IComboWidget\n        const numImagesWidget = node.widgets?.find(\n          (w) => w.name === 'num_images'\n        ) as IComboWidget\n        const characterInput = node.inputs?.find(\n          (i) => i.name === 'character_image'\n        ) as INodeInputSlot\n        const hasCharacter =\n          typeof characterInput?.link !== 'undefined' &&\n          characterInput.link != null\n\n        if (!renderingSpeedWidget)\n          return '$0.03-0.08 x num_images/Run (varies with rendering speed & num_images)'\n\n        const numImages = Number(numImagesWidget?.value) || 1\n        let basePrice = 0.06 // default balanced price\n\n        const renderingSpeed = String(renderingSpeedWidget.value)\n        if (renderingSpeed.toLowerCase().includes('quality')) {\n          if (hasCharacter) {\n            basePrice = 0.2\n          } else {\n            basePrice = 0.09\n          }\n        } else if (renderingSpeed.toLowerCase().includes('default')) {\n          if (hasCharacter) {\n            basePrice = 0.15\n          } else {\n            basePrice = 0.06\n          }\n        } else if (renderingSpeed.toLowerCase().includes('turbo')) {\n          if (hasCharacter) {\n            basePrice = 0.1\n          } else {\n            basePrice = 0.03\n          }\n        }\n\n        const totalCost = (basePrice * numImages).toFixed(2)\n        return `$${totalCost}/Run`\n      }\n    },\n    KlingCameraControlI2VNode: {\n      displayPrice: '$0.49/Run'\n    },\n    KlingCameraControlT2VNode: {\n      displayPrice: '$0.14/Run'\n    },\n    KlingDualCharacterVideoEffectNode: {\n      displayPrice: (node: LGraphNode): string => {\n        const modeWidget = node.widgets?.find(\n          (w) => w.name === 'mode'\n        ) as IComboWidget\n        const modelWidget = node.widgets?.find(\n          (w) => w.name === 'model_name'\n        ) as IComboWidget\n        const durationWidget = node.widgets?.find(\n          (w) => w.name === 'duration'\n        ) as IComboWidget\n        if (!modeWidget || !modelWidget || !durationWidget)\n          return '$0.14-2.80/Run (varies with model, mode & duration)'\n\n        const modeValue = String(modeWidget.value)\n        const durationValue = String(durationWidget.value)\n        const modelValue = String(modelWidget.value)\n        console.log('modelValue', modelValue)\n        console.log('modeValue', modeValue)\n        console.log('durationValue', durationValue)\n\n        // Same pricing matrix as KlingTextToVideoNode\n        if (modelValue.includes('v1-6') || modelValue.includes('v1-5')) {\n          if (modeValue.includes('pro')) {\n            return durationValue.includes('10') ? '$0.98/Run' : '$0.49/Run'\n          } else {\n            return durationValue.includes('10') ? '$0.56/Run' : '$0.28/Run'\n          }\n        } else if (modelValue.includes('v1')) {\n          if (modeValue.includes('pro')) {\n            return durationValue.includes('10') ? '$0.98/Run' : '$0.49/Run'\n          } else {\n            return durationValue.includes('10') ? '$0.28/Run' : '$0.14/Run'\n          }\n        }\n\n        return '$0.14/Run'\n      }\n    },\n    KlingImage2VideoNode: {\n      displayPrice: (node: LGraphNode): string => {\n        const modeWidget = node.widgets?.find(\n          (w) => w.name === 'mode'\n        ) as IComboWidget\n        const modelWidget = node.widgets?.find(\n          (w) => w.name === 'model_name'\n        ) as IComboWidget\n        const durationWidget = node.widgets?.find(\n          (w) => w.name === 'duration'\n        ) as IComboWidget\n\n        if (!modeWidget) {\n          if (!modelWidget)\n            return '$0.14-2.80/Run (varies with model, mode & duration)'\n\n          const modelValue = String(modelWidget.value)\n          if (\n            modelValue.includes('v2-1-master') ||\n            modelValue.includes('v2-master')\n          ) {\n            return '$1.40/Run'\n          } else if (\n            modelValue.includes('v1-6') ||\n            modelValue.includes('v1-5')\n          ) {\n            return '$0.28/Run'\n          }\n          return '$0.14/Run'\n        }\n\n        const modeValue = String(modeWidget.value)\n        const durationValue = String(durationWidget.value)\n        const modelValue = String(modelWidget.value)\n        console.log('modelValue', modelValue)\n        console.log('modeValue', modeValue)\n        console.log('durationValue', durationValue)\n\n        // Same pricing matrix as KlingTextToVideoNode\n        if (\n          modelValue.includes('v2-1-master') ||\n          modelValue.includes('v2-master')\n        ) {\n          if (durationValue.includes('10')) {\n            return '$2.80/Run'\n          }\n          return '$1.40/Run' // 5s default\n        } else if (\n          modelValue.includes('v2-1') ||\n          modelValue.includes('v1-6') ||\n          modelValue.includes('v1-5')\n        ) {\n          if (modeValue.includes('pro')) {\n            return durationValue.includes('10') ? '$0.98/Run' : '$0.49/Run'\n          } else {\n            return durationValue.includes('10') ? '$0.56/Run' : '$0.28/Run'\n          }\n        } else if (modelValue.includes('v1')) {\n          if (modeValue.includes('pro')) {\n            return durationValue.includes('10') ? '$0.98/Run' : '$0.49/Run'\n          } else {\n            return durationValue.includes('10') ? '$0.28/Run' : '$0.14/Run'\n          }\n        }\n\n        return '$0.14/Run'\n      }\n    },\n    KlingImageGenerationNode: {\n      displayPrice: (node: LGraphNode): string => {\n        const imageInputWidget = node.inputs?.find((i) => i.name === 'image')\n        // If link is not null => image is connected => modality is image to image\n        const modality = imageInputWidget?.link\n          ? 'image to image'\n          : 'text to image'\n        const modelWidget = node.widgets?.find(\n          (w) => w.name === 'model_name'\n        ) as IComboWidget\n        const nWidget = node.widgets?.find(\n          (w) => w.name === 'n'\n        ) as IComboWidget\n\n        if (!modelWidget)\n          return '$0.0035-0.028 x n/Run (varies with modality & model)'\n\n        const model = String(modelWidget.value)\n        const n = Number(nWidget?.value) || 1\n        let basePrice = 0.014 // default\n\n        if (modality.includes('text to image')) {\n          if (model.includes('kling-v1-5') || model.includes('kling-v2')) {\n            basePrice = 0.014\n          } else if (model.includes('kling-v1')) {\n            basePrice = 0.0035\n          }\n        } else if (modality.includes('image to image')) {\n          if (model.includes('kling-v1-5')) {\n            basePrice = 0.028\n          } else if (model.includes('kling-v1')) {\n            basePrice = 0.0035\n          }\n        }\n\n        const totalCost = (basePrice * n).toFixed(4)\n        return `$${totalCost}/Run`\n      }\n    },\n    KlingLipSyncAudioToVideoNode: {\n      displayPrice: '~$0.10/Run'\n    },\n    KlingLipSyncTextToVideoNode: {\n      displayPrice: '~$0.10/Run'\n    },\n    KlingSingleImageVideoEffectNode: {\n      displayPrice: (node: LGraphNode): string => {\n        const effectSceneWidget = node.widgets?.find(\n          (w) => w.name === 'effect_scene'\n        ) as IComboWidget\n\n        if (!effectSceneWidget)\n          return '$0.28-0.49/Run (varies with effect scene)'\n\n        const effectScene = String(effectSceneWidget.value)\n        if (\n          effectScene.includes('fuzzyfuzzy') ||\n          effectScene.includes('squish')\n        ) {\n          return '$0.28/Run'\n        } else if (effectScene.includes('dizzydizzy')) {\n          return '$0.49/Run'\n        } else if (effectScene.includes('bloombloom')) {\n          return '$0.49/Run'\n        } else if (effectScene.includes('expansion')) {\n          return '$0.28/Run'\n        }\n\n        return '$0.28/Run'\n      }\n    },\n    KlingStartEndFrameNode: {\n      displayPrice: (node: LGraphNode): string => {\n        // Same pricing as KlingTextToVideoNode per CSV (\"Same as text to video\")\n        const modeWidget = node.widgets?.find(\n          (w) => w.name === 'mode'\n        ) as IComboWidget\n        if (!modeWidget)\n          return '$0.14-2.80/Run (varies with model, mode & duration)'\n\n        const modeValue = String(modeWidget.value)\n\n        // Same pricing matrix as KlingTextToVideoNode\n        if (modeValue.includes('v2-1')) {\n          if (modeValue.includes('10s')) {\n            return '$0.98/Run' // pro, 10s\n          }\n          return '$0.49/Run' // pro, 5s default\n        } else if (modeValue.includes('v2-master')) {\n          if (modeValue.includes('10s')) {\n            return '$2.80/Run'\n          }\n          return '$1.40/Run' // 5s default\n        } else if (modeValue.includes('v1-6')) {\n          if (modeValue.includes('pro')) {\n            return modeValue.includes('10s') ? '$0.98/Run' : '$0.49/Run'\n          } else {\n            return modeValue.includes('10s') ? '$0.56/Run' : '$0.28/Run'\n          }\n        } else if (modeValue.includes('v1')) {\n          if (modeValue.includes('pro')) {\n            return modeValue.includes('10s') ? '$0.98/Run' : '$0.49/Run'\n          } else {\n            return modeValue.includes('10s') ? '$0.28/Run' : '$0.14/Run'\n          }\n        }\n\n        return '$0.14/Run'\n      }\n    },\n    KlingTextToVideoNode: {\n      displayPrice: (node: LGraphNode): string => {\n        const modeWidget = node.widgets?.find(\n          (w) => w.name === 'mode'\n        ) as IComboWidget\n        if (!modeWidget)\n          return '$0.14-2.80/Run (varies with model, mode & duration)'\n\n        const modeValue = String(modeWidget.value)\n\n        // Pricing matrix from CSV data based on mode string content\n        if (modeValue.includes('v2-1-master')) {\n          if (modeValue.includes('10s')) {\n            return '$2.80/Run' // price is the same as for v2-master model\n          }\n          return '$1.40/Run' // price is the same as for v2-master model\n        } else if (modeValue.includes('v2-master')) {\n          if (modeValue.includes('10s')) {\n            return '$2.80/Run'\n          }\n          return '$1.40/Run' // 5s default\n        } else if (modeValue.includes('v1-6')) {\n          if (modeValue.includes('pro')) {\n            return modeValue.includes('10s') ? '$0.98/Run' : '$0.49/Run'\n          } else {\n            return modeValue.includes('10s') ? '$0.56/Run' : '$0.28/Run'\n          }\n        } else if (modeValue.includes('v1')) {\n          if (modeValue.includes('pro')) {\n            return modeValue.includes('10s') ? '$0.98/Run' : '$0.49/Run'\n          } else {\n            return modeValue.includes('10s') ? '$0.28/Run' : '$0.14/Run'\n          }\n        }\n\n        return '$0.14/Run'\n      }\n    },\n    KlingVideoExtendNode: {\n      displayPrice: '$0.28/Run'\n    },\n    KlingVirtualTryOnNode: {\n      displayPrice: '$0.07/Run'\n    },\n    LumaImageToVideoNode: {\n      displayPrice: (node: LGraphNode): string => {\n        // Same pricing as LumaVideoNode per CSV\n        const modelWidget = node.widgets?.find(\n          (w) => w.name === 'model'\n        ) as IComboWidget\n        const resolutionWidget = node.widgets?.find(\n          (w) => w.name === 'resolution'\n        ) as IComboWidget\n        const durationWidget = node.widgets?.find(\n          (w) => w.name === 'duration'\n        ) as IComboWidget\n\n        if (!modelWidget || !resolutionWidget || !durationWidget) {\n          return '$0.14-11.47/Run (varies with model, resolution & duration)'\n        }\n\n        const model = String(modelWidget.value)\n        const resolution = String(resolutionWidget.value).toLowerCase()\n        const duration = String(durationWidget.value)\n        console.log('model', model)\n        console.log('resolution', resolution)\n        console.log('duration', duration)\n\n        if (model.includes('ray-flash-2')) {\n          if (duration.includes('5s')) {\n            if (resolution.includes('4k')) return '$2.19/Run'\n            if (resolution.includes('1080p')) return '$0.55/Run'\n            if (resolution.includes('720p')) return '$0.24/Run'\n            if (resolution.includes('540p')) return '$0.14/Run'\n          } else if (duration.includes('9s')) {\n            if (resolution.includes('4k')) return '$3.95/Run'\n            if (resolution.includes('1080p')) return '$0.99/Run'\n            if (resolution.includes('720p')) return '$0.43/Run'\n            if (resolution.includes('540p')) return '$0.252/Run'\n          }\n        } else if (model.includes('ray-2')) {\n          if (duration.includes('5s')) {\n            if (resolution.includes('4k')) return '$6.37/Run'\n            if (resolution.includes('1080p')) return '$1.59/Run'\n            if (resolution.includes('720p')) return '$0.71/Run'\n            if (resolution.includes('540p')) return '$0.40/Run'\n          } else if (duration.includes('9s')) {\n            if (resolution.includes('4k')) return '$11.47/Run'\n            if (resolution.includes('1080p')) return '$2.87/Run'\n            if (resolution.includes('720p')) return '$1.28/Run'\n            if (resolution.includes('540p')) return '$0.72/Run'\n          }\n        } else if (model.includes('ray-1.6')) {\n          return '$0.35/Run'\n        }\n\n        return '$0.55/Run'\n      }\n    },\n    LumaVideoNode: {\n      displayPrice: (node: LGraphNode): string => {\n        const modelWidget = node.widgets?.find(\n          (w) => w.name === 'model'\n        ) as IComboWidget\n        const resolutionWidget = node.widgets?.find(\n          (w) => w.name === 'resolution'\n        ) as IComboWidget\n        const durationWidget = node.widgets?.find(\n          (w) => w.name === 'duration'\n        ) as IComboWidget\n\n        if (!modelWidget || !resolutionWidget || !durationWidget) {\n          return '$0.14-11.47/Run (varies with model, resolution & duration)'\n        }\n\n        const model = String(modelWidget.value)\n        const resolution = String(resolutionWidget.value).toLowerCase()\n        const duration = String(durationWidget.value)\n\n        if (model.includes('ray-flash-2')) {\n          if (duration.includes('5s')) {\n            if (resolution.includes('4k')) return '$2.19/Run'\n            if (resolution.includes('1080p')) return '$0.55/Run'\n            if (resolution.includes('720p')) return '$0.24/Run'\n            if (resolution.includes('540p')) return '$0.14/Run'\n          } else if (duration.includes('9s')) {\n            if (resolution.includes('4k')) return '$3.95/Run'\n            if (resolution.includes('1080p')) return '$0.99/Run'\n            if (resolution.includes('720p')) return '$0.43/Run'\n            if (resolution.includes('540p')) return '$0.252/Run'\n          }\n        } else if (model.includes('ray-2')) {\n          if (duration.includes('5s')) {\n            if (resolution.includes('4k')) return '$6.37/Run'\n            if (resolution.includes('1080p')) return '$1.59/Run'\n            if (resolution.includes('720p')) return '$0.71/Run'\n            if (resolution.includes('540p')) return '$0.40/Run'\n          } else if (duration.includes('9s')) {\n            if (resolution.includes('4k')) return '$11.47/Run'\n            if (resolution.includes('1080p')) return '$2.87/Run'\n            if (resolution.includes('720p')) return '$1.28/Run'\n            if (resolution.includes('540p')) return '$0.72/Run'\n          }\n        } else if (model.includes('ray-1-6')) {\n          return '$0.35/Run'\n        }\n\n        return '$0.55/Run'\n      }\n    },\n    MinimaxImageToVideoNode: {\n      displayPrice: '$0.43/Run'\n    },\n    MinimaxTextToVideoNode: {\n      displayPrice: '$0.43/Run'\n    },\n    MinimaxHailuoVideoNode: {\n      displayPrice: (node: LGraphNode): string => {\n        const resolutionWidget = node.widgets?.find(\n          (w) => w.name === 'resolution'\n        ) as IComboWidget\n        const durationWidget = node.widgets?.find(\n          (w) => w.name === 'duration'\n        ) as IComboWidget\n\n        if (!resolutionWidget || !durationWidget) {\n          return '$0.28-0.56/Run (varies with resolution & duration)'\n        }\n\n        const resolution = String(resolutionWidget.value)\n        const duration = String(durationWidget.value)\n\n        if (resolution.includes('768P')) {\n          if (duration.includes('6')) return '$0.28/Run'\n          if (duration.includes('10')) return '$0.56/Run'\n        } else if (resolution.includes('1080P')) {\n          if (duration.includes('6')) return '$0.49/Run'\n        }\n\n        return '$0.43/Run' // default median\n      }\n    },\n    OpenAIDalle2: {\n      displayPrice: (node: LGraphNode): string => {\n        const sizeWidget = node.widgets?.find(\n          (w) => w.name === 'size'\n        ) as IComboWidget\n        const nWidget = node.widgets?.find(\n          (w) => w.name === 'n'\n        ) as IComboWidget\n\n        if (!sizeWidget) return '$0.016-0.02 x n/Run (varies with size & n)'\n\n        const size = String(sizeWidget.value)\n        const n = Number(nWidget?.value) || 1\n        let basePrice = 0.02 // default\n\n        if (size.includes('1024x1024')) {\n          basePrice = 0.02\n        } else if (size.includes('512x512')) {\n          basePrice = 0.018\n        } else if (size.includes('256x256')) {\n          basePrice = 0.016\n        }\n\n        const totalCost = (basePrice * n).toFixed(3)\n        return `$${totalCost}/Run`\n      }\n    },\n    OpenAIDalle3: {\n      displayPrice: (node: LGraphNode): string => {\n        // Get size and quality widgets\n        const sizeWidget = node.widgets?.find(\n          (w) => w.name === 'size'\n        ) as IComboWidget\n        const qualityWidget = node.widgets?.find(\n          (w) => w.name === 'quality'\n        ) as IComboWidget\n\n        if (!sizeWidget || !qualityWidget)\n          return '$0.04-0.12/Run (varies with size & quality)'\n\n        const size = String(sizeWidget.value)\n        const quality = String(qualityWidget.value)\n\n        // Pricing matrix based on CSV data\n        if (size.includes('1024x1024')) {\n          return quality.includes('hd') ? '$0.08/Run' : '$0.04/Run'\n        } else if (size.includes('1792x1024') || size.includes('1024x1792')) {\n          return quality.includes('hd') ? '$0.12/Run' : '$0.08/Run'\n        }\n\n        // Default value\n        return '$0.04/Run'\n      }\n    },\n    OpenAIGPTImage1: {\n      displayPrice: (node: LGraphNode): string => {\n        const qualityWidget = node.widgets?.find(\n          (w) => w.name === 'quality'\n        ) as IComboWidget\n        const nWidget = node.widgets?.find(\n          (w) => w.name === 'n'\n        ) as IComboWidget\n\n        if (!qualityWidget)\n          return '$0.011-0.30 x n/Run (varies with quality & n)'\n\n        const quality = String(qualityWidget.value)\n        const n = Number(nWidget?.value) || 1\n        let basePriceRange = '$0.046-0.07' // default medium\n\n        if (quality.includes('high')) {\n          basePriceRange = '$0.167-0.30'\n        } else if (quality.includes('medium')) {\n          basePriceRange = '$0.046-0.07'\n        } else if (quality.includes('low')) {\n          basePriceRange = '$0.011-0.02'\n        }\n\n        if (n === 1) {\n          return `${basePriceRange}/Run`\n        } else {\n          return `${basePriceRange} x ${n}/Run`\n        }\n      }\n    },\n    PikaImageToVideoNode2_2: {\n      displayPrice: (node: LGraphNode): string => {\n        const durationWidget = node.widgets?.find(\n          (w) => w.name === 'duration'\n        ) as IComboWidget\n        const resolutionWidget = node.widgets?.find(\n          (w) => w.name === 'resolution'\n        ) as IComboWidget\n\n        if (!durationWidget || !resolutionWidget) {\n          return '$0.2-1.0/Run (varies with duration & resolution)'\n        }\n\n        const duration = String(durationWidget.value)\n        const resolution = String(resolutionWidget.value)\n\n        if (duration.includes('5')) {\n          if (resolution.includes('1080p')) return '$0.45/Run'\n          if (resolution.includes('720p')) return '$0.2/Run'\n        } else if (duration.includes('10')) {\n          if (resolution.includes('1080p')) return '$1.0/Run'\n          if (resolution.includes('720p')) return '$0.6/Run'\n        }\n\n        return '$0.2/Run'\n      }\n    },\n    PikaScenesV2_2: {\n      displayPrice: (node: LGraphNode): string => {\n        const durationWidget = node.widgets?.find(\n          (w) => w.name === 'duration'\n        ) as IComboWidget\n        const resolutionWidget = node.widgets?.find(\n          (w) => w.name === 'resolution'\n        ) as IComboWidget\n\n        if (!durationWidget || !resolutionWidget) {\n          return '$0.2-1.0/Run (varies with duration & resolution)'\n        }\n\n        const duration = String(durationWidget.value)\n        const resolution = String(resolutionWidget.value)\n\n        if (duration.includes('5')) {\n          if (resolution.includes('720p')) return '$0.3/Run'\n          if (resolution.includes('1080p')) return '$0.5/Run'\n        } else if (duration.includes('10')) {\n          if (resolution.includes('720p')) return '$0.4/Run'\n          if (resolution.includes('1080p')) return '$1.5/Run'\n        }\n\n        return '$0.3/Run'\n      }\n    },\n    PikaStartEndFrameNode2_2: {\n      displayPrice: (node: LGraphNode): string => {\n        const durationWidget = node.widgets?.find(\n          (w) => w.name === 'duration'\n        ) as IComboWidget\n        const resolutionWidget = node.widgets?.find(\n          (w) => w.name === 'resolution'\n        ) as IComboWidget\n\n        if (!durationWidget || !resolutionWidget) {\n          return '$0.2-1.0/Run (varies with duration & resolution)'\n        }\n\n        const duration = String(durationWidget.value)\n        const resolution = String(resolutionWidget.value)\n\n        if (duration.includes('5')) {\n          if (resolution.includes('720p')) return '$0.2/Run'\n          if (resolution.includes('1080p')) return '$0.3/Run'\n        } else if (duration.includes('10')) {\n          if (resolution.includes('720p')) return '$0.25/Run'\n          if (resolution.includes('1080p')) return '$1.0/Run'\n        }\n\n        return '$0.2/Run'\n      }\n    },\n    PikaTextToVideoNode2_2: {\n      displayPrice: (node: LGraphNode): string => {\n        const durationWidget = node.widgets?.find(\n          (w) => w.name === 'duration'\n        ) as IComboWidget\n        const resolutionWidget = node.widgets?.find(\n          (w) => w.name === 'resolution'\n        ) as IComboWidget\n\n        if (!durationWidget || !resolutionWidget) {\n          return '$0.2-1.5/Run (varies with duration & resolution)'\n        }\n\n        const duration = String(durationWidget.value)\n        const resolution = String(resolutionWidget.value)\n\n        if (duration.includes('5')) {\n          if (resolution.includes('1080p')) return '$0.45/Run'\n          if (resolution.includes('720p')) return '$0.2/Run'\n        } else if (duration.includes('10')) {\n          if (resolution.includes('1080p')) return '$1.0/Run'\n          if (resolution.includes('720p')) return '$0.6/Run'\n        }\n\n        return '$0.45/Run'\n      }\n    },\n    Pikadditions: {\n      displayPrice: '$0.3/Run'\n    },\n    Pikaffects: {\n      displayPrice: '$0.45/Run'\n    },\n    Pikaswaps: {\n      displayPrice: '$0.3/Run'\n    },\n    PixverseImageToVideoNode: {\n      displayPrice: pixversePricingCalculator\n    },\n    PixverseTextToVideoNode: {\n      displayPrice: pixversePricingCalculator\n    },\n    PixverseTransitionVideoNode: {\n      displayPrice: pixversePricingCalculator\n    },\n    RecraftCreativeUpscaleNode: {\n      displayPrice: '$0.25/Run'\n    },\n    RecraftCrispUpscaleNode: {\n      displayPrice: '$0.004/Run'\n    },\n    RecraftGenerateColorFromImageNode: {\n      displayPrice: (node: LGraphNode): string => {\n        const nWidget = node.widgets?.find(\n          (w) => w.name === 'n'\n        ) as IComboWidget\n        if (!nWidget) return '$0.04 x n/Run'\n\n        const n = Number(nWidget.value) || 1\n        const cost = (0.04 * n).toFixed(2)\n        return `$${cost}/Run`\n      }\n    },\n    RecraftGenerateImageNode: {\n      displayPrice: (node: LGraphNode): string => {\n        const nWidget = node.widgets?.find(\n          (w) => w.name === 'n'\n        ) as IComboWidget\n        if (!nWidget) return '$0.04 x n/Run'\n\n        const n = Number(nWidget.value) || 1\n        const cost = (0.04 * n).toFixed(2)\n        return `$${cost}/Run`\n      }\n    },\n    RecraftGenerateVectorImageNode: {\n      displayPrice: (node: LGraphNode): string => {\n        const nWidget = node.widgets?.find(\n          (w) => w.name === 'n'\n        ) as IComboWidget\n        if (!nWidget) return '$0.08 x n/Run'\n\n        const n = Number(nWidget.value) || 1\n        const cost = (0.08 * n).toFixed(2)\n        return `$${cost}/Run`\n      }\n    },\n    RecraftImageInpaintingNode: {\n      displayPrice: (node: LGraphNode): string => {\n        const nWidget = node.widgets?.find(\n          (w) => w.name === 'n'\n        ) as IComboWidget\n        if (!nWidget) return '$0.04 x n/Run'\n\n        const n = Number(nWidget.value) || 1\n        const cost = (0.04 * n).toFixed(2)\n        return `$${cost}/Run`\n      }\n    },\n    RecraftImageToImageNode: {\n      displayPrice: (node: LGraphNode): string => {\n        const nWidget = node.widgets?.find(\n          (w) => w.name === 'n'\n        ) as IComboWidget\n        if (!nWidget) return '$0.04 x n/Run'\n\n        const n = Number(nWidget.value) || 1\n        const cost = (0.04 * n).toFixed(2)\n        return `$${cost}/Run`\n      }\n    },\n    RecraftRemoveBackgroundNode: {\n      displayPrice: '$0.01/Run'\n    },\n    RecraftReplaceBackgroundNode: {\n      displayPrice: '$0.04/Run'\n    },\n    RecraftTextToImageNode: {\n      displayPrice: (node: LGraphNode): string => {\n        const nWidget = node.widgets?.find(\n          (w) => w.name === 'n'\n        ) as IComboWidget\n        if (!nWidget) return '$0.04 x n/Run'\n\n        const n = Number(nWidget.value) || 1\n        const cost = (0.04 * n).toFixed(2)\n        return `$${cost}/Run`\n      }\n    },\n    RecraftTextToVectorNode: {\n      displayPrice: (node: LGraphNode): string => {\n        const nWidget = node.widgets?.find(\n          (w) => w.name === 'n'\n        ) as IComboWidget\n        if (!nWidget) return '$0.08 x n/Run'\n\n        const n = Number(nWidget.value) || 1\n        const cost = (0.08 * n).toFixed(2)\n        return `$${cost}/Run`\n      }\n    },\n    RecraftVectorizeImageNode: {\n      displayPrice: (node: LGraphNode): string => {\n        const nWidget = node.widgets?.find(\n          (w) => w.name === 'n'\n        ) as IComboWidget\n        if (!nWidget) return '$0.01 x n/Run'\n\n        const n = Number(nWidget.value) || 1\n        const cost = (0.01 * n).toFixed(2)\n        return `$${cost}/Run`\n      }\n    },\n    StabilityStableImageSD_3_5Node: {\n      displayPrice: (node: LGraphNode): string => {\n        const modelWidget = node.widgets?.find(\n          (w) => w.name === 'model'\n        ) as IComboWidget\n\n        if (!modelWidget) return '$0.035-0.065/Run (varies with model)'\n\n        const model = String(modelWidget.value).toLowerCase()\n        if (model.includes('large')) {\n          return '$0.065/Run'\n        } else if (model.includes('medium')) {\n          return '$0.035/Run'\n        }\n\n        return '$0.035/Run'\n      }\n    },\n    StabilityStableImageUltraNode: {\n      displayPrice: '$0.08/Run'\n    },\n    StabilityUpscaleConservativeNode: {\n      displayPrice: '$0.25/Run'\n    },\n    StabilityUpscaleCreativeNode: {\n      displayPrice: '$0.25/Run'\n    },\n    StabilityUpscaleFastNode: {\n      displayPrice: '$0.01/Run'\n    },\n    StabilityTextToAudio: {\n      displayPrice: '$0.20/Run'\n    },\n    StabilityAudioToAudio: {\n      displayPrice: '$0.20/Run'\n    },\n    StabilityAudioInpaint: {\n      displayPrice: '$0.20/Run'\n    },\n    VeoVideoGenerationNode: {\n      displayPrice: (node: LGraphNode): string => {\n        const durationWidget = node.widgets?.find(\n          (w) => w.name === 'duration_seconds'\n        ) as IComboWidget\n\n        if (!durationWidget) return '$2.50-5.0/Run (varies with duration)'\n\n        const price = 0.5 * Number(durationWidget.value)\n        return `$${price.toFixed(2)}/Run`\n      }\n    },\n    Veo3VideoGenerationNode: {\n      displayPrice: (node: LGraphNode): string => {\n        const modelWidget = node.widgets?.find(\n          (w) => w.name === 'model'\n        ) as IComboWidget\n        const generateAudioWidget = node.widgets?.find(\n          (w) => w.name === 'generate_audio'\n        ) as IComboWidget\n\n        if (!modelWidget || !generateAudioWidget) {\n          return '$0.80-3.20/Run (varies with model & audio generation)'\n        }\n\n        const model = String(modelWidget.value)\n        const generateAudio =\n          String(generateAudioWidget.value).toLowerCase() === 'true'\n\n        if (model.includes('veo-3.0-fast-generate-001')) {\n          return generateAudio ? '$1.20/Run' : '$0.80/Run'\n        } else if (model.includes('veo-3.0-generate-001')) {\n          return generateAudio ? '$3.20/Run' : '$1.60/Run'\n        }\n\n        // Default fallback\n        return '$0.80-3.20/Run'\n      }\n    },\n    LumaImageNode: {\n      displayPrice: (node: LGraphNode): string => {\n        const modelWidget = node.widgets?.find(\n          (w) => w.name === 'model'\n        ) as IComboWidget\n        const aspectRatioWidget = node.widgets?.find(\n          (w) => w.name === 'aspect_ratio'\n        ) as IComboWidget\n\n        if (!modelWidget || !aspectRatioWidget) {\n          return '$0.0045-0.0182/Run (varies with model & aspect ratio)'\n        }\n\n        const model = String(modelWidget.value)\n\n        if (model.includes('photon-flash-1')) {\n          return '$0.0019/Run'\n        } else if (model.includes('photon-1')) {\n          return '$0.0073/Run'\n        }\n\n        return '$0.0172/Run'\n      }\n    },\n    LumaImageModifyNode: {\n      displayPrice: (node: LGraphNode): string => {\n        const modelWidget = node.widgets?.find(\n          (w) => w.name === 'model'\n        ) as IComboWidget\n\n        if (!modelWidget) {\n          return '$0.0019-0.0073/Run (varies with model)'\n        }\n\n        const model = String(modelWidget.value)\n\n        if (model.includes('photon-flash-1')) {\n          return '$0.0019/Run'\n        } else if (model.includes('photon-1')) {\n          return '$0.0073/Run'\n        }\n\n        return '$0.0172/Run'\n      }\n    },\n    MoonvalleyTxt2VideoNode: {\n      displayPrice: (node: LGraphNode): string => {\n        const lengthWidget = node.widgets?.find(\n          (w) => w.name === 'length'\n        ) as IComboWidget\n\n        // If no length widget exists, default to 5s pricing\n        if (!lengthWidget) return '$1.50/Run'\n\n        const length = String(lengthWidget.value)\n        if (length === '5s') {\n          return '$1.50/Run'\n        } else if (length === '10s') {\n          return '$3.00/Run'\n        }\n\n        return '$1.50/Run'\n      }\n    },\n    MoonvalleyImg2VideoNode: {\n      displayPrice: (node: LGraphNode): string => {\n        const lengthWidget = node.widgets?.find(\n          (w) => w.name === 'length'\n        ) as IComboWidget\n\n        // If no length widget exists, default to 5s pricing\n        if (!lengthWidget) return '$1.50/Run'\n\n        const length = String(lengthWidget.value)\n        if (length === '5s') {\n          return '$1.50/Run'\n        } else if (length === '10s') {\n          return '$3.00/Run'\n        }\n\n        return '$1.50/Run'\n      }\n    },\n    MoonvalleyVideo2VideoNode: {\n      displayPrice: (node: LGraphNode): string => {\n        const lengthWidget = node.widgets?.find(\n          (w) => w.name === 'length'\n        ) as IComboWidget\n\n        // If no length widget exists, default to 5s pricing\n        if (!lengthWidget) return '$2.25/Run'\n\n        const length = String(lengthWidget.value)\n        if (length === '5s') {\n          return '$2.25/Run'\n        } else if (length === '10s') {\n          return '$4.00/Run'\n        }\n\n        return '$2.25/Run'\n      }\n    },\n    // Runway nodes - using actual node names from ComfyUI\n    RunwayTextToImageNode: {\n      displayPrice: '$0.08/Run'\n    },\n    RunwayImageToVideoNodeGen3a: {\n      displayPrice: calculateRunwayDurationPrice\n    },\n    RunwayImageToVideoNodeGen4: {\n      displayPrice: calculateRunwayDurationPrice\n    },\n    RunwayFirstLastFrameNode: {\n      displayPrice: calculateRunwayDurationPrice\n    },\n    // Rodin nodes - all have the same pricing structure\n    Rodin3D_Regular: {\n      displayPrice: '$0.4/Run'\n    },\n    Rodin3D_Detail: {\n      displayPrice: '$0.4/Run'\n    },\n    Rodin3D_Smooth: {\n      displayPrice: '$0.4/Run'\n    },\n    Rodin3D_Sketch: {\n      displayPrice: '$0.4/Run'\n    },\n    // Tripo nodes - using actual node names from ComfyUI\n    TripoTextToModelNode: {\n      displayPrice: (node: LGraphNode): string => {\n        const quadWidget = node.widgets?.find(\n          (w) => w.name === 'quad'\n        ) as IComboWidget\n        const styleWidget = node.widgets?.find(\n          (w) => w.name === 'style'\n        ) as IComboWidget\n        const textureWidget = node.widgets?.find(\n          (w) => w.name === 'texture'\n        ) as IComboWidget\n        const textureQualityWidget = node.widgets?.find(\n          (w) => w.name === 'texture_quality'\n        ) as IComboWidget\n\n        if (!quadWidget || !styleWidget || !textureWidget)\n          return '$0.1-0.4/Run (varies with quad, style, texture & quality)'\n\n        const quad = String(quadWidget.value).toLowerCase() === 'true'\n        const style = String(styleWidget.value).toLowerCase()\n        const texture = String(textureWidget.value).toLowerCase() === 'true'\n        const textureQuality = String(\n          textureQualityWidget?.value || 'standard'\n        ).toLowerCase()\n\n        // Pricing logic based on CSV data\n        if (style.includes('none')) {\n          if (!quad) {\n            if (!texture) return '$0.10/Run'\n            else return '$0.15/Run'\n          } else {\n            if (textureQuality.includes('detailed')) {\n              if (!texture) return '$0.30/Run'\n              else return '$0.35/Run'\n            } else {\n              if (!texture) return '$0.20/Run'\n              else return '$0.25/Run'\n            }\n          }\n        } else {\n          // any style\n          if (!quad) {\n            if (!texture) return '$0.15/Run'\n            else return '$0.20/Run'\n          } else {\n            if (textureQuality.includes('detailed')) {\n              if (!texture) return '$0.35/Run'\n              else return '$0.40/Run'\n            } else {\n              if (!texture) return '$0.25/Run'\n              else return '$0.30/Run'\n            }\n          }\n        }\n      }\n    },\n    TripoImageToModelNode: {\n      displayPrice: (node: LGraphNode): string => {\n        const quadWidget = node.widgets?.find(\n          (w) => w.name === 'quad'\n        ) as IComboWidget\n        const styleWidget = node.widgets?.find(\n          (w) => w.name === 'style'\n        ) as IComboWidget\n        const textureWidget = node.widgets?.find(\n          (w) => w.name === 'texture'\n        ) as IComboWidget\n        const textureQualityWidget = node.widgets?.find(\n          (w) => w.name === 'texture_quality'\n        ) as IComboWidget\n\n        if (!quadWidget || !styleWidget || !textureWidget)\n          return '$0.2-0.5/Run (varies with quad, style, texture & quality)'\n\n        const quad = String(quadWidget.value).toLowerCase() === 'true'\n        const style = String(styleWidget.value).toLowerCase()\n        const texture = String(textureWidget.value).toLowerCase() === 'true'\n        const textureQuality = String(\n          textureQualityWidget?.value || 'standard'\n        ).toLowerCase()\n\n        // Pricing logic based on CSV data for Image to Model\n        if (style.includes('none')) {\n          if (!quad) {\n            if (!texture) return '$0.20/Run'\n            else return '$0.25/Run'\n          } else {\n            if (textureQuality.includes('detailed')) {\n              if (!texture) return '$0.40/Run'\n              else return '$0.45/Run'\n            } else {\n              if (!texture) return '$0.30/Run'\n              else return '$0.35/Run'\n            }\n          }\n        } else {\n          // any style\n          if (!quad) {\n            if (!texture) return '$0.25/Run'\n            else return '$0.30/Run'\n          } else {\n            if (textureQuality.includes('detailed')) {\n              if (!texture) return '$0.45/Run'\n              else return '$0.50/Run'\n            } else {\n              if (!texture) return '$0.35/Run'\n              else return '$0.40/Run'\n            }\n          }\n        }\n      }\n    },\n    TripoRefineNode: {\n      displayPrice: '$0.3/Run'\n    },\n    TripoTextureNode: {\n      displayPrice: (node: LGraphNode): string => {\n        const textureQualityWidget = node.widgets?.find(\n          (w) => w.name === 'texture_quality'\n        ) as IComboWidget\n\n        if (!textureQualityWidget) return '$0.1-0.2/Run (varies with quality)'\n\n        const textureQuality = String(textureQualityWidget.value)\n        return textureQuality.includes('detailed') ? '$0.2/Run' : '$0.1/Run'\n      }\n    },\n    TripoConvertModelNode: {\n      displayPrice: '$0.10/Run'\n    },\n    TripoRetargetRiggedModelNode: {\n      displayPrice: '$0.10/Run'\n    },\n    TripoMultiviewToModelNode: {\n      displayPrice: (node: LGraphNode): string => {\n        const quadWidget = node.widgets?.find(\n          (w) => w.name === 'quad'\n        ) as IComboWidget\n        const styleWidget = node.widgets?.find(\n          (w) => w.name === 'style'\n        ) as IComboWidget\n        const textureWidget = node.widgets?.find(\n          (w) => w.name === 'texture'\n        ) as IComboWidget\n        const textureQualityWidget = node.widgets?.find(\n          (w) => w.name === 'texture_quality'\n        ) as IComboWidget\n\n        if (!quadWidget || !styleWidget || !textureWidget)\n          return '$0.2-0.5/Run (varies with quad, style, texture & quality)'\n\n        const quad = String(quadWidget.value).toLowerCase() === 'true'\n        const style = String(styleWidget.value).toLowerCase()\n        const texture = String(textureWidget.value).toLowerCase() === 'true'\n        const textureQuality = String(\n          textureQualityWidget?.value || 'standard'\n        ).toLowerCase()\n\n        // Pricing logic based on CSV data for Multiview to Model (same as Image to Model)\n        if (style.includes('none')) {\n          if (!quad) {\n            if (!texture) return '$0.20/Run'\n            else return '$0.25/Run'\n          } else {\n            if (textureQuality.includes('detailed')) {\n              if (!texture) return '$0.40/Run'\n              else return '$0.45/Run'\n            } else {\n              if (!texture) return '$0.30/Run'\n              else return '$0.35/Run'\n            }\n          }\n        } else {\n          // any style\n          if (!quad) {\n            if (!texture) return '$0.25/Run'\n            else return '$0.30/Run'\n          } else {\n            if (textureQuality.includes('detailed')) {\n              if (!texture) return '$0.45/Run'\n              else return '$0.50/Run'\n            } else {\n              if (!texture) return '$0.35/Run'\n              else return '$0.40/Run'\n            }\n          }\n        }\n      }\n    },\n    // Google/Gemini nodes\n    GeminiNode: {\n      displayPrice: (node: LGraphNode): string => {\n        const modelWidget = node.widgets?.find(\n          (w) => w.name === 'model'\n        ) as IComboWidget\n\n        if (!modelWidget) return 'Token-based'\n\n        const model = String(modelWidget.value)\n\n        // Google Veo video generation\n        if (model.includes('veo-2.0')) {\n          return '$0.5/second'\n        } else if (model.includes('gemini-2.5-flash-preview-04-17')) {\n          return '$0.0003/$0.0025 per 1K tokens'\n        } else if (model.includes('gemini-2.5-flash')) {\n          return '$0.0003/$0.0025 per 1K tokens'\n        } else if (model.includes('gemini-2.5-pro-preview-05-06')) {\n          return '$0.00125/$0.01 per 1K tokens'\n        } else if (model.includes('gemini-2.5-pro')) {\n          return '$0.00125/$0.01 per 1K tokens'\n        }\n        // For other Gemini models, show token-based pricing info\n        return 'Token-based'\n      }\n    },\n    GeminiImageNode: {\n      displayPrice: '$0.03 per 1K tokens'\n    },\n    // OpenAI nodes\n    OpenAIChatNode: {\n      displayPrice: (node: LGraphNode): string => {\n        const modelWidget = node.widgets?.find(\n          (w) => w.name === 'model'\n        ) as IComboWidget\n\n        if (!modelWidget) return 'Token-based'\n\n        const model = String(modelWidget.value)\n\n        // Specific pricing for exposed models based on official pricing data (converted to per 1K tokens)\n        if (model.includes('o4-mini')) {\n          return '$0.0011/$0.0044 per 1K tokens'\n        } else if (model.includes('o1-pro')) {\n          return '$0.15/$0.60 per 1K tokens'\n        } else if (model.includes('o1')) {\n          return '$0.015/$0.06 per 1K tokens'\n        } else if (model.includes('o3-mini')) {\n          return '$0.0011/$0.0044 per 1K tokens'\n        } else if (model.includes('o3')) {\n          return '$0.01/$0.04 per 1K tokens'\n        } else if (model.includes('gpt-4o')) {\n          return '$0.0025/$0.01 per 1K tokens'\n        } else if (model.includes('gpt-4.1-nano')) {\n          return '$0.0001/$0.0004 per 1K tokens'\n        } else if (model.includes('gpt-4.1-mini')) {\n          return '$0.0004/$0.0016 per 1K tokens'\n        } else if (model.includes('gpt-4.1')) {\n          return '$0.002/$0.008 per 1K tokens'\n        } else if (model.includes('gpt-5-nano')) {\n          return '$0.00005/$0.0004 per 1K tokens'\n        } else if (model.includes('gpt-5-mini')) {\n          return '$0.00025/$0.002 per 1K tokens'\n        } else if (model.includes('gpt-5')) {\n          return '$0.00125/$0.01 per 1K tokens'\n        }\n        return 'Token-based'\n      }\n    },\n    ViduTextToVideoNode: {\n      displayPrice: '$0.4/Run'\n    },\n    ViduImageToVideoNode: {\n      displayPrice: '$0.4/Run'\n    },\n    ViduReferenceVideoNode: {\n      displayPrice: '$0.4/Run'\n    },\n    ViduStartEndToVideoNode: {\n      displayPrice: '$0.4/Run'\n    },\n    ByteDanceImageNode: {\n      displayPrice: (node: LGraphNode): string => {\n        const modelWidget = node.widgets?.find(\n          (w) => w.name === 'model'\n        ) as IComboWidget\n\n        if (!modelWidget) return 'Token-based'\n\n        const model = String(modelWidget.value)\n\n        if (model.includes('seedream-3-0-t2i')) {\n          return '$0.03/Run'\n        }\n        return 'Token-based'\n      }\n    },\n    ByteDanceImageEditNode: {\n      displayPrice: (node: LGraphNode): string => {\n        const modelWidget = node.widgets?.find(\n          (w) => w.name === 'model'\n        ) as IComboWidget\n\n        if (!modelWidget) return 'Token-based'\n\n        const model = String(modelWidget.value)\n\n        if (model.includes('seededit-3-0-i2i')) {\n          return '$0.03/Run'\n        }\n        return 'Token-based'\n      }\n    },\n    ByteDanceSeedreamNode: {\n      displayPrice: (node: LGraphNode): string => {\n        const sequentialGenerationWidget = node.widgets?.find(\n          (w) => w.name === 'sequential_image_generation'\n        ) as IComboWidget\n        const maxImagesWidget = node.widgets?.find(\n          (w) => w.name === 'max_images'\n        ) as IComboWidget\n\n        if (!sequentialGenerationWidget || !maxImagesWidget)\n          return '$0.03/Run ($0.03 for one output image)'\n\n        if (\n          String(sequentialGenerationWidget.value).toLowerCase() === 'disabled'\n        ) {\n          return '$0.03/Run'\n        }\n\n        const maxImages = Number(maxImagesWidget.value)\n        if (maxImages === 1) {\n          return '$0.03/Run'\n        }\n        const cost = (0.03 * maxImages).toFixed(2)\n        return `$${cost}/Run ($0.03 for one output image)`\n      }\n    },\n    ByteDanceTextToVideoNode: {\n      displayPrice: byteDanceVideoPricingCalculator\n    },\n    ByteDanceImageToVideoNode: {\n      displayPrice: byteDanceVideoPricingCalculator\n    },\n    ByteDanceFirstLastFrameNode: {\n      displayPrice: byteDanceVideoPricingCalculator\n    },\n    ByteDanceImageReferenceNode: {\n      displayPrice: byteDanceVideoPricingCalculator\n    },\n    WanTextToVideoApi: {\n      displayPrice: (node: LGraphNode): string => {\n        const durationWidget = node.widgets?.find(\n          (w) => w.name === 'duration'\n        ) as IComboWidget\n        const resolutionWidget = node.widgets?.find(\n          (w) => w.name === 'size'\n        ) as IComboWidget\n\n        if (!durationWidget || !resolutionWidget) return '$0.05-0.15/second'\n\n        const seconds = parseFloat(String(durationWidget.value))\n        const resolutionStr = String(resolutionWidget.value).toLowerCase()\n\n        const resKey = resolutionStr.includes('1080')\n          ? '1080p'\n          : resolutionStr.includes('720')\n            ? '720p'\n            : resolutionStr.includes('480')\n              ? '480p'\n              : resolutionStr.match(/^\\s*(\\d{3,4}p)/)?.[1] ?? ''\n\n        const pricePerSecond: Record<string, number> = {\n          '480p': 0.05,\n          '720p': 0.1,\n          '1080p': 0.15\n        }\n\n        const pps = pricePerSecond[resKey]\n        if (isNaN(seconds) || !pps) return '$0.05-0.15/second'\n\n        const cost = (pps * seconds).toFixed(2)\n        return `$${cost}/Run`\n      }\n    },\n    WanImageToVideoApi: {\n      displayPrice: (node: LGraphNode): string => {\n        const durationWidget = node.widgets?.find(\n          (w) => w.name === 'duration'\n        ) as IComboWidget\n        const resolutionWidget = node.widgets?.find(\n          (w) => w.name === 'resolution'\n        ) as IComboWidget\n\n        if (!durationWidget || !resolutionWidget) return '$0.05-0.15/second'\n\n        const seconds = parseFloat(String(durationWidget.value))\n        const resolution = String(resolutionWidget.value).trim().toLowerCase()\n\n        const pricePerSecond: Record<string, number> = {\n          '480p': 0.05,\n          '720p': 0.1,\n          '1080p': 0.15\n        }\n\n        const pps = pricePerSecond[resolution]\n        if (isNaN(seconds) || !pps) return '$0.05-0.15/second'\n\n        const cost = (pps * seconds).toFixed(2)\n        return `$${cost}/Run`\n      }\n    },\n    WanTextToImageApi: {\n      displayPrice: '$0.03/Run'\n    },\n    WanImageToImageApi: {\n      displayPrice: '$0.03/Run'\n    }\n  }\n\n/**\n * Composable to get node pricing information for API nodes\n */\nexport const useNodePricing = () => {\n  /**\n   * Get the price display for a node\n   */\n  const getNodeDisplayPrice = (node: LGraphNode): string => {\n    if (!node.constructor?.nodeData?.api_node) return ''\n\n    const nodeName = node.constructor.nodeData.name\n    const priceConfig = apiNodeCosts[nodeName]\n\n    if (!priceConfig) return ''\n\n    // If it's a function, call it with the node to get dynamic pricing\n    if (typeof priceConfig.displayPrice === 'function') {\n      return safePricingExecution(priceConfig.displayPrice, node, '')\n    }\n\n    // Otherwise return the static price\n    return priceConfig.displayPrice\n  }\n\n  const getNodePricingConfig = (node: LGraphNode) =>\n    apiNodeCosts[node.constructor.nodeData?.name ?? '']\n\n  const getRelevantWidgetNames = (nodeType: string): string[] => {\n    const widgetMap: Record<string, string[]> = {\n      KlingTextToVideoNode: ['mode', 'model_name', 'duration'],\n      KlingImage2VideoNode: ['mode', 'model_name', 'duration'],\n      KlingImageGenerationNode: ['modality', 'model_name', 'n'],\n      KlingDualCharacterVideoEffectNode: ['mode', 'model_name', 'duration'],\n      KlingSingleImageVideoEffectNode: ['effect_scene'],\n      KlingStartEndFrameNode: ['mode', 'model_name', 'duration'],\n      MinimaxHailuoVideoNode: ['resolution', 'duration'],\n      OpenAIDalle3: ['size', 'quality'],\n      OpenAIDalle2: ['size', 'n'],\n      OpenAIGPTImage1: ['quality', 'n'],\n      IdeogramV1: ['num_images', 'turbo'],\n      IdeogramV2: ['num_images', 'turbo'],\n      IdeogramV3: ['rendering_speed', 'num_images', 'character_image'],\n      FluxProKontextProNode: [],\n      FluxProKontextMaxNode: [],\n      VeoVideoGenerationNode: ['duration_seconds'],\n      Veo3VideoGenerationNode: ['model', 'generate_audio'],\n      LumaVideoNode: ['model', 'resolution', 'duration'],\n      LumaImageToVideoNode: ['model', 'resolution', 'duration'],\n      LumaImageNode: ['model', 'aspect_ratio'],\n      LumaImageModifyNode: ['model', 'aspect_ratio'],\n      PikaTextToVideoNode2_2: ['duration', 'resolution'],\n      PikaImageToVideoNode2_2: ['duration', 'resolution'],\n      PikaScenesV2_2: ['duration', 'resolution'],\n      PikaStartEndFrameNode2_2: ['duration', 'resolution'],\n      PixverseTextToVideoNode: ['duration_seconds', 'quality', 'motion_mode'],\n      PixverseTransitionVideoNode: [\n        'duration_seconds',\n        'motion_mode',\n        'quality'\n      ],\n      PixverseImageToVideoNode: ['duration_seconds', 'quality', 'motion_mode'],\n      StabilityStableImageSD_3_5Node: ['model'],\n      RecraftTextToImageNode: ['n'],\n      RecraftImageToImageNode: ['n'],\n      RecraftImageInpaintingNode: ['n'],\n      RecraftTextToVectorNode: ['n'],\n      RecraftVectorizeImageNode: ['n'],\n      RecraftGenerateColorFromImageNode: ['n'],\n      RecraftGenerateImageNode: ['n'],\n      RecraftGenerateVectorImageNode: ['n'],\n      MoonvalleyTxt2VideoNode: ['length'],\n      MoonvalleyImg2VideoNode: ['length'],\n      MoonvalleyVideo2VideoNode: ['length'],\n      // Runway nodes\n      RunwayImageToVideoNodeGen3a: ['duration'],\n      RunwayImageToVideoNodeGen4: ['duration'],\n      RunwayFirstLastFrameNode: ['duration'],\n      // Tripo nodes\n      TripoTextToModelNode: ['quad', 'style', 'texture', 'texture_quality'],\n      TripoImageToModelNode: ['quad', 'style', 'texture', 'texture_quality'],\n      TripoTextureNode: ['texture_quality'],\n      // Google/Gemini nodes\n      GeminiNode: ['model'],\n      // OpenAI nodes\n      OpenAIChatNode: ['model'],\n      // ByteDance\n      ByteDanceImageNode: ['model'],\n      ByteDanceImageEditNode: ['model'],\n      ByteDanceSeedreamNode: [\n        'model',\n        'sequential_image_generation',\n        'max_images'\n      ],\n      ByteDanceTextToVideoNode: ['model', 'duration', 'resolution'],\n      ByteDanceImageToVideoNode: ['model', 'duration', 'resolution'],\n      ByteDanceFirstLastFrameNode: ['model', 'duration', 'resolution'],\n      ByteDanceImageReferenceNode: ['model', 'duration', 'resolution'],\n      WanTextToVideoApi: ['duration', 'size'],\n      WanImageToVideoApi: ['duration', 'resolution']\n    }\n    return widgetMap[nodeType] || []\n  }\n\n  return {\n    getNodeDisplayPrice,\n    getNodePricingConfig,\n    getRelevantWidgetNames\n  }\n}\n","import { computedWithControl } from '@vueuse/core'\nimport { type ComputedRef, ref } from 'vue'\n\nimport { useChainCallback } from '@/composables/functional/useChainCallback'\nimport type { LGraphNode } from '@/lib/litegraph/src/litegraph'\n\ninterface UseComputedWithWidgetWatchOptions {\n  /**\n   * Names of widgets to observe for changes.\n   * If not provided, all widgets will be observed.\n   */\n  widgetNames?: string[]\n\n  /**\n   * Whether to trigger a canvas redraw when widget values change.\n   * @default false\n   */\n  triggerCanvasRedraw?: boolean\n}\n\n/**\n * A composable that creates a computed that has a node's widget values as a dependencies.\n * Essentially `computedWithControl` (https://vueuse.org/shared/computedWithControl/) where\n * the explicitly defined extra dependencies are LGraphNode widgets.\n *\n * @param node - The LGraphNode whose widget values are to be watched\n * @param options - Configuration options for the watcher\n * @returns A function to create computed that responds to widget changes\n *\n * @example\n * ```ts\n * const computedWithWidgetWatch = useComputedWithWidgetWatch(node, {\n *   widgetNames: ['width', 'height'],\n *   triggerCanvasRedraw: true\n * })\n *\n * const dynamicPrice = computedWithWidgetWatch(() => {\n *   return calculatePrice(node)\n * })\n * ```\n */\nexport const useComputedWithWidgetWatch = (\n  node: LGraphNode,\n  options: UseComputedWithWidgetWatchOptions = {}\n) => {\n  const { widgetNames, triggerCanvasRedraw = false } = options\n\n  // Create a reactive trigger based on widget values\n  const widgetValues = ref<Record<string, any>>({})\n\n  // Initialize widget observers\n  if (node.widgets) {\n    const widgetsToObserve = widgetNames\n      ? node.widgets.filter((widget) => widgetNames.includes(widget.name))\n      : node.widgets\n\n    // Initialize current values\n    const currentValues: Record<string, any> = {}\n    widgetsToObserve.forEach((widget) => {\n      currentValues[widget.name] = widget.value\n    })\n    widgetValues.value = currentValues\n\n    widgetsToObserve.forEach((widget) => {\n      widget.callback = useChainCallback(widget.callback, () => {\n        // Update the reactive widget values\n        widgetValues.value = {\n          ...widgetValues.value,\n          [widget.name]: widget.value\n        }\n\n        // Optionally trigger a canvas redraw\n        if (triggerCanvasRedraw) {\n          node.graph?.setDirtyCanvas(true, true)\n        }\n      })\n    })\n    if (widgetNames && widgetNames.length > widgetsToObserve.length) {\n      //Inputs have been included\n      const indexesToObserve = widgetNames\n        .map((name) =>\n          widgetsToObserve.some((w) => w.name == name)\n            ? -1\n            : node.inputs.findIndex((i) => i.name == name)\n        )\n        .filter((i) => i >= 0)\n      node.onConnectionsChange = useChainCallback(\n        node.onConnectionsChange,\n        (_type: unknown, index: number, isConnected: boolean) => {\n          if (!indexesToObserve.includes(index)) return\n          widgetValues.value = {\n            ...widgetValues.value,\n            [indexesToObserve[index]]: isConnected\n          }\n          if (triggerCanvasRedraw) {\n            node.graph?.setDirtyCanvas(true, true)\n          }\n        }\n      )\n    }\n  }\n\n  // Returns a function that creates a computed that responds to widget changes.\n  // The computed will be re-evaluated whenever any observed widget changes.\n  return <T>(computeFn: () => T): ComputedRef<T> => {\n    return computedWithControl(widgetValues, computeFn)\n  }\n}\n","import _ from 'es-toolkit/compat'\nimport { computed, onMounted, watch } from 'vue'\n\nimport { useNodePricing } from '@/composables/node/useNodePricing'\nimport { useComputedWithWidgetWatch } from '@/composables/node/useWatchWidget'\nimport {\n  BadgePosition,\n  LGraphBadge,\n  type LGraphNode\n} from '@/lib/litegraph/src/litegraph'\nimport { useSettingStore } from '@/platform/settings/settingStore'\nimport { app } from '@/scripts/app'\nimport { useExtensionStore } from '@/stores/extensionStore'\nimport type { ComfyNodeDefImpl } from '@/stores/nodeDefStore'\nimport { useNodeDefStore } from '@/stores/nodeDefStore'\nimport { useColorPaletteStore } from '@/stores/workspace/colorPaletteStore'\nimport { NodeBadgeMode } from '@/types/nodeSource'\nimport { adjustColor } from '@/utils/colorUtil'\n\n/**\n * Add LGraphBadge to LGraphNode based on settings.\n *\n * Following badges are added:\n * - Node ID badge\n * - Node source badge\n * - Node life cycle badge\n * - API node credits badge\n */\nexport const useNodeBadge = () => {\n  const settingStore = useSettingStore()\n  const extensionStore = useExtensionStore()\n  const colorPaletteStore = useColorPaletteStore()\n\n  const nodeSourceBadgeMode = computed(\n    () =>\n      settingStore.get('Comfy.NodeBadge.NodeSourceBadgeMode') as NodeBadgeMode\n  )\n  const nodeIdBadgeMode = computed(\n    () => settingStore.get('Comfy.NodeBadge.NodeIdBadgeMode') as NodeBadgeMode\n  )\n  const nodeLifeCycleBadgeMode = computed(\n    () =>\n      settingStore.get(\n        'Comfy.NodeBadge.NodeLifeCycleBadgeMode'\n      ) as NodeBadgeMode\n  )\n\n  const showApiPricingBadge = computed(() =>\n    settingStore.get('Comfy.NodeBadge.ShowApiPricing')\n  )\n\n  watch(\n    [\n      nodeSourceBadgeMode,\n      nodeIdBadgeMode,\n      nodeLifeCycleBadgeMode,\n      showApiPricingBadge\n    ],\n    () => {\n      app.graph?.setDirtyCanvas(true, true)\n    }\n  )\n\n  const nodeDefStore = useNodeDefStore()\n  function badgeTextVisible(\n    nodeDef: ComfyNodeDefImpl | null,\n    badgeMode: NodeBadgeMode\n  ): boolean {\n    return !(\n      badgeMode === NodeBadgeMode.None ||\n      (nodeDef?.isCoreNode && badgeMode === NodeBadgeMode.HideBuiltIn)\n    )\n  }\n\n  onMounted(() => {\n    const nodePricing = useNodePricing()\n\n    extensionStore.registerExtension({\n      name: 'Comfy.NodeBadge',\n      nodeCreated(node: LGraphNode) {\n        node.badgePosition = BadgePosition.TopRight\n\n        const badge = computed(() => {\n          const nodeDef = nodeDefStore.fromLGraphNode(node)\n          return new LGraphBadge({\n            text: _.truncate(\n              [\n                badgeTextVisible(nodeDef, nodeIdBadgeMode.value)\n                  ? `#${node.id}`\n                  : '',\n                badgeTextVisible(nodeDef, nodeLifeCycleBadgeMode.value)\n                  ? nodeDef?.nodeLifeCycleBadgeText ?? ''\n                  : '',\n                badgeTextVisible(nodeDef, nodeSourceBadgeMode.value)\n                  ? nodeDef?.nodeSource?.badgeText ?? ''\n                  : ''\n              ]\n                .filter((s) => s.length > 0)\n                .join(' '),\n              {\n                length: 31\n              }\n            ),\n            fgColor:\n              colorPaletteStore.completedActivePalette.colors.litegraph_base\n                .BADGE_FG_COLOR,\n            bgColor:\n              colorPaletteStore.completedActivePalette.colors.litegraph_base\n                .BADGE_BG_COLOR\n          })\n        })\n\n        node.badges.push(() => badge.value)\n\n        if (node.constructor.nodeData?.api_node && showApiPricingBadge.value) {\n          // Get the pricing function to determine if this node has dynamic pricing\n          const pricingConfig = nodePricing.getNodePricingConfig(node)\n          const hasDynamicPricing =\n            typeof pricingConfig?.displayPrice === 'function'\n\n          let creditsBadge\n          const createBadge = () => {\n            const price = nodePricing.getNodeDisplayPrice(node)\n\n            const isLightTheme =\n              colorPaletteStore.completedActivePalette.light_theme\n            return new LGraphBadge({\n              text: price,\n              iconOptions: {\n                unicode: '\\ue96b',\n                fontFamily: 'PrimeIcons',\n                color: isLightTheme\n                  ? adjustColor('#FABC25', { lightness: 0.5 })\n                  : '#FABC25',\n                bgColor: isLightTheme\n                  ? adjustColor('#654020', { lightness: 0.5 })\n                  : '#654020',\n                fontSize: 8\n              },\n              fgColor:\n                colorPaletteStore.completedActivePalette.colors.litegraph_base\n                  .BADGE_FG_COLOR,\n              bgColor: isLightTheme\n                ? adjustColor('#8D6932', { lightness: 0.5 })\n                : '#8D6932'\n            })\n          }\n\n          if (hasDynamicPricing) {\n            // For dynamic pricing nodes, use computed that watches widget changes\n            const relevantWidgetNames = nodePricing.getRelevantWidgetNames(\n              node.constructor.nodeData?.name\n            )\n\n            const computedWithWidgetWatch = useComputedWithWidgetWatch(node, {\n              widgetNames: relevantWidgetNames,\n              triggerCanvasRedraw: true\n            })\n\n            creditsBadge = computedWithWidgetWatch(createBadge)\n          } else {\n            // For static pricing nodes, use regular computed\n            creditsBadge = computed(createBadge)\n          }\n\n          node.badges.push(() => creditsBadge.value)\n        }\n      }\n    })\n  })\n}\n","import type { Ref } from 'vue'\n\nimport { useSharedCanvasPositionConversion } from '@/composables/element/useCanvasPositionConversion'\nimport { usePragmaticDroppable } from '@/composables/usePragmaticDragAndDrop'\nimport type { LGraphNode } from '@/lib/litegraph/src/litegraph'\nimport { LiteGraph } from '@/lib/litegraph/src/litegraph'\nimport { useWorkflowService } from '@/platform/workflow/core/services/workflowService'\nimport { ComfyWorkflow } from '@/platform/workflow/management/stores/workflowStore'\nimport { app as comfyApp } from '@/scripts/app'\nimport { useLitegraphService } from '@/services/litegraphService'\nimport { ComfyModelDef } from '@/stores/modelStore'\nimport type { ModelNodeProvider } from '@/stores/modelToNodeStore'\nimport { useModelToNodeStore } from '@/stores/modelToNodeStore'\nimport { ComfyNodeDefImpl } from '@/stores/nodeDefStore'\nimport type { RenderedTreeExplorerNode } from '@/types/treeExplorerTypes'\n\nexport const useCanvasDrop = (canvasRef: Ref<HTMLCanvasElement | null>) => {\n  const modelToNodeStore = useModelToNodeStore()\n  const litegraphService = useLitegraphService()\n  const workflowService = useWorkflowService()\n\n  usePragmaticDroppable(() => canvasRef.value, {\n    getDropEffect: (args): Exclude<DataTransfer['dropEffect'], 'none'> =>\n      args.source.data.type === 'tree-explorer-node' ? 'copy' : 'move',\n    onDrop: async (event) => {\n      const loc = event.location.current.input\n      const dndData = event.source.data\n\n      if (dndData.type === 'tree-explorer-node') {\n        const node = dndData.data as RenderedTreeExplorerNode\n        const conv = useSharedCanvasPositionConversion()\n        const basePos = conv.clientPosToCanvasPos([loc.clientX, loc.clientY])\n\n        if (node.data instanceof ComfyNodeDefImpl) {\n          const nodeDef = node.data\n          const pos = [...basePos]\n          // Add an offset on y to make sure after adding the node, the cursor\n          // is on the node (top left corner)\n          pos[1] += LiteGraph.NODE_TITLE_HEIGHT\n          litegraphService.addNodeOnGraph(nodeDef, { pos })\n        } else if (node.data instanceof ComfyModelDef) {\n          const model = node.data\n          const pos = basePos\n          const nodeAtPos = comfyApp.graph.getNodeOnPos(pos[0], pos[1])\n          let targetProvider: ModelNodeProvider | null = null\n          let targetGraphNode: LGraphNode | null = null\n          if (nodeAtPos) {\n            const providers = modelToNodeStore.getAllNodeProviders(\n              model.directory\n            )\n            for (const provider of providers) {\n              if (provider.nodeDef.name === nodeAtPos.comfyClass) {\n                targetGraphNode = nodeAtPos\n                targetProvider = provider\n              }\n            }\n          }\n          if (!targetGraphNode) {\n            const provider = modelToNodeStore.getNodeProvider(model.directory)\n            if (provider) {\n              targetGraphNode = litegraphService.addNodeOnGraph(\n                provider.nodeDef,\n                {\n                  pos\n                }\n              )\n              targetProvider = provider\n            }\n          }\n          if (targetGraphNode) {\n            const widget = targetGraphNode.widgets?.find(\n              (widget) => widget.name === targetProvider?.key\n            )\n            if (widget) {\n              widget.value = model.file_name\n            }\n          }\n        } else if (node.data instanceof ComfyWorkflow) {\n          const workflow = node.data\n          await workflowService.insertWorkflow(workflow, { position: basePos })\n        }\n      }\n    }\n  })\n}\n","import { st, te } from '@/i18n'\nimport type {\n  IContextMenuOptions,\n  IContextMenuValue,\n  INodeInputSlot,\n  IWidget\n} from '@/lib/litegraph/src/litegraph'\nimport { LGraphCanvas, LiteGraph } from '@/lib/litegraph/src/litegraph'\nimport { normalizeI18nKey } from '@/utils/formatUtil'\n\n/**\n * Add translation for litegraph context menu.\n */\nexport const useContextMenuTranslation = () => {\n  const f = LGraphCanvas.prototype.getCanvasMenuOptions\n  const getCanvasCenterMenuOptions = function (\n    this: LGraphCanvas,\n    ...args: Parameters<typeof f>\n  ) {\n    const res = f.apply(this, args) as ReturnType<typeof f>\n    for (const item of res) {\n      if (item?.content) {\n        item.content = st(`contextMenu.${item.content}`, item.content)\n      }\n    }\n    return res\n  }\n\n  LGraphCanvas.prototype.getCanvasMenuOptions = getCanvasCenterMenuOptions\n\n  function translateMenus(\n    values: readonly (IContextMenuValue | string | null)[] | undefined,\n    options: IContextMenuOptions\n  ) {\n    if (!values) return\n    const reInput = /Convert (.*) to input/\n    const reWidget = /Convert (.*) to widget/\n    const cvt = st('contextMenu.Convert ', 'Convert ')\n    const tinp = st('contextMenu. to input', ' to input')\n    const twgt = st('contextMenu. to widget', ' to widget')\n    for (const value of values) {\n      if (typeof value === 'string') continue\n\n      translateMenus(value?.submenu?.options, options)\n      if (!value?.content) {\n        continue\n      }\n      if (te(`contextMenu.${value.content}`)) {\n        value.content = st(`contextMenu.${value.content}`, value.content)\n      }\n\n      // for capture translation text of input and widget\n      const extraInfo: any = options.extra || options.parentMenu?.options?.extra\n      // widgets and inputs\n      const matchInput = value.content?.match(reInput)\n      if (matchInput) {\n        let match = matchInput[1]\n        extraInfo?.inputs?.find((i: INodeInputSlot) => {\n          if (i.name != match) return false\n          match = i.label ? i.label : i.name\n        })\n        extraInfo?.widgets?.find((i: IWidget) => {\n          if (i.name != match) return false\n          match = i.label ? i.label : i.name\n        })\n        value.content = cvt + match + tinp\n        continue\n      }\n      const matchWidget = value.content?.match(reWidget)\n      if (matchWidget) {\n        let match = matchWidget[1]\n        extraInfo?.inputs?.find((i: INodeInputSlot) => {\n          if (i.name != match) return false\n          match = i.label ? i.label : i.name\n        })\n        extraInfo?.widgets?.find((i: IWidget) => {\n          if (i.name != match) return false\n          match = i.label ? i.label : i.name\n        })\n        value.content = cvt + match + twgt\n        continue\n      }\n    }\n  }\n\n  const OriginalContextMenu = LiteGraph.ContextMenu\n  function ContextMenu(\n    values: (IContextMenuValue | string)[],\n    options: IContextMenuOptions\n  ) {\n    if (options.title) {\n      options.title = st(\n        `nodeDefs.${normalizeI18nKey(options.title)}.display_name`,\n        options.title\n      )\n    }\n    translateMenus(values, options)\n    const ctx = new OriginalContextMenu(values, options)\n    return ctx\n  }\n\n  LiteGraph.ContextMenu = ContextMenu as unknown as typeof LiteGraph.ContextMenu\n  LiteGraph.ContextMenu.prototype = OriginalContextMenu.prototype\n}\n","import { useEventListener } from '@vueuse/core'\n\nimport { useCanvasStore } from '@/renderer/core/canvas/canvasStore'\n\n/**\n * Adds a handler on copy that serializes selected nodes to JSON\n */\nexport const useCopy = () => {\n  const canvasStore = useCanvasStore()\n\n  useEventListener(document, 'copy', (e) => {\n    if (!(e.target instanceof Element)) {\n      return\n    }\n    if (\n      (e.target instanceof HTMLTextAreaElement &&\n        e.target.type === 'textarea') ||\n      (e.target instanceof HTMLInputElement && e.target.type === 'text')\n    ) {\n      // Default system copy\n      return\n    }\n    const isTargetInGraph =\n      e.target.classList.contains('litegraph') ||\n      e.target.classList.contains('graph-canvas-container') ||\n      e.target.id === 'graph-canvas'\n\n    // copy nodes and clear clipboard\n    const canvas = canvasStore.canvas\n    if (isTargetInGraph && canvas?.selectedItems) {\n      canvas.copyToClipboard()\n      // clearData doesn't remove images from clipboard\n      e.clipboardData?.setData('text', ' ')\n      e.preventDefault()\n      e.stopImmediatePropagation()\n      return false\n    }\n  })\n}\n","import {\n  ContextMenu,\n  DragAndScale,\n  LGraph,\n  LGraphBadge,\n  LGraphCanvas,\n  LGraphGroup,\n  LGraphNode,\n  LLink,\n  LiteGraph\n} from '@/lib/litegraph/src/litegraph'\n\n/**\n * Assign all properties of LiteGraph to window to make it backward compatible.\n */\nexport const useGlobalLitegraph = () => {\n  // @ts-expect-error fixme ts strict error\n  window['LiteGraph'] = LiteGraph\n  // @ts-expect-error fixme ts strict error\n  window['LGraph'] = LGraph\n  // @ts-expect-error fixme ts strict error\n  window['LLink'] = LLink\n  // @ts-expect-error fixme ts strict error\n  window['LGraphNode'] = LGraphNode\n  // @ts-expect-error fixme ts strict error\n  window['LGraphGroup'] = LGraphGroup\n  // @ts-expect-error fixme ts strict error\n  window['DragAndScale'] = DragAndScale\n  // @ts-expect-error fixme ts strict error\n  window['LGraphCanvas'] = LGraphCanvas\n  // @ts-expect-error fixme ts strict error\n  window['ContextMenu'] = ContextMenu\n  // @ts-expect-error fixme ts strict error\n  window['LGraphBadge'] = LGraphBadge\n}\n","import { useEventListener } from '@vueuse/core'\n\nimport { LiteGraph } from '@/lib/litegraph/src/litegraph'\nimport type { LGraphNode } from '@/lib/litegraph/src/litegraph'\nimport type { ComfyWorkflowJSON } from '@/platform/workflow/validation/schemas/workflowSchema'\nimport { useCanvasStore } from '@/renderer/core/canvas/canvasStore'\nimport { app } from '@/scripts/app'\nimport { useWorkspaceStore } from '@/stores/workspaceStore'\nimport { isAudioNode, isImageNode, isVideoNode } from '@/utils/litegraphUtil'\n\n/**\n * Adds a handler on paste that extracts and loads images or workflows from pasted JSON data\n */\nexport const usePaste = () => {\n  const workspaceStore = useWorkspaceStore()\n  const canvasStore = useCanvasStore()\n\n  const pasteItemsOnNode = (\n    items: DataTransferItemList,\n    node: LGraphNode | null,\n    contentType: string\n  ) => {\n    if (!node) return\n\n    const filteredItems = Array.from(items).filter((item) =>\n      item.type.startsWith(contentType)\n    )\n\n    const blob = filteredItems[0]?.getAsFile()\n    if (!blob) return\n\n    node.pasteFile?.(blob)\n    node.pasteFiles?.(\n      Array.from(filteredItems)\n        .map((i) => i.getAsFile())\n        .filter((f) => f !== null)\n    )\n  }\n\n  useEventListener(document, 'paste', async (e) => {\n    const isTargetInGraph =\n      e.target instanceof Element &&\n      (e.target.classList.contains('litegraph') ||\n        e.target.classList.contains('graph-canvas-container') ||\n        e.target.id === 'graph-canvas')\n\n    // If the target is not in the graph, we don't want to handle the paste event\n    if (!isTargetInGraph) return\n\n    // ctrl+shift+v is used to paste nodes with connections\n    // this is handled by litegraph\n    if (workspaceStore.shiftDown) return\n\n    const { canvas } = canvasStore\n    if (!canvas) return\n\n    const { graph } = canvas\n    let data: DataTransfer | string | null = e.clipboardData\n    if (!data) throw new Error('No clipboard data on clipboard event')\n\n    const { items } = data\n\n    const currentNode = canvas.current_node as LGraphNode\n    const isNodeSelected = currentNode?.is_selected\n\n    const isImageNodeSelected = isNodeSelected && isImageNode(currentNode)\n    const isVideoNodeSelected = isNodeSelected && isVideoNode(currentNode)\n    const isAudioNodeSelected = isNodeSelected && isAudioNode(currentNode)\n\n    let imageNode: LGraphNode | null = isImageNodeSelected ? currentNode : null\n    let audioNode: LGraphNode | null = isAudioNodeSelected ? currentNode : null\n    const videoNode: LGraphNode | null = isVideoNodeSelected\n      ? currentNode\n      : null\n\n    // Look for image paste data\n    for (const item of items) {\n      if (item.type.startsWith('image/')) {\n        if (!imageNode) {\n          // No image node selected: add a new one\n          const newNode = LiteGraph.createNode('LoadImage')\n          if (newNode) {\n            newNode.pos = [canvas.graph_mouse[0], canvas.graph_mouse[1]]\n            imageNode = graph?.add(newNode) ?? null\n          }\n          graph?.change()\n        }\n        pasteItemsOnNode(items, imageNode, 'image')\n        return\n      } else if (item.type.startsWith('video/')) {\n        if (!videoNode) {\n          // No video node selected: add a new one\n          // TODO: when video node exists\n        } else {\n          pasteItemsOnNode(items, videoNode, 'video')\n          return\n        }\n      } else if (item.type.startsWith('audio/')) {\n        if (!audioNode) {\n          // No audio node selected: add a new one\n          const newNode = LiteGraph.createNode('LoadAudio')\n          if (newNode) {\n            newNode.pos = [canvas.graph_mouse[0], canvas.graph_mouse[1]]\n            audioNode = graph?.add(newNode) ?? null\n          }\n          graph?.change()\n        }\n        pasteItemsOnNode(items, audioNode, 'audio')\n        return\n      }\n    }\n\n    // No image found. Look for node data\n    data = data.getData('text/plain')\n    let workflow: ComfyWorkflowJSON | null = null\n    try {\n      data = data.slice(data.indexOf('{'))\n      workflow = JSON.parse(data)\n    } catch (err) {\n      try {\n        data = data.slice(data.indexOf('workflow\\n'))\n        data = data.slice(data.indexOf('{'))\n        workflow = JSON.parse(data)\n      } catch (error) {\n        workflow = null\n      }\n    }\n\n    if (workflow && workflow.version && workflow.nodes && workflow.extra) {\n      await app.loadGraphData(workflow)\n    } else {\n      if (\n        (e.target instanceof HTMLTextAreaElement &&\n          e.target.type === 'textarea') ||\n        (e.target instanceof HTMLInputElement && e.target.type === 'text')\n      ) {\n        return\n      }\n\n      // Litegraph default paste\n      canvas.pasteFromClipboard()\n    }\n  })\n}\n","import { watchEffect } from 'vue'\n\nimport {\n  CanvasPointer,\n  LGraphNode,\n  LiteGraph\n} from '@/lib/litegraph/src/litegraph'\nimport { useSettingStore } from '@/platform/settings/settingStore'\nimport { useCanvasStore } from '@/renderer/core/canvas/canvasStore'\n\n/**\n * Watch for changes in the setting store and update the LiteGraph settings accordingly.\n */\nexport const useLitegraphSettings = () => {\n  const settingStore = useSettingStore()\n  const canvasStore = useCanvasStore()\n\n  watchEffect(() => {\n    const canvasInfoEnabled = settingStore.get('Comfy.Graph.CanvasInfo')\n    if (canvasStore.canvas) {\n      canvasStore.canvas.show_info = canvasInfoEnabled\n      canvasStore.canvas.draw(false, true)\n    }\n  })\n\n  watchEffect(() => {\n    const zoomSpeed = settingStore.get('Comfy.Graph.ZoomSpeed')\n    if (canvasStore.canvas) {\n      canvasStore.canvas.zoom_speed = zoomSpeed\n    }\n  })\n\n  watchEffect(() => {\n    LiteGraph.snaps_for_comfy = settingStore.get(\n      'Comfy.Node.AutoSnapLinkToSlot'\n    )\n  })\n\n  watchEffect(() => {\n    LiteGraph.snap_highlights_node = settingStore.get(\n      'Comfy.Node.SnapHighlightsNode'\n    )\n  })\n\n  watchEffect(() => {\n    LGraphNode.keepAllLinksOnBypass = settingStore.get(\n      'Comfy.Node.BypassAllLinksOnDelete'\n    )\n  })\n\n  watchEffect(() => {\n    LiteGraph.middle_click_slot_add_default_node = settingStore.get(\n      'Comfy.Node.MiddleClickRerouteNode'\n    )\n  })\n\n  watchEffect(() => {\n    const linkRenderMode = settingStore.get('Comfy.LinkRenderMode')\n    if (canvasStore.canvas) {\n      canvasStore.canvas.links_render_mode = linkRenderMode\n      canvasStore.canvas.setDirty(/* fg */ false, /* bg */ true)\n    }\n  })\n\n  watchEffect(() => {\n    const minFontSizeForLOD = settingStore.get(\n      'LiteGraph.Canvas.MinFontSizeForLOD'\n    )\n    if (canvasStore.canvas) {\n      canvasStore.canvas.min_font_size_for_lod = minFontSizeForLOD\n      canvasStore.canvas.setDirty(/* fg */ true, /* bg */ true)\n    }\n  })\n\n  watchEffect(() => {\n    const linkMarkerShape = settingStore.get('Comfy.Graph.LinkMarkers')\n    const { canvas } = canvasStore\n    if (canvas) {\n      canvas.linkMarkerShape = linkMarkerShape\n      canvas.setDirty(false, true)\n    }\n  })\n\n  watchEffect(() => {\n    const maximumFps = settingStore.get('LiteGraph.Canvas.MaximumFps')\n    const { canvas } = canvasStore\n    if (canvas) canvas.maximumFps = maximumFps\n  })\n\n  watchEffect(() => {\n    const dragZoomEnabled = settingStore.get('Comfy.Graph.CtrlShiftZoom')\n    const { canvas } = canvasStore\n    if (canvas) canvas.dragZoomEnabled = dragZoomEnabled\n  })\n\n  watchEffect(() => {\n    CanvasPointer.doubleClickTime = settingStore.get(\n      'Comfy.Pointer.DoubleClickTime'\n    )\n  })\n\n  watchEffect(() => {\n    CanvasPointer.bufferTime = settingStore.get('Comfy.Pointer.ClickBufferTime')\n  })\n\n  watchEffect(() => {\n    CanvasPointer.maxClickDrift = settingStore.get('Comfy.Pointer.ClickDrift')\n  })\n\n  watchEffect(() => {\n    LiteGraph.CANVAS_GRID_SIZE = settingStore.get('Comfy.SnapToGrid.GridSize')\n  })\n\n  watchEffect(() => {\n    LiteGraph.alwaysSnapToGrid = settingStore.get('pysssss.SnapToGrid')\n  })\n\n  watchEffect(() => {\n    LiteGraph.context_menu_scaling = settingStore.get(\n      'LiteGraph.ContextMenu.Scaling'\n    )\n  })\n\n  watchEffect(() => {\n    LiteGraph.Reroute.maxSplineOffset = settingStore.get(\n      'LiteGraph.Reroute.SplineOffset'\n    )\n  })\n\n  watchEffect(() => {\n    const navigationMode = settingStore.get('Comfy.Canvas.NavigationMode') as\n      | 'standard'\n      | 'legacy'\n      | 'custom'\n\n    LiteGraph.canvasNavigationMode = navigationMode\n    LiteGraph.macTrackpadGestures = navigationMode === 'standard'\n  })\n\n  watchEffect(() => {\n    const leftMouseBehavior = settingStore.get(\n      'Comfy.Canvas.LeftMouseClickBehavior'\n    ) as 'panning' | 'select'\n    LiteGraph.leftMouseClickBehavior = leftMouseBehavior\n  })\n\n  watchEffect(() => {\n    const mouseWheelScroll = settingStore.get(\n      'Comfy.Canvas.MouseWheelScroll'\n    ) as 'panning' | 'zoom'\n    LiteGraph.mouseWheelScroll = mouseWheelScroll\n  })\n\n  watchEffect(() => {\n    LiteGraph.saveViewportWithGraph = settingStore.get(\n      'Comfy.EnableWorkflowViewRestore'\n    )\n  })\n}\n","import { LinkMarkerShape, LiteGraph } from '@/lib/litegraph/src/litegraph'\nimport { useSettingStore } from '@/platform/settings/settingStore'\nimport type { SettingParams } from '@/platform/settings/types'\nimport type { ColorPalettes } from '@/schemas/colorPaletteSchema'\nimport type { Keybinding } from '@/schemas/keyBindingSchema'\nimport { NodeBadgeMode } from '@/types/nodeSource'\nimport { LinkReleaseTriggerAction } from '@/types/searchBoxTypes'\n\n/**\n * Core settings are essential configuration parameters required for ComfyUI's basic functionality.\n * These settings must be present in the settings store and cannot be omitted.\n *\n * IMPORTANT: To prevent ID conflicts, settings should be marked as deprecated rather than removed\n * when they are no longer needed.\n */\nexport const CORE_SETTINGS: SettingParams[] = [\n  {\n    id: 'Comfy.Memory.AllowManualUnload',\n    name: 'Allow manual unload of models and execution cache via user command',\n    type: 'hidden',\n    defaultValue: true,\n    versionAdded: '1.18.0'\n  },\n  {\n    id: 'Comfy.Validation.Workflows',\n    name: 'Validate workflows',\n    type: 'boolean',\n    defaultValue: true\n  },\n  {\n    id: 'Comfy.NodeSearchBoxImpl',\n    category: ['Comfy', 'Node Search Box', 'Implementation'],\n    experimental: true,\n    name: 'Node search box implementation',\n    type: 'combo',\n    options: ['default', 'litegraph (legacy)'],\n    defaultValue: 'default'\n  },\n  {\n    id: 'Comfy.LinkRelease.Action',\n    category: ['LiteGraph', 'LinkRelease', 'Action'],\n    name: 'Action on link release (No modifier)',\n    type: 'combo',\n    options: Object.values(LinkReleaseTriggerAction),\n    defaultValue: LinkReleaseTriggerAction.CONTEXT_MENU,\n    defaultsByInstallVersion: {\n      '1.24.1': LinkReleaseTriggerAction.SEARCH_BOX\n    }\n  },\n  {\n    id: 'Comfy.LinkRelease.ActionShift',\n    category: ['LiteGraph', 'LinkRelease', 'ActionShift'],\n    name: 'Action on link release (Shift)',\n    type: 'combo',\n    options: Object.values(LinkReleaseTriggerAction),\n    defaultValue: LinkReleaseTriggerAction.SEARCH_BOX,\n    defaultsByInstallVersion: {\n      '1.24.1': LinkReleaseTriggerAction.CONTEXT_MENU\n    }\n  },\n  {\n    id: 'Comfy.NodeSearchBoxImpl.NodePreview',\n    category: ['Comfy', 'Node Search Box', 'NodePreview'],\n    name: 'Node preview',\n    tooltip: 'Only applies to the default implementation',\n    type: 'boolean',\n    defaultValue: true\n  },\n  {\n    id: 'Comfy.NodeSearchBoxImpl.ShowCategory',\n    category: ['Comfy', 'Node Search Box', 'ShowCategory'],\n    name: 'Show node category in search results',\n    tooltip: 'Only applies to the default implementation',\n    type: 'boolean',\n    defaultValue: true\n  },\n  {\n    id: 'Comfy.NodeSearchBoxImpl.ShowIdName',\n    category: ['Comfy', 'Node Search Box', 'ShowIdName'],\n    name: 'Show node id name in search results',\n    tooltip: 'Only applies to the default implementation',\n    type: 'boolean',\n    defaultValue: false\n  },\n  {\n    id: 'Comfy.NodeSearchBoxImpl.ShowNodeFrequency',\n    category: ['Comfy', 'Node Search Box', 'ShowNodeFrequency'],\n    name: 'Show node frequency in search results',\n    tooltip: 'Only applies to the default implementation',\n    type: 'boolean',\n    defaultValue: false\n  },\n  {\n    id: 'Comfy.Sidebar.Location',\n    category: ['Appearance', 'Sidebar', 'Location'],\n    name: 'Sidebar location',\n    type: 'combo',\n    options: ['left', 'right'],\n    defaultValue: 'left'\n  },\n  {\n    id: 'Comfy.Sidebar.Size',\n    category: ['Appearance', 'Sidebar', 'Size'],\n    name: 'Sidebar size',\n    type: 'combo',\n    options: ['normal', 'small'],\n    // Default to small if the window is less than 1536px(2xl) wide.\n    defaultValue: () => (window.innerWidth < 1536 ? 'small' : 'normal')\n  },\n  {\n    id: 'Comfy.Sidebar.UnifiedWidth',\n    category: ['Appearance', 'Sidebar', 'UnifiedWidth'],\n    name: 'Unified sidebar width',\n    type: 'boolean',\n    defaultValue: true,\n    versionAdded: '1.18.1'\n  },\n  {\n    id: 'Comfy.TextareaWidget.FontSize',\n    category: ['Appearance', 'Node Widget', 'TextareaWidget', 'FontSize'],\n    name: 'Textarea widget font size',\n    type: 'slider',\n    defaultValue: 10,\n    attrs: {\n      min: 8,\n      max: 24\n    }\n  },\n  {\n    id: 'Comfy.TextareaWidget.Spellcheck',\n    category: ['Comfy', 'Node Widget', 'TextareaWidget', 'Spellcheck'],\n    name: 'Textarea widget spellcheck',\n    type: 'boolean',\n    defaultValue: false\n  },\n  {\n    id: 'Comfy.Workflow.SortNodeIdOnSave',\n    name: 'Sort node IDs when saving workflow',\n    type: 'boolean',\n    defaultValue: false\n  },\n  {\n    id: 'Comfy.Canvas.NavigationMode',\n    category: ['LiteGraph', 'Canvas Navigation', 'NavigationMode'],\n    name: 'Navigation Mode',\n    defaultValue: 'legacy',\n    type: 'combo',\n    sortOrder: 100,\n    options: [\n      { value: 'standard', text: 'Standard (New)' },\n      { value: 'legacy', text: 'Drag Navigation' },\n      { value: 'custom', text: 'Custom' }\n    ],\n    versionAdded: '1.25.0',\n    defaultsByInstallVersion: {\n      '1.25.0': 'legacy'\n    },\n    onChange: async (newValue: string) => {\n      const settingStore = useSettingStore()\n\n      if (newValue === 'standard') {\n        // Update related settings to match standard mode - select + panning\n        await settingStore.set('Comfy.Canvas.LeftMouseClickBehavior', 'select')\n        await settingStore.set('Comfy.Canvas.MouseWheelScroll', 'panning')\n      } else if (newValue === 'legacy') {\n        // Update related settings to match legacy mode - panning + zoom\n        await settingStore.set('Comfy.Canvas.LeftMouseClickBehavior', 'panning')\n        await settingStore.set('Comfy.Canvas.MouseWheelScroll', 'zoom')\n      }\n    }\n  },\n  {\n    id: 'Comfy.Canvas.LeftMouseClickBehavior',\n    category: ['LiteGraph', 'Canvas Navigation', 'LeftMouseClickBehavior'],\n    name: 'Left Mouse Click Behavior',\n    defaultValue: 'panning',\n    type: 'radio',\n    sortOrder: 50,\n    options: [\n      { value: 'panning', text: 'Panning' },\n      { value: 'select', text: 'Select' }\n    ],\n    versionAdded: '1.27.4',\n    onChange: async (newValue: string) => {\n      const settingStore = useSettingStore()\n\n      const navigationMode = settingStore.get('Comfy.Canvas.NavigationMode')\n\n      if (navigationMode !== 'custom') {\n        if (\n          (newValue === 'select' && navigationMode === 'standard') ||\n          (newValue === 'panning' && navigationMode === 'legacy')\n        ) {\n          return\n        }\n\n        // only set to custom if it doesn't match the preset modes\n        await settingStore.set('Comfy.Canvas.NavigationMode', 'custom')\n      }\n    }\n  },\n  {\n    id: 'Comfy.Canvas.MouseWheelScroll',\n    category: ['LiteGraph', 'Canvas Navigation', 'MouseWheelScroll'],\n    name: 'Mouse Wheel Scroll',\n    defaultValue: 'zoom',\n    type: 'radio',\n    options: [\n      { value: 'panning', text: 'Panning' },\n      { value: 'zoom', text: 'Zoom in/out' }\n    ],\n    versionAdded: '1.27.4',\n    onChange: async (newValue: string) => {\n      const settingStore = useSettingStore()\n\n      const navigationMode = settingStore.get('Comfy.Canvas.NavigationMode')\n\n      if (navigationMode !== 'custom') {\n        if (\n          (newValue === 'panning' && navigationMode === 'standard') ||\n          (newValue === 'zoom' && navigationMode === 'legacy')\n        ) {\n          return\n        }\n\n        // only set to custom if it doesn't match the preset modes\n        await settingStore.set('Comfy.Canvas.NavigationMode', 'custom')\n      }\n    }\n  },\n  {\n    id: 'Comfy.Graph.CanvasInfo',\n    category: ['LiteGraph', 'Canvas', 'CanvasInfo'],\n    name: 'Show canvas info on bottom left corner (fps, etc.)',\n    type: 'boolean',\n    defaultValue: true\n  },\n  {\n    id: 'Comfy.Node.ShowDeprecated',\n    name: 'Show deprecated nodes in search',\n    tooltip:\n      'Deprecated nodes are hidden by default in the UI, but remain functional in existing workflows that use them.',\n    type: 'boolean',\n    defaultValue: false\n  },\n  {\n    id: 'Comfy.Node.ShowExperimental',\n    name: 'Show experimental nodes in search',\n    tooltip:\n      'Experimental nodes are marked as such in the UI and may be subject to significant changes or removal in future versions. Use with caution in production workflows',\n    type: 'boolean',\n    defaultValue: true\n  },\n  {\n    id: 'Comfy.Node.Opacity',\n    category: ['Appearance', 'Node', 'Opacity'],\n    name: 'Node opacity',\n    type: 'slider',\n    defaultValue: 1,\n    attrs: {\n      min: 0.01,\n      max: 1,\n      step: 0.01\n    }\n  },\n  {\n    id: 'Comfy.Workflow.ShowMissingNodesWarning',\n    name: 'Show missing nodes warning',\n    type: 'boolean',\n    defaultValue: true\n  },\n  {\n    id: 'Comfy.Workflow.ShowMissingModelsWarning',\n    name: 'Show missing models warning',\n    type: 'boolean',\n    defaultValue: true,\n    experimental: true\n  },\n  {\n    id: 'Comfy.Workflow.WarnBlueprintOverwrite',\n    name: 'Require confirmation to overwrite an existing subgraph blueprint',\n    type: 'boolean',\n    defaultValue: true\n  },\n  {\n    id: 'Comfy.Graph.ZoomSpeed',\n    category: ['LiteGraph', 'Canvas', 'ZoomSpeed'],\n    name: 'Canvas zoom speed',\n    type: 'slider',\n    defaultValue: 1.1,\n    attrs: {\n      min: 1.01,\n      max: 2.5,\n      step: 0.01\n    }\n  },\n  // Bookmarks are stored in the settings store.\n  // Bookmarks are in format of category/display_name. e.g. \"conditioning/CLIPTextEncode\"\n  {\n    id: 'Comfy.NodeLibrary.Bookmarks',\n    name: 'Node library bookmarks with display name (deprecated)',\n    type: 'hidden',\n    defaultValue: [],\n    deprecated: true\n  },\n  {\n    id: 'Comfy.NodeLibrary.Bookmarks.V2',\n    name: 'Node library bookmarks v2 with unique name',\n    type: 'hidden',\n    defaultValue: []\n  },\n  // Stores mapping from bookmark folder name to its customization.\n  {\n    id: 'Comfy.NodeLibrary.BookmarksCustomization',\n    name: 'Node library bookmarks customization',\n    type: 'hidden',\n    defaultValue: {}\n  },\n  // Hidden setting used by the queue for how to fit images\n  {\n    id: 'Comfy.Queue.ImageFit',\n    name: 'Queue image fit',\n    type: 'hidden',\n    defaultValue: 'cover'\n  },\n  {\n    id: 'Comfy.GroupSelectedNodes.Padding',\n    category: ['LiteGraph', 'Group', 'Padding'],\n    name: 'Group selected nodes padding',\n    type: 'slider',\n    defaultValue: 10,\n    attrs: {\n      min: 0,\n      max: 100\n    }\n  },\n  {\n    id: 'Comfy.Node.DoubleClickTitleToEdit',\n    category: ['LiteGraph', 'Node', 'DoubleClickTitleToEdit'],\n    name: 'Double click node title to edit',\n    type: 'boolean',\n    defaultValue: true\n  },\n  {\n    id: 'Comfy.Node.AllowImageSizeDraw',\n    category: ['LiteGraph', 'Node Widget', 'AllowImageSizeDraw'],\n    name: 'Show width × height below the image preview',\n    type: 'boolean',\n    defaultValue: true\n  },\n  {\n    id: 'Comfy.Group.DoubleClickTitleToEdit',\n    category: ['LiteGraph', 'Group', 'DoubleClickTitleToEdit'],\n    name: 'Double click group title to edit',\n    type: 'boolean',\n    defaultValue: true\n  },\n  {\n    id: 'Comfy.Window.UnloadConfirmation',\n    name: 'Show confirmation when closing window',\n    type: 'boolean',\n    defaultValue: true,\n    versionModified: '1.7.12'\n  },\n  {\n    id: 'Comfy.TreeExplorer.ItemPadding',\n    category: ['Appearance', 'Tree Explorer', 'ItemPadding'],\n    name: 'Tree explorer item padding',\n    type: 'slider',\n    defaultValue: 2,\n    attrs: {\n      min: 0,\n      max: 8,\n      step: 1\n    }\n  },\n  {\n    id: 'Comfy.ModelLibrary.AutoLoadAll',\n    name: 'Automatically load all model folders',\n    tooltip:\n      'If true, all folders will load as soon as you open the model library (this may cause delays while it loads). If false, root level model folders will only load once you click on them.',\n    type: 'boolean',\n    defaultValue: false\n  },\n  {\n    id: 'Comfy.ModelLibrary.NameFormat',\n    name: 'What name to display in the model library tree view',\n    tooltip:\n      'Select \"filename\" to render a simplified view of the raw filename (without directory or \".safetensors\" extension) in the model list. Select \"title\" to display the configurable model metadata title.',\n    type: 'combo',\n    options: ['filename', 'title'],\n    defaultValue: 'title'\n  },\n  {\n    id: 'Comfy.Locale',\n    name: 'Language',\n    type: 'combo',\n    options: [\n      { value: 'en', text: 'English' },\n      { value: 'zh', text: '中文' },\n      { value: 'zh-TW', text: '繁體中文' },\n      { value: 'ru', text: 'Русский' },\n      { value: 'ja', text: '日本語' },\n      { value: 'ko', text: '한국어' },\n      { value: 'fr', text: 'Français' },\n      { value: 'es', text: 'Español' },\n      { value: 'ar', text: 'عربي' },\n      { value: 'tr', text: 'Türkçe' }\n    ],\n    defaultValue: () => navigator.language.split('-')[0] || 'en'\n  },\n  {\n    id: 'Comfy.NodeBadge.NodeSourceBadgeMode',\n    category: ['LiteGraph', 'Node', 'NodeSourceBadgeMode'],\n    name: 'Node source badge mode',\n    type: 'combo',\n    options: Object.values(NodeBadgeMode),\n    defaultValue: NodeBadgeMode.HideBuiltIn\n  },\n  {\n    id: 'Comfy.NodeBadge.NodeIdBadgeMode',\n    category: ['LiteGraph', 'Node', 'NodeIdBadgeMode'],\n    name: 'Node ID badge mode',\n    type: 'combo',\n    options: [NodeBadgeMode.None, NodeBadgeMode.ShowAll],\n    defaultValue: NodeBadgeMode.None\n  },\n  {\n    id: 'Comfy.NodeBadge.NodeLifeCycleBadgeMode',\n    category: ['LiteGraph', 'Node', 'NodeLifeCycleBadgeMode'],\n    name: 'Node life cycle badge mode',\n    type: 'combo',\n    options: [NodeBadgeMode.None, NodeBadgeMode.ShowAll],\n    defaultValue: NodeBadgeMode.ShowAll\n  },\n  {\n    id: 'Comfy.NodeBadge.ShowApiPricing',\n    category: ['Comfy', 'API Nodes'],\n    name: 'Show API node pricing badge',\n    type: 'boolean',\n    defaultValue: true,\n    versionAdded: '1.20.3'\n  },\n  {\n    id: 'Comfy.Notification.ShowVersionUpdates',\n    category: ['Comfy', 'Notification Preferences'],\n    name: 'Show version updates',\n    tooltip: 'Show updates for new models, and major new features.',\n    type: 'boolean',\n    defaultValue: true\n  },\n  {\n    id: 'Comfy.ConfirmClear',\n    category: ['Comfy', 'Workflow', 'ConfirmClear'],\n    name: 'Require confirmation when clearing workflow',\n    type: 'boolean',\n    defaultValue: true\n  },\n  {\n    id: 'Comfy.PromptFilename',\n    category: ['Comfy', 'Workflow', 'PromptFilename'],\n    name: 'Prompt for filename when saving workflow',\n    type: 'boolean',\n    defaultValue: true\n  },\n  /**\n   * file format for preview\n   *\n   * format;quality\n   *\n   * ex)\n   * webp;50 -> webp, quality 50\n   * jpeg;80 -> rgb, jpeg, quality 80\n   *\n   * @type {string}\n   */\n  {\n    id: 'Comfy.PreviewFormat',\n    category: ['LiteGraph', 'Node Widget', 'PreviewFormat'],\n    name: 'Preview image format',\n    tooltip:\n      'When displaying a preview in the image widget, convert it to a lightweight image, e.g. webp, jpeg, webp;50, etc.',\n    type: 'text',\n    defaultValue: ''\n  },\n  {\n    id: 'Comfy.DisableSliders',\n    category: ['LiteGraph', 'Node Widget', 'DisableSliders'],\n    name: 'Disable node widget sliders',\n    type: 'boolean',\n    defaultValue: false\n  },\n  {\n    id: 'Comfy.DisableFloatRounding',\n    category: ['LiteGraph', 'Node Widget', 'DisableFloatRounding'],\n    name: 'Disable default float widget rounding.',\n    tooltip:\n      '(requires page reload) Cannot disable round when round is set by the node in the backend.',\n    type: 'boolean',\n    defaultValue: false\n  },\n  {\n    id: 'Comfy.FloatRoundingPrecision',\n    category: ['LiteGraph', 'Node Widget', 'FloatRoundingPrecision'],\n    name: 'Float widget rounding decimal places [0 = auto].',\n    tooltip: '(requires page reload)',\n    type: 'slider',\n    attrs: {\n      min: 0,\n      max: 6,\n      step: 1\n    },\n    defaultValue: 0\n  },\n  {\n    id: 'LiteGraph.Node.TooltipDelay',\n    name: 'Tooltip Delay',\n    type: 'number',\n    attrs: {\n      min: 100,\n      max: 3000,\n      step: 50\n    },\n    defaultValue: 500,\n    versionAdded: '1.9.0'\n  },\n  {\n    id: 'Comfy.EnableTooltips',\n    category: ['LiteGraph', 'Node', 'EnableTooltips'],\n    name: 'Enable Tooltips',\n    type: 'boolean',\n    defaultValue: true\n  },\n  {\n    id: 'Comfy.DevMode',\n    name: 'Enable dev mode options (API save, etc.)',\n    type: 'boolean',\n    defaultValue: false,\n    onChange: (value) => {\n      const element = document.getElementById('comfy-dev-save-api-button')\n      if (element) {\n        element.style.display = value ? 'flex' : 'none'\n      }\n    }\n  },\n  {\n    id: 'Comfy.UseNewMenu',\n    category: ['Comfy', 'Menu', 'UseNewMenu'],\n    defaultValue: 'Top',\n    name: 'Use new menu',\n    type: 'combo',\n    options: ['Disabled', 'Top', 'Bottom'],\n    tooltip:\n      'Menu bar position. On mobile devices, the menu is always shown at the top.',\n    migrateDeprecatedValue: (value: string) => {\n      // Floating is now supported by dragging the docked actionbar off.\n      if (value === 'Floating') {\n        return 'Top'\n      }\n      return value\n    }\n  },\n  {\n    id: 'Comfy.Workflow.WorkflowTabsPosition',\n    name: 'Opened workflows position',\n    type: 'combo',\n    options: ['Sidebar', 'Topbar', 'Topbar (2nd-row)'],\n    // Default to topbar (2nd-row) if the window is less than 1536px(2xl) wide.\n    defaultValue: () =>\n      window.innerWidth < 1536 ? 'Topbar (2nd-row)' : 'Topbar'\n  },\n  {\n    id: 'Comfy.Graph.CanvasMenu',\n    category: ['LiteGraph', 'Canvas', 'CanvasMenu'],\n    name: 'Show graph canvas menu',\n    type: 'boolean',\n    defaultValue: true\n  },\n  {\n    id: 'Comfy.QueueButton.BatchCountLimit',\n    name: 'Batch count limit',\n    tooltip:\n      'The maximum number of tasks added to the queue at one button click',\n    type: 'number',\n    defaultValue: 100,\n    versionAdded: '1.3.5'\n  },\n  {\n    id: 'Comfy.Keybinding.UnsetBindings',\n    name: 'Keybindings unset by the user',\n    type: 'hidden',\n    defaultValue: [] as Keybinding[],\n    versionAdded: '1.3.7',\n    versionModified: '1.7.3',\n    migrateDeprecatedValue: (value: any[]) => {\n      return value.map((keybinding) => {\n        if (keybinding['targetSelector'] === '#graph-canvas') {\n          keybinding['targetElementId'] = 'graph-canvas-container'\n        }\n        return keybinding\n      })\n    }\n  },\n  {\n    id: 'Comfy.Keybinding.NewBindings',\n    name: 'Keybindings set by the user',\n    type: 'hidden',\n    defaultValue: [] as Keybinding[],\n    versionAdded: '1.3.7'\n  },\n  {\n    id: 'Comfy.Extension.Disabled',\n    name: 'Disabled extension names',\n    type: 'hidden',\n    defaultValue: [] as string[],\n    versionAdded: '1.3.11'\n  },\n  {\n    id: 'Comfy.LinkRenderMode',\n    category: ['LiteGraph', 'Graph', 'LinkRenderMode'],\n    name: 'Link Render Mode',\n    defaultValue: 2,\n    type: 'combo',\n    options: [\n      { value: LiteGraph.STRAIGHT_LINK, text: 'Straight' },\n      { value: LiteGraph.LINEAR_LINK, text: 'Linear' },\n      { value: LiteGraph.SPLINE_LINK, text: 'Spline' },\n      { value: LiteGraph.HIDDEN_LINK, text: 'Hidden' }\n    ]\n  },\n  {\n    id: 'Comfy.Node.AutoSnapLinkToSlot',\n    category: ['LiteGraph', 'Node', 'AutoSnapLinkToSlot'],\n    name: 'Auto snap link to node slot',\n    tooltip:\n      'When dragging a link over a node, the link automatically snap to a viable input slot on the node',\n    type: 'boolean',\n    defaultValue: true,\n    versionAdded: '1.3.29'\n  },\n  {\n    id: 'Comfy.Node.SnapHighlightsNode',\n    category: ['LiteGraph', 'Node', 'SnapHighlightsNode'],\n    name: 'Snap highlights node',\n    tooltip:\n      'When dragging a link over a node with viable input slot, highlight the node',\n    type: 'boolean',\n    defaultValue: true,\n    versionAdded: '1.3.29'\n  },\n  {\n    id: 'Comfy.Node.BypassAllLinksOnDelete',\n    category: ['LiteGraph', 'Node', 'BypassAllLinksOnDelete'],\n    name: 'Keep all links when deleting nodes',\n    tooltip:\n      'When deleting a node, attempt to reconnect all of its input and output links (bypassing the deleted node)',\n    type: 'boolean',\n    defaultValue: true,\n    versionAdded: '1.3.40'\n  },\n  {\n    id: 'Comfy.Node.MiddleClickRerouteNode',\n    category: ['LiteGraph', 'Node', 'MiddleClickRerouteNode'],\n    name: 'Middle-click creates a new Reroute node',\n    type: 'boolean',\n    defaultValue: true,\n    versionAdded: '1.3.42'\n  },\n  {\n    id: 'Comfy.Graph.LinkMarkers',\n    category: ['LiteGraph', 'Link', 'LinkMarkers'],\n    name: 'Link midpoint markers',\n    defaultValue: LinkMarkerShape.Circle,\n    type: 'combo',\n    options: [\n      { value: LinkMarkerShape.None, text: 'None' },\n      { value: LinkMarkerShape.Circle, text: 'Circle' },\n      { value: LinkMarkerShape.Arrow, text: 'Arrow' }\n    ],\n    versionAdded: '1.3.42'\n  },\n  {\n    id: 'Comfy.DOMClippingEnabled',\n    category: ['LiteGraph', 'Node', 'DOMClippingEnabled'],\n    name: 'Enable DOM element clipping (enabling may reduce performance)',\n    type: 'boolean',\n    defaultValue: true\n  },\n  {\n    id: 'Comfy.Graph.CtrlShiftZoom',\n    category: ['LiteGraph', 'Canvas', 'CtrlShiftZoom'],\n    name: 'Enable fast-zoom shortcut (Ctrl + Shift + Drag)',\n    type: 'boolean',\n    defaultValue: true,\n    versionAdded: '1.4.0'\n  },\n  {\n    id: 'Comfy.Pointer.ClickDrift',\n    category: ['LiteGraph', 'Pointer', 'ClickDrift'],\n    name: 'Pointer click drift (maximum distance)',\n    tooltip:\n      'If the pointer moves more than this distance while holding a button down, it is considered dragging (rather than clicking).\\n\\nHelps prevent objects from being unintentionally nudged if the pointer is moved whilst clicking.',\n    experimental: true,\n    type: 'slider',\n    attrs: {\n      min: 0,\n      max: 20,\n      step: 1\n    },\n    defaultValue: 6,\n    versionAdded: '1.4.3'\n  },\n  {\n    id: 'Comfy.Pointer.ClickBufferTime',\n    category: ['LiteGraph', 'Pointer', 'ClickBufferTime'],\n    name: 'Pointer click drift delay',\n    tooltip:\n      'After pressing a pointer button down, this is the maximum time (in milliseconds) that pointer movement can be ignored for.\\n\\nHelps prevent objects from being unintentionally nudged if the pointer is moved whilst clicking.',\n    experimental: true,\n    type: 'slider',\n    attrs: {\n      min: 0,\n      max: 1000,\n      step: 25\n    },\n    defaultValue: 150,\n    versionAdded: '1.4.3'\n  },\n  {\n    id: 'Comfy.Pointer.DoubleClickTime',\n    category: ['LiteGraph', 'Pointer', 'DoubleClickTime'],\n    name: 'Double click interval (maximum)',\n    tooltip:\n      'The maximum time in milliseconds between the two clicks of a double-click.  Increasing this value may assist if double-clicks are sometimes not registered.',\n    type: 'slider',\n    attrs: {\n      min: 100,\n      max: 1000,\n      step: 50\n    },\n    defaultValue: 300,\n    versionAdded: '1.4.3'\n  },\n  {\n    id: 'Comfy.SnapToGrid.GridSize',\n    category: ['LiteGraph', 'Canvas', 'GridSize'],\n    name: 'Snap to grid size',\n    type: 'slider',\n    attrs: {\n      min: 1,\n      max: 500\n    },\n    tooltip:\n      'When dragging and resizing nodes while holding shift they will be aligned to the grid, this controls the size of that grid.',\n    defaultValue: LiteGraph.CANVAS_GRID_SIZE\n  },\n  // Keep the 'pysssss.SnapToGrid' setting id so we don't need to migrate setting values.\n  // Using a new setting id can cause existing users to lose their existing settings.\n  {\n    id: 'pysssss.SnapToGrid',\n    category: ['LiteGraph', 'Canvas', 'AlwaysSnapToGrid'],\n    name: 'Always snap to grid',\n    type: 'boolean',\n    defaultValue: false,\n    versionAdded: '1.3.13'\n  },\n  {\n    id: 'Comfy.Server.ServerConfigValues',\n    name: 'Server config values for frontend display',\n    tooltip: 'Server config values used for frontend display only',\n    type: 'hidden',\n    // Mapping from server config id to value.\n    defaultValue: {} as Record<string, any>,\n    versionAdded: '1.4.8'\n  },\n  {\n    id: 'Comfy.Server.LaunchArgs',\n    name: 'Server launch arguments',\n    tooltip:\n      'These are the actual arguments that are passed to the server when it is launched.',\n    type: 'hidden',\n    defaultValue: {} as Record<string, string>,\n    versionAdded: '1.4.8'\n  },\n  {\n    id: 'Comfy.Queue.MaxHistoryItems',\n    name: 'Queue history size',\n    tooltip: 'The maximum number of tasks that show in the queue history.',\n    type: 'slider',\n    attrs: {\n      min: 2,\n      max: 256,\n      step: 2\n    },\n    defaultValue: 64,\n    versionAdded: '1.4.12'\n  },\n  {\n    id: 'LiteGraph.Canvas.MaximumFps',\n    name: 'Maximum FPS',\n    tooltip:\n      'The maximum frames per second that the canvas is allowed to render. Caps GPU usage at the cost of smoothness. If 0, the screen refresh rate is used. Default: 0',\n    type: 'slider',\n    attrs: {\n      min: 0,\n      max: 120\n    },\n    defaultValue: 0,\n    versionAdded: '1.5.1'\n  },\n  {\n    id: 'Comfy.EnableWorkflowViewRestore',\n    category: ['Comfy', 'Workflow', 'EnableWorkflowViewRestore'],\n    name: 'Save and restore canvas position and zoom level in workflows',\n    type: 'boolean',\n    defaultValue: true,\n    versionModified: '1.5.4'\n  },\n  {\n    id: 'Comfy.Workflow.ConfirmDelete',\n    name: 'Show confirmation when deleting workflows',\n    type: 'boolean',\n    defaultValue: true,\n    versionAdded: '1.5.6'\n  },\n  {\n    id: 'Comfy.ColorPalette',\n    name: 'The active color palette id',\n    type: 'hidden',\n    defaultValue: 'dark',\n    versionModified: '1.6.7',\n    migrateDeprecatedValue(value: string) {\n      // Legacy custom palettes were prefixed with 'custom_'\n      return value.startsWith('custom_') ? value.replace('custom_', '') : value\n    }\n  },\n  {\n    id: 'Comfy.CustomColorPalettes',\n    name: 'Custom color palettes',\n    type: 'hidden',\n    defaultValue: {} as ColorPalettes,\n    versionModified: '1.6.7'\n  },\n  {\n    id: 'Comfy.WidgetControlMode',\n    category: ['Comfy', 'Node Widget', 'WidgetControlMode'],\n    name: 'Widget control mode',\n    tooltip:\n      'Controls when widget values are updated (randomize/increment/decrement), either before the prompt is queued or after.',\n    type: 'combo',\n    defaultValue: 'after',\n    options: ['before', 'after'],\n    versionModified: '1.6.10'\n  },\n  {\n    id: 'Comfy.TutorialCompleted',\n    name: 'Tutorial completed',\n    type: 'hidden',\n    defaultValue: false,\n    versionAdded: '1.8.7'\n  },\n  {\n    id: 'Comfy.InstalledVersion',\n    name: 'The frontend version that was running when the user first installed ComfyUI',\n    type: 'hidden',\n    defaultValue: null,\n    versionAdded: '1.24.0'\n  },\n  {\n    id: 'LiteGraph.ContextMenu.Scaling',\n    name: 'Scale node combo widget menus (lists) when zoomed in',\n    defaultValue: false,\n    type: 'boolean',\n    versionAdded: '1.8.8'\n  },\n\n  {\n    id: 'LiteGraph.Canvas.LowQualityRenderingZoomThreshold',\n    type: 'hidden',\n    deprecated: true,\n    name: 'Low quality rendering zoom threshold (deprecated)',\n    tooltip:\n      'Zoom level threshold for performance mode. Lower values (0.1) = quality at all zoom levels. Higher values (1.0) = performance mode even when zoomed in. Performance mode simplifies rendering by hiding text labels, shadows, and details.',\n    attrs: {\n      min: 0.1,\n      max: 1,\n      step: 0.01\n    },\n    defaultValue: 0.6,\n    versionAdded: '1.9.1',\n    versionModified: '1.26.7'\n  },\n  {\n    id: 'LiteGraph.Canvas.MinFontSizeForLOD',\n    name: 'Zoom Node Level of Detail - font size threshold',\n    tooltip:\n      'Controls when the nodes switch to low quality LOD rendering. Uses font size in pixels to determine when to switch. Set to 0 to disable. Values 1-24 set the minimum font size threshold for LOD - higher values (24px) = switch nodes to simplified rendering sooner when zooming out, lower values (1px) = maintain full node quality longer.',\n    type: 'slider',\n    attrs: {\n      min: 0,\n      max: 24,\n      step: 1\n    },\n    defaultValue: 8,\n    versionAdded: '1.26.7'\n  },\n  {\n    id: 'Comfy.Canvas.SelectionToolbox',\n    category: ['LiteGraph', 'Canvas', 'SelectionToolbox'],\n    name: 'Show selection toolbox',\n    type: 'boolean',\n    defaultValue: true,\n    versionAdded: '1.10.5'\n  },\n  {\n    id: 'LiteGraph.Reroute.SplineOffset',\n    name: 'Reroute spline offset',\n    tooltip: 'The bezier control point offset from the reroute centre point',\n    type: 'slider',\n    defaultValue: 20,\n    attrs: {\n      min: 0,\n      max: 400\n    },\n    versionAdded: '1.15.7'\n  },\n  {\n    id: 'Comfy.Toast.DisableReconnectingToast',\n    name: 'Disable toasts when reconnecting or reconnected',\n    type: 'hidden',\n    defaultValue: false,\n    versionAdded: '1.15.12'\n  },\n  {\n    id: 'Comfy.Minimap.Visible',\n    name: 'Display minimap on canvas',\n    type: 'hidden',\n    defaultValue: true,\n    versionAdded: '1.25.0'\n  },\n  {\n    id: 'Comfy.Minimap.NodeColors',\n    name: 'Display node with its original color on minimap',\n    type: 'hidden',\n    defaultValue: false,\n    versionAdded: '1.26.0'\n  },\n  {\n    id: 'Comfy.Minimap.ShowLinks',\n    name: 'Display links on minimap',\n    type: 'hidden',\n    defaultValue: true,\n    versionAdded: '1.26.0'\n  },\n  {\n    id: 'Comfy.Minimap.ShowGroups',\n    name: 'Display node groups on minimap',\n    type: 'hidden',\n    defaultValue: true,\n    versionAdded: '1.26.0'\n  },\n  {\n    id: 'Comfy.Minimap.RenderBypassState',\n    name: 'Render bypass state on minimap',\n    type: 'hidden',\n    defaultValue: true,\n    versionAdded: '1.26.0'\n  },\n  {\n    id: 'Comfy.Minimap.RenderErrorState',\n    name: 'Render error state on minimap',\n    type: 'hidden',\n    defaultValue: true,\n    versionAdded: '1.26.0'\n  },\n  {\n    id: 'Comfy.Workflow.AutoSaveDelay',\n    name: 'Auto Save Delay (ms)',\n    defaultValue: 1000,\n    type: 'number',\n    tooltip: 'Only applies if Auto Save is set to \"after delay\".',\n    versionAdded: '1.16.0'\n  },\n  {\n    id: 'Comfy.Workflow.AutoSave',\n    name: 'Auto Save',\n    type: 'combo',\n    options: ['off', 'after delay'], // Room for other options like on focus change, tab change, window change\n    defaultValue: 'off', // Popular requst by users (https://github.com/Comfy-Org/ComfyUI_frontend/issues/1584#issuecomment-2536610154)\n    versionAdded: '1.16.0'\n  },\n  {\n    id: 'Comfy.Workflow.Persist',\n    name: 'Persist workflow state and restore on page (re)load',\n    type: 'boolean',\n    defaultValue: true,\n    versionAdded: '1.16.1'\n  },\n  {\n    id: 'LiteGraph.Node.DefaultPadding',\n    name: 'Always shrink new nodes',\n    tooltip:\n      'Resize nodes to the smallest possible size when created. When disabled, a newly added node will be widened slightly to show widget values.',\n    type: 'boolean',\n    defaultValue: false,\n    versionAdded: '1.18.0'\n  },\n  {\n    id: 'Comfy.Canvas.BackgroundImage',\n    category: ['Appearance', 'Canvas', 'Background'],\n    name: 'Canvas background image',\n    type: 'backgroundImage',\n    tooltip:\n      'Image URL for the canvas background. You can right-click an image in the outputs panel and select \"Set as Background\" to use it, or upload your own image using the upload button.',\n    defaultValue: '',\n    versionAdded: '1.20.4',\n    versionModified: '1.20.5'\n  },\n  // Release data stored in settings\n  {\n    id: 'Comfy.Release.Version',\n    name: 'Last seen release version',\n    type: 'hidden',\n    defaultValue: ''\n  },\n  {\n    id: 'Comfy.Release.Status',\n    name: 'Release status',\n    type: 'hidden',\n    defaultValue: 'skipped'\n  },\n  {\n    id: 'Comfy.Release.Timestamp',\n    name: 'Release seen timestamp',\n    type: 'hidden',\n    defaultValue: 0\n  },\n\n  /**\n   * Vue Node System Settings\n   */\n  {\n    id: 'Comfy.VueNodes.Enabled',\n    name: 'Enable Vue node rendering (hidden)',\n    type: 'hidden',\n    tooltip:\n      'Render nodes as Vue components instead of canvas. Hidden; toggle via Experimental keybinding.',\n    defaultValue: false,\n    experimental: true,\n    versionAdded: '1.27.1'\n  },\n  {\n    id: 'Comfy.Assets.UseAssetAPI',\n    name: 'Use Asset API for model library',\n    type: 'hidden',\n    tooltip: 'Use new Asset API for model browsing',\n    defaultValue: false,\n    experimental: true\n  }\n]\n","import { computed, onUnmounted, watch } from 'vue'\n\nimport { useSettingStore } from '@/platform/settings/settingStore'\nimport { useWorkflowService } from '@/platform/workflow/core/services/workflowService'\nimport { useWorkflowStore } from '@/platform/workflow/management/stores/workflowStore'\nimport { api } from '@/scripts/api'\n\nexport function useWorkflowAutoSave() {\n  const workflowStore = useWorkflowStore()\n  const settingStore = useSettingStore()\n  const workflowService = useWorkflowService()\n\n  // Use computed refs to cache autosave settings\n  const autoSaveSetting = computed(() =>\n    settingStore.get('Comfy.Workflow.AutoSave')\n  )\n  const autoSaveDelay = computed(() =>\n    settingStore.get('Comfy.Workflow.AutoSaveDelay')\n  )\n\n  let autoSaveTimeout: NodeJS.Timeout | null = null\n  let isSaving = false\n  let needsAutoSave = false\n\n  const scheduleAutoSave = () => {\n    // Clear any existing timeout\n    if (autoSaveTimeout) {\n      clearTimeout(autoSaveTimeout)\n      autoSaveTimeout = null\n    }\n\n    // If autosave is enabled\n    if (autoSaveSetting.value === 'after delay') {\n      // If a save is in progress, mark that we need an autosave after saving\n      if (isSaving) {\n        needsAutoSave = true\n        return\n      }\n      const delay = autoSaveDelay.value\n      autoSaveTimeout = setTimeout(async () => {\n        const activeWorkflow = workflowStore.activeWorkflow\n        if (activeWorkflow?.isModified && activeWorkflow.isPersisted) {\n          try {\n            isSaving = true\n            await workflowService.saveWorkflow(activeWorkflow)\n          } catch (err) {\n            console.error('Auto save failed:', err)\n          } finally {\n            isSaving = false\n            if (needsAutoSave) {\n              needsAutoSave = false\n              scheduleAutoSave()\n            }\n          }\n        }\n      }, delay)\n    }\n  }\n\n  // Watch for autosave setting changes\n  watch(\n    autoSaveSetting,\n    (newSetting) => {\n      // Clear any existing timeout when settings change\n      if (autoSaveTimeout) {\n        clearTimeout(autoSaveTimeout)\n        autoSaveTimeout = null\n      }\n\n      // If there's an active modified workflow and autosave is enabled, schedule a save\n      if (\n        newSetting === 'after delay' &&\n        workflowStore.activeWorkflow?.isModified\n      ) {\n        scheduleAutoSave()\n      }\n    },\n    { immediate: true }\n  )\n\n  // Listen for graph changes and schedule autosave when they occur\n  const onGraphChanged = () => {\n    scheduleAutoSave()\n  }\n\n  api.addEventListener('graphChanged', onGraphChanged)\n\n  onUnmounted(() => {\n    if (autoSaveTimeout) {\n      clearTimeout(autoSaveTimeout)\n      autoSaveTimeout = null\n    }\n    api.removeEventListener('graphChanged', onGraphChanged)\n  })\n}\n","import { tryOnScopeDispose } from '@vueuse/core'\nimport { computed, watch } from 'vue'\n\nimport { useSettingStore } from '@/platform/settings/settingStore'\nimport { useWorkflowService } from '@/platform/workflow/core/services/workflowService'\nimport { useWorkflowStore } from '@/platform/workflow/management/stores/workflowStore'\nimport { api } from '@/scripts/api'\nimport { app as comfyApp } from '@/scripts/app'\nimport { getStorageValue, setStorageValue } from '@/scripts/utils'\nimport { useCommandStore } from '@/stores/commandStore'\n\nexport function useWorkflowPersistence() {\n  const workflowStore = useWorkflowStore()\n  const settingStore = useSettingStore()\n\n  const workflowPersistenceEnabled = computed(() =>\n    settingStore.get('Comfy.Workflow.Persist')\n  )\n\n  const persistCurrentWorkflow = () => {\n    if (!workflowPersistenceEnabled.value) return\n    const workflow = JSON.stringify(comfyApp.graph.serialize())\n    localStorage.setItem('workflow', workflow)\n    if (api.clientId) {\n      sessionStorage.setItem(`workflow:${api.clientId}`, workflow)\n    }\n  }\n\n  const loadWorkflowFromStorage = async (\n    json: string | null,\n    workflowName: string | null\n  ) => {\n    if (!json) return false\n    const workflow = JSON.parse(json)\n    await comfyApp.loadGraphData(workflow, true, true, workflowName)\n    return true\n  }\n\n  const loadPreviousWorkflowFromStorage = async () => {\n    const workflowName = getStorageValue('Comfy.PreviousWorkflow')\n    const clientId = api.initialClientId ?? api.clientId\n\n    // Try loading from session storage first\n    if (clientId) {\n      const sessionWorkflow = sessionStorage.getItem(`workflow:${clientId}`)\n      if (await loadWorkflowFromStorage(sessionWorkflow, workflowName)) {\n        return true\n      }\n    }\n\n    // Fall back to local storage\n    const localWorkflow = localStorage.getItem('workflow')\n    return await loadWorkflowFromStorage(localWorkflow, workflowName)\n  }\n\n  const loadDefaultWorkflow = async () => {\n    if (!settingStore.get('Comfy.TutorialCompleted')) {\n      await settingStore.set('Comfy.TutorialCompleted', true)\n      await useWorkflowService().loadBlankWorkflow()\n      await useCommandStore().execute('Comfy.BrowseTemplates')\n    } else {\n      await comfyApp.loadGraphData()\n    }\n  }\n\n  const restorePreviousWorkflow = async () => {\n    if (!workflowPersistenceEnabled.value) return\n    try {\n      const restored = await loadPreviousWorkflowFromStorage()\n      if (!restored) {\n        await loadDefaultWorkflow()\n      }\n    } catch (err) {\n      console.error('Error loading previous workflow', err)\n      await loadDefaultWorkflow()\n    }\n  }\n\n  // Setup watchers\n  watch(\n    () => workflowStore.activeWorkflow?.key,\n    (activeWorkflowKey) => {\n      if (!activeWorkflowKey) return\n      setStorageValue('Comfy.PreviousWorkflow', activeWorkflowKey)\n      // When the activeWorkflow changes, the graph has already been loaded.\n      // Saving the current state of the graph to the localStorage.\n      persistCurrentWorkflow()\n    }\n  )\n  api.addEventListener('graphChanged', persistCurrentWorkflow)\n\n  // Clean up event listener when component unmounts\n  tryOnScopeDispose(() => {\n    api.removeEventListener('graphChanged', persistCurrentWorkflow)\n  })\n\n  // Restore workflow tabs states\n  const openWorkflows = computed(() => workflowStore.openWorkflows)\n  const activeWorkflow = computed(() => workflowStore.activeWorkflow)\n  const restoreState = computed<{ paths: string[]; activeIndex: number }>(\n    () => {\n      if (!openWorkflows.value || !activeWorkflow.value) {\n        return { paths: [], activeIndex: -1 }\n      }\n\n      const paths = openWorkflows.value\n        .filter((workflow) => workflow?.isPersisted)\n        .map((workflow) => workflow.path)\n      const activeIndex = openWorkflows.value.findIndex(\n        (workflow) => workflow.path === activeWorkflow.value?.path\n      )\n\n      return { paths, activeIndex }\n    }\n  )\n\n  // Get storage values before setting watchers\n  const storedWorkflows = JSON.parse(\n    getStorageValue('Comfy.OpenWorkflowsPaths') || '[]'\n  )\n  const storedActiveIndex = JSON.parse(\n    getStorageValue('Comfy.ActiveWorkflowIndex') || '-1'\n  )\n\n  watch(restoreState, ({ paths, activeIndex }) => {\n    if (workflowPersistenceEnabled.value) {\n      setStorageValue('Comfy.OpenWorkflowsPaths', JSON.stringify(paths))\n      setStorageValue('Comfy.ActiveWorkflowIndex', JSON.stringify(activeIndex))\n    }\n  })\n\n  const restoreWorkflowTabsState = () => {\n    if (!workflowPersistenceEnabled.value) return\n    const isRestorable = storedWorkflows?.length > 0 && storedActiveIndex >= 0\n    if (isRestorable) {\n      workflowStore.openWorkflowsInBackground({\n        left: storedWorkflows.slice(0, storedActiveIndex),\n        right: storedWorkflows.slice(storedActiveIndex)\n      })\n    }\n  }\n\n  return {\n    restorePreviousWorkflow,\n    restoreWorkflowTabsState\n  }\n}\n","import type { LGraphCanvas } from '@/lib/litegraph/src/LGraphCanvas'\nimport type { RenderLink } from '@/lib/litegraph/src/canvas/RenderLink'\nimport type { ReadOnlyPoint } from '@/lib/litegraph/src/interfaces'\nimport { LinkDirection } from '@/lib/litegraph/src/types/globalEnums'\nimport { resolveConnectingLinkColor } from '@/lib/litegraph/src/utils/linkColors'\nimport { createLinkConnectorAdapter } from '@/renderer/core/canvas/links/linkConnectorAdapter'\nimport { useSlotLinkDragState } from '@/renderer/core/canvas/links/slotLinkDragState'\nimport type { LinkRenderContext } from '@/renderer/core/canvas/litegraph/litegraphLinkAdapter'\nimport { getSlotKey } from '@/renderer/core/layout/slots/slotIdentifier'\nimport { layoutStore } from '@/renderer/core/layout/store/layoutStore'\n\nfunction buildContext(canvas: LGraphCanvas): LinkRenderContext {\n  return {\n    renderMode: canvas.links_render_mode,\n    connectionWidth: canvas.connections_width,\n    renderBorder: canvas.render_connections_border,\n    lowQuality: canvas.low_quality,\n    highQualityRender: canvas.highquality_render,\n    scale: canvas.ds.scale,\n    linkMarkerShape: canvas.linkMarkerShape,\n    renderConnectionArrows: canvas.render_connection_arrows,\n    highlightedLinks: new Set(Object.keys(canvas.highlighted_links)),\n    defaultLinkColor: canvas.default_link_color,\n    linkTypeColors: (canvas.constructor as typeof LGraphCanvas)\n      .link_type_colors,\n    disabledPattern: canvas._pattern\n  }\n}\n\nexport function attachSlotLinkPreviewRenderer(canvas: LGraphCanvas) {\n  const originalOnDrawForeground = canvas.onDrawForeground?.bind(canvas)\n  const patched = (\n    ctx: CanvasRenderingContext2D,\n    area: LGraphCanvas['visible_area']\n  ) => {\n    originalOnDrawForeground?.(ctx, area)\n\n    const { state } = useSlotLinkDragState()\n    // If LiteGraph's own connector is active, let it handle rendering to avoid double-draw\n    if (canvas.linkConnector?.isConnecting) return\n    if (!state.active || !state.source) return\n\n    const { pointer } = state\n\n    const linkRenderer = canvas.linkRenderer\n    if (!linkRenderer) return\n    const context = buildContext(canvas)\n\n    const renderLinks = createLinkConnectorAdapter()?.renderLinks\n    if (!renderLinks || renderLinks.length === 0) return\n\n    const to: ReadOnlyPoint = [pointer.canvas.x, pointer.canvas.y]\n    ctx.save()\n    for (const link of renderLinks) {\n      const startDir = link.fromDirection ?? LinkDirection.RIGHT\n      const endDir = link.dragDirection ?? LinkDirection.CENTER\n      const colour = resolveConnectingLinkColor(link.fromSlot.type)\n\n      const fromPoint = resolveRenderLinkOrigin(link)\n\n      linkRenderer.renderDraggingLink(\n        ctx,\n        fromPoint,\n        to,\n        colour,\n        startDir,\n        endDir,\n        context\n      )\n    }\n    ctx.restore()\n  }\n\n  canvas.onDrawForeground = patched\n}\n\nfunction resolveRenderLinkOrigin(link: RenderLink): ReadOnlyPoint {\n  if (link.fromReroute) {\n    const rerouteLayout = layoutStore.getRerouteLayout(link.fromReroute.id)\n    if (rerouteLayout) {\n      return [rerouteLayout.position.x, rerouteLayout.position.y]\n    }\n\n    const [x, y] = link.fromReroute.pos\n    return [x, y]\n  }\n\n  const nodeId = getRenderLinkNodeId(link)\n  if (nodeId != null) {\n    const isInputFrom = link.toType === 'output'\n    const key = getSlotKey(String(nodeId), link.fromSlotIndex, isInputFrom)\n    const layout = layoutStore.getSlotLayout(key)\n    if (layout) {\n      return [layout.position.x, layout.position.y]\n    }\n  }\n\n  return link.fromPos\n}\n\nfunction getRenderLinkNodeId(link: RenderLink): number | null {\n  const node = link.node\n  if (typeof node === 'object' && node !== null && 'id' in node) {\n    const maybeId = node.id\n    if (typeof maybeId === 'number') return maybeId\n  }\n  return null\n}\n","import type { InjectionKey } from 'vue'\n\nimport type { useTransformState } from '@/renderer/core/layout/transform/useTransformState'\n\n/**\n * Lightweight, injectable transform state used by layout-aware components.\n *\n * Consumers use this interface to convert coordinates between LiteGraph's\n * canvas space and the DOM's screen space, access the current pan/zoom\n * (camera), and perform basic viewport culling checks.\n *\n * Coordinate mapping:\n * - screen = (canvas + offset) * scale\n * - canvas = screen / scale - offset\n *\n * The full implementation and additional helpers live in\n * `useTransformState()`. This interface deliberately exposes only the\n * minimal surface needed outside that composable.\n *\n * @example\n * const state = inject(TransformStateKey)!\n * const screen = state.canvasToScreen({ x: 100, y: 50 })\n */\ninterface TransformState\n  extends Pick<\n    ReturnType<typeof useTransformState>,\n    'screenToCanvas' | 'canvasToScreen' | 'camera' | 'isNodeInViewport'\n  > {}\n\nexport const TransformStateKey: InjectionKey<TransformState> =\n  Symbol('transformState')\n","import { useDebounceFn, useEventListener, useThrottleFn } from '@vueuse/core'\nimport { ref } from 'vue'\nimport type { MaybeRefOrGetter } from 'vue'\n\ninterface TransformSettlingOptions {\n  /**\n   * Delay in ms before transform is considered \"settled\" after last interaction\n   * @default 200\n   */\n  settleDelay?: number\n  /**\n   * Whether to track both zoom (wheel) and pan (pointer drag) interactions\n   * @default false\n   */\n  trackPan?: boolean\n  /**\n   * Throttle delay for high-frequency pointermove events (only used when trackPan is true)\n   * @default 16 (~60fps)\n   */\n  pointerMoveThrottle?: number\n  /**\n   * Whether to use passive event listeners (better performance but can't preventDefault)\n   * @default true\n   */\n  passive?: boolean\n}\n\n/**\n * Tracks when canvas transforms (zoom/pan) are actively changing vs settled.\n *\n * This composable helps optimize rendering quality during transformations.\n * When the user is actively zooming or panning, we can reduce rendering quality\n * for better performance. Once the transform \"settles\" (stops changing), we can\n * trigger high-quality re-rasterization.\n *\n * The settling concept prevents constant quality switching during interactions\n * by waiting for a period of inactivity before considering the transform complete.\n *\n * Uses VueUse's useEventListener for automatic cleanup and useDebounceFn for\n * efficient settle detection.\n *\n * @example\n * ```ts\n * const { isTransforming } = useTransformSettling(canvasRef, {\n *   settleDelay: 200,\n *   trackPan: true\n * })\n *\n * // Use in CSS classes or rendering logic\n * const cssClass = computed(() => ({\n *   'low-quality': isTransforming.value,\n *   'high-quality': !isTransforming.value\n * }))\n * ```\n */\nexport function useTransformSettling(\n  target: MaybeRefOrGetter<HTMLElement | null | undefined>,\n  options: TransformSettlingOptions = {}\n) {\n  const {\n    settleDelay = 200,\n    trackPan = false,\n    pointerMoveThrottle = 16,\n    passive = true\n  } = options\n\n  const isTransforming = ref(false)\n  let isPanning = false\n\n  /**\n   * Mark transform as active\n   */\n  const markTransformActive = () => {\n    isTransforming.value = true\n  }\n\n  /**\n   * Mark transform as settled (debounced)\n   */\n  const markTransformSettled = useDebounceFn(() => {\n    isTransforming.value = false\n  }, settleDelay)\n\n  /**\n   * Handle any transform event - mark active then queue settle\n   */\n  const handleTransformEvent = () => {\n    markTransformActive()\n    void markTransformSettled()\n  }\n\n  // Wheel handler\n  const handleWheel = () => {\n    handleTransformEvent()\n  }\n\n  // Pointer handlers for panning\n  const handlePointerDown = () => {\n    if (trackPan) {\n      isPanning = true\n      handleTransformEvent()\n    }\n  }\n\n  // Throttled pointer move handler for performance\n  const handlePointerMove = trackPan\n    ? useThrottleFn(() => {\n        if (isPanning) {\n          handleTransformEvent()\n        }\n      }, pointerMoveThrottle)\n    : undefined\n\n  const handlePointerEnd = () => {\n    if (trackPan) {\n      isPanning = false\n      // Don't immediately stop - let the debounced settle handle it\n    }\n  }\n\n  // Register event listeners with auto-cleanup\n  useEventListener(target, 'wheel', handleWheel, {\n    capture: true,\n    passive\n  })\n\n  if (trackPan) {\n    useEventListener(target, 'pointerdown', handlePointerDown, {\n      capture: true\n    })\n\n    if (handlePointerMove) {\n      useEventListener(target, 'pointermove', handlePointerMove, {\n        capture: true,\n        passive\n      })\n    }\n\n    useEventListener(target, 'pointerup', handlePointerEnd, {\n      capture: true\n    })\n\n    useEventListener(target, 'pointercancel', handlePointerEnd, {\n      capture: true\n    })\n  }\n\n  return {\n    isTransforming\n  }\n}\n","/**\n * Composable for managing transform state synchronized with LiteGraph canvas\n *\n * This composable is a critical part of the hybrid rendering architecture that\n * allows Vue components to render in perfect alignment with LiteGraph's canvas.\n *\n * ## Core Concept\n *\n * LiteGraph uses a canvas for rendering connections, grid, and handling interactions.\n * Vue components need to render nodes on top of this canvas. The challenge is\n * synchronizing the coordinate systems:\n *\n * - LiteGraph: Uses canvas coordinates with its own transform matrix\n * - Vue/DOM: Uses screen coordinates with CSS transforms\n *\n * ## Solution: Transform Container Pattern\n *\n * Instead of transforming individual nodes (O(n) complexity), we:\n * 1. Mirror LiteGraph's transform matrix to a single CSS container\n * 2. Place all Vue nodes as children with simple absolute positioning\n * 3. Achieve O(1) transform updates regardless of node count\n *\n * ## Coordinate Systems\n *\n * - **Canvas coordinates**: LiteGraph's internal coordinate system\n * - **Screen coordinates**: Browser's viewport coordinate system\n * - **Transform sync**: camera.x/y/z mirrors canvas.ds.offset/scale\n *\n * ## Performance Benefits\n *\n * - GPU acceleration via CSS transforms\n * - No layout thrashing (only transform changes)\n * - Efficient viewport culling calculations\n * - Scales to 1000+ nodes while maintaining 60 FPS\n *\n * @example\n * ```typescript\n * const { camera, transformStyle, canvasToScreen } = useTransformState()\n *\n * // In template\n * <div :style=\"transformStyle\">\n *   <NodeComponent\n *     v-for=\"node in nodes\"\n *     :style=\"{ left: node.x + 'px', top: node.y + 'px' }\"\n *   />\n * </div>\n *\n * // Convert coordinates\n * const screenPos = canvasToScreen({ x: nodeX, y: nodeY })\n * ```\n */\nimport { computed, reactive, readonly } from 'vue'\n\nimport type { LGraphCanvas } from '@/lib/litegraph/src/litegraph'\n\ninterface Point {\n  x: number\n  y: number\n}\n\ninterface Camera {\n  x: number\n  y: number\n  z: number // scale/zoom\n}\n\nexport const useTransformState = () => {\n  // Reactive state mirroring LiteGraph's canvas transform\n  const camera = reactive<Camera>({\n    x: 0,\n    y: 0,\n    z: 1\n  })\n\n  // Computed transform string for CSS\n  const transformStyle = computed(() => ({\n    // Match LiteGraph DragAndScale.toCanvasContext():\n    // ctx.scale(scale); ctx.translate(offset)\n    // CSS applies right-to-left, so \"scale() translate()\" -> translate first, then scale\n    // Effective mapping: screen = (canvas + offset) * scale\n    transform: `scale(${camera.z}) translate(${camera.x}px, ${camera.y}px)`,\n    transformOrigin: '0 0'\n  }))\n\n  /**\n   * Synchronizes Vue's reactive camera state with LiteGraph's canvas transform\n   *\n   * Called every frame via RAF to ensure Vue components stay aligned with canvas.\n   * This is the heart of the hybrid rendering system - it bridges the gap between\n   * LiteGraph's canvas transforms and Vue's reactive system.\n   *\n   * @param canvas - LiteGraph canvas instance with DragAndScale (ds) transform state\n   */\n  const syncWithCanvas = (canvas: LGraphCanvas) => {\n    if (!canvas || !canvas.ds) return\n\n    // Mirror LiteGraph's transform state to Vue's reactive state\n    // ds.offset = pan offset, ds.scale = zoom level\n    camera.x = canvas.ds.offset[0]\n    camera.y = canvas.ds.offset[1]\n    camera.z = canvas.ds.scale || 1\n  }\n\n  /**\n   * Converts canvas coordinates to screen coordinates\n   *\n   * Applies the same transform that LiteGraph uses for rendering.\n   * Essential for positioning Vue components to align with canvas elements.\n   *\n   * Formula: screen = (canvas + offset) * scale\n   *\n   * @param point - Point in canvas coordinate system\n   * @returns Point in screen coordinate system\n   */\n  const canvasToScreen = (point: Point): Point => {\n    return {\n      x: (point.x + camera.x) * camera.z,\n      y: (point.y + camera.y) * camera.z\n    }\n  }\n\n  /**\n   * Converts screen coordinates to canvas coordinates\n   *\n   * Inverse of canvasToScreen. Useful for hit testing and converting\n   * mouse events back to canvas space.\n   *\n   * Formula: canvas = screen / scale - offset\n   *\n   * @param point - Point in screen coordinate system\n   * @returns Point in canvas coordinate system\n   */\n  const screenToCanvas = (point: Point): Point => {\n    return {\n      x: point.x / camera.z - camera.x,\n      y: point.y / camera.z - camera.y\n    }\n  }\n\n  // Get node's screen bounds for culling\n  const getNodeScreenBounds = (\n    pos: ArrayLike<number>,\n    size: ArrayLike<number>\n  ): DOMRect => {\n    const topLeft = canvasToScreen({ x: pos[0], y: pos[1] })\n    const width = size[0] * camera.z\n    const height = size[1] * camera.z\n\n    return new DOMRect(topLeft.x, topLeft.y, width, height)\n  }\n\n  // Helper: Calculate zoom-adjusted margin for viewport culling\n  const calculateAdjustedMargin = (baseMargin: number): number => {\n    if (camera.z < 0.1) return Math.min(baseMargin * 5, 2.0)\n    if (camera.z > 3.0) return Math.max(baseMargin * 0.5, 0.05)\n    return baseMargin\n  }\n\n  // Helper: Check if node is too small to be visible at current zoom\n  const isNodeTooSmall = (nodeSize: ArrayLike<number>): boolean => {\n    const nodeScreenSize = Math.max(nodeSize[0], nodeSize[1]) * camera.z\n    return nodeScreenSize < 4\n  }\n\n  // Helper: Calculate expanded viewport bounds with margin\n  const getExpandedViewportBounds = (\n    viewport: { width: number; height: number },\n    margin: number\n  ) => {\n    const marginX = viewport.width * margin\n    const marginY = viewport.height * margin\n    return {\n      left: -marginX,\n      right: viewport.width + marginX,\n      top: -marginY,\n      bottom: viewport.height + marginY\n    }\n  }\n\n  // Helper: Test if node intersects with viewport bounds\n  const testViewportIntersection = (\n    screenPos: { x: number; y: number },\n    nodeSize: ArrayLike<number>,\n    bounds: { left: number; right: number; top: number; bottom: number }\n  ): boolean => {\n    const nodeRight = screenPos.x + nodeSize[0] * camera.z\n    const nodeBottom = screenPos.y + nodeSize[1] * camera.z\n\n    return !(\n      nodeRight < bounds.left ||\n      screenPos.x > bounds.right ||\n      nodeBottom < bounds.top ||\n      screenPos.y > bounds.bottom\n    )\n  }\n\n  // Check if node is within viewport with frustum and size-based culling\n  const isNodeInViewport = (\n    nodePos: ArrayLike<number>,\n    nodeSize: ArrayLike<number>,\n    viewport: { width: number; height: number },\n    margin: number = 0.2\n  ): boolean => {\n    // Early exit for tiny nodes\n    if (isNodeTooSmall(nodeSize)) return false\n\n    const screenPos = canvasToScreen({ x: nodePos[0], y: nodePos[1] })\n    const adjustedMargin = calculateAdjustedMargin(margin)\n    const bounds = getExpandedViewportBounds(viewport, adjustedMargin)\n\n    return testViewportIntersection(screenPos, nodeSize, bounds)\n  }\n\n  // Get viewport bounds in canvas coordinates (for spatial index queries)\n  const getViewportBounds = (\n    viewport: { width: number; height: number },\n    margin: number = 0.2\n  ) => {\n    const marginX = viewport.width * margin\n    const marginY = viewport.height * margin\n\n    const topLeft = screenToCanvas({ x: -marginX, y: -marginY })\n    const bottomRight = screenToCanvas({\n      x: viewport.width + marginX,\n      y: viewport.height + marginY\n    })\n\n    return {\n      x: topLeft.x,\n      y: topLeft.y,\n      width: bottomRight.x - topLeft.x,\n      height: bottomRight.y - topLeft.y\n    }\n  }\n\n  return {\n    camera: readonly(camera),\n    transformStyle,\n    syncWithCanvas,\n    canvasToScreen,\n    screenToCanvas,\n    getNodeScreenBounds,\n    isNodeInViewport,\n    getViewportBounds\n  }\n}\n","/**\n * Level of Detail (LOD) composable for Vue-based node rendering\n *\n * Provides dynamic quality adjustment based on zoom level to maintain\n * performance with large node graphs. Uses zoom threshold based on DPR\n * to determine how much detail to render for each node component.\n * Default minFontSize = 8px\n * Default zoomThreshold = 0.57 (On a DPR = 1 monitor)\n **/\nimport { useDevicePixelRatio } from '@vueuse/core'\nimport { computed } from 'vue'\n\nimport { useSettingStore } from '@/platform/settings/settingStore'\n\ninterface Camera {\n  z: number // zoom level\n}\n\nexport function useLOD(camera: Camera) {\n  const isLOD = computed(() => {\n    const { pixelRatio } = useDevicePixelRatio()\n    const baseFontSize = 14\n    const dprAdjustment = Math.sqrt(pixelRatio.value)\n\n    const settingStore = useSettingStore()\n    const minFontSize = settingStore.get('LiteGraph.Canvas.MinFontSizeForLOD') //default 8\n    const threshold =\n      Math.round((minFontSize / (baseFontSize * dprAdjustment)) * 100) / 100 //round to 2 decimal places i.e 0.86\n\n    return camera.z < threshold\n  })\n\n  return { isLOD }\n}\n","<template>\n  <div\n    data-testid=\"transform-pane\"\n    :class=\"\n      cn(\n        'absolute inset-0 w-full h-full pointer-events-none',\n        isInteracting ? 'transform-pane--interacting' : 'will-change-auto',\n        isLOD && 'isLOD'\n      )\n    \"\n    :style=\"transformStyle\"\n  >\n    <!-- Vue nodes will be rendered here -->\n    <slot />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { useRafFn } from '@vueuse/core'\nimport { computed, provide } from 'vue'\n\nimport type { LGraphCanvas } from '@/lib/litegraph/src/litegraph'\nimport { TransformStateKey } from '@/renderer/core/layout/injectionKeys'\nimport { useTransformSettling } from '@/renderer/core/layout/transform/useTransformSettling'\nimport { useTransformState } from '@/renderer/core/layout/transform/useTransformState'\nimport { useLOD } from '@/renderer/extensions/vueNodes/lod/useLOD'\nimport { cn } from '@/utils/tailwindUtil'\n\ninterface TransformPaneProps {\n  canvas?: LGraphCanvas\n}\n\nconst props = defineProps<TransformPaneProps>()\n\nconst {\n  camera,\n  transformStyle,\n  syncWithCanvas,\n  canvasToScreen,\n  screenToCanvas,\n  isNodeInViewport\n} = useTransformState()\n\nconst { isLOD } = useLOD(camera)\n\nconst canvasElement = computed(() => props.canvas?.canvas)\nconst { isTransforming: isInteracting } = useTransformSettling(canvasElement, {\n  settleDelay: 200,\n  trackPan: true\n})\n\nprovide(TransformStateKey, {\n  camera,\n  canvasToScreen,\n  screenToCanvas,\n  isNodeInViewport\n})\n\nconst emit = defineEmits<{\n  transformUpdate: []\n}>()\n\nuseRafFn(\n  () => {\n    if (!props.canvas) {\n      return\n    }\n    syncWithCanvas(props.canvas)\n    emit('transformUpdate')\n  },\n  { immediate: true }\n)\n</script>\n\n<style scoped>\n.transform-pane--interacting {\n  will-change: transform;\n}\n</style>\n","<template>\n  <div\n    v-if=\"visible && initialized\"\n    ref=\"minimapRef\"\n    class=\"minimap-main-container flex absolute bottom-[66px] right-2 md:right-11 z-1000\"\n  >\n    <MiniMapPanel\n      v-if=\"showOptionsPanel\"\n      :panel-styles=\"panelStyles\"\n      :node-colors=\"nodeColors\"\n      :show-links=\"showLinks\"\n      :show-groups=\"showGroups\"\n      :render-bypass=\"renderBypass\"\n      :render-error=\"renderError\"\n      @update-option=\"updateOption\"\n    />\n\n    <div\n      ref=\"containerRef\"\n      class=\"litegraph-minimap relative\"\n      :style=\"containerStyles\"\n    >\n      <Button\n        class=\"absolute z-10\"\n        size=\"small\"\n        text\n        severity=\"secondary\"\n        @click.stop=\"toggleOptionsPanel\"\n      >\n        <template #icon>\n          <i-lucide:settings-2 />\n        </template>\n      </Button>\n      <Button\n        class=\"absolute z-10 right-0\"\n        size=\"small\"\n        text\n        severity=\"secondary\"\n        data-testid=\"close-minmap-button\"\n        @click.stop=\"() => commandStore.execute('Comfy.Canvas.ToggleMinimap')\"\n      >\n        <template #icon>\n          <i-lucide:x />\n        </template>\n      </Button>\n\n      <hr\n        class=\"absolute top-5 bg-[#E1DED5] dark-theme:bg-[#262729] h-[1px] border-0\"\n        :style=\"{\n          width: containerStyles.width\n        }\"\n      />\n\n      <canvas\n        ref=\"canvasRef\"\n        :width=\"width\"\n        :height=\"height\"\n        class=\"minimap-canvas\"\n      />\n\n      <div class=\"minimap-viewport\" :style=\"viewportStyles\" />\n\n      <div\n        class=\"absolute inset-0\"\n        @pointerdown=\"handlePointerDown\"\n        @pointermove=\"handlePointerMove\"\n        @pointerup=\"handlePointerUp\"\n        @pointerleave=\"handlePointerUp\"\n        @wheel=\"handleWheel\"\n      />\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport Button from 'primevue/button'\nimport { onMounted, onUnmounted, ref } from 'vue'\n\nimport { useMinimap } from '@/renderer/extensions/minimap/composables/useMinimap'\nimport { useCommandStore } from '@/stores/commandStore'\n\nimport MiniMapPanel from './MiniMapPanel.vue'\n\nconst commandStore = useCommandStore()\n\nconst minimapRef = ref<HTMLDivElement>()\n\nconst {\n  initialized,\n  visible,\n  containerRef,\n  canvasRef,\n  containerStyles,\n  viewportStyles,\n  width,\n  height,\n  panelStyles,\n  nodeColors,\n  showLinks,\n  showGroups,\n  renderBypass,\n  renderError,\n  updateOption,\n  destroy,\n  handlePointerDown,\n  handlePointerMove,\n  handlePointerUp,\n  handleWheel,\n  setMinimapRef\n} = useMinimap()\n\nconst showOptionsPanel = ref(false)\n\nconst toggleOptionsPanel = () => {\n  showOptionsPanel.value = !showOptionsPanel.value\n}\n\nonMounted(() => {\n  if (minimapRef.value) {\n    setMinimapRef(minimapRef.value)\n  }\n})\n\nonUnmounted(() => {\n  destroy()\n})\n</script>\n\n<style scoped>\n.litegraph-minimap {\n  overflow: hidden;\n}\n\n.minimap-canvas {\n  display: block;\n  width: 100%;\n  height: 100%;\n  pointer-events: none;\n}\n\n.minimap-viewport {\n  position: absolute;\n  top: 0;\n  left: 0;\n  pointer-events: none;\n}\n</style>\n","/**\n * Node Z-Index Management Composable\n *\n * Provides focused functionality for managing node layering through z-index.\n * Integrates with the layout system to ensure proper visual ordering.\n */\nimport type { NodeId } from '@/platform/workflow/validation/schemas/workflowSchema'\nimport { useLayoutMutations } from '@/renderer/core/layout/operations/layoutMutations'\nimport { LayoutSource } from '@/renderer/core/layout/types'\n\ninterface NodeZIndexOptions {\n  /**\n   * Layout source for z-index mutations\n   * @default LayoutSource.Vue\n   */\n  layoutSource?: LayoutSource\n}\n\nexport function useNodeZIndex(options: NodeZIndexOptions = {}) {\n  const { layoutSource = LayoutSource.Vue } = options\n  const layoutMutations = useLayoutMutations()\n\n  /**\n   * Bring node to front (highest z-index)\n   * @param nodeId - The node to bring to front\n   * @param source - Optional source override\n   */\n  function bringNodeToFront(nodeId: NodeId, source?: LayoutSource) {\n    layoutMutations.setSource(source ?? layoutSource)\n    layoutMutations.bringNodeToFront(nodeId)\n  }\n\n  return {\n    bringNodeToFront\n  }\n}\n","/**\n * Node Event Handlers Composable\n *\n * Handles all Vue node interaction events including:\n * - Node selection with multi-select support\n * - Node collapse/expand state management\n * - Node title editing and updates\n * - Layout mutations for visual feedback\n * - Integration with LiteGraph canvas selection system\n */\nimport { createSharedComposable } from '@vueuse/core'\n\nimport type { VueNodeData } from '@/composables/graph/useGraphNodeManager'\nimport { useVueNodeLifecycle } from '@/composables/graph/useVueNodeLifecycle'\nimport { useCanvasStore } from '@/renderer/core/canvas/canvasStore'\nimport { useCanvasInteractions } from '@/renderer/core/canvas/useCanvasInteractions'\nimport { useNodeZIndex } from '@/renderer/extensions/vueNodes/composables/useNodeZIndex'\n\nfunction useNodeEventHandlersIndividual() {\n  const canvasStore = useCanvasStore()\n  const { nodeManager } = useVueNodeLifecycle()\n  const { bringNodeToFront } = useNodeZIndex()\n  const { shouldHandleNodePointerEvents } = useCanvasInteractions()\n\n  /**\n   * Handle node selection events\n   * Supports single selection and multi-select with Ctrl/Cmd\n   */\n  const handleNodeSelect = (\n    event: PointerEvent,\n    nodeData: VueNodeData,\n    wasDragging: boolean\n  ) => {\n    if (!shouldHandleNodePointerEvents.value) return\n\n    if (!canvasStore.canvas || !nodeManager.value) return\n\n    const node = nodeManager.value.getNode(nodeData.id)\n    if (!node) return\n\n    const isMultiSelect = event.ctrlKey || event.metaKey || event.shiftKey\n\n    if (isMultiSelect) {\n      // Ctrl/Cmd+click -> toggle selection\n      if (node.selected) {\n        canvasStore.canvas.deselect(node)\n      } else {\n        canvasStore.canvas.select(node)\n      }\n    } else {\n      // If it wasn't a drag: single-select the node\n      if (!wasDragging) {\n        canvasStore.canvas.deselectAll()\n        canvasStore.canvas.select(node)\n      }\n      // Regular click -> single select\n    }\n\n    // Bring node to front when clicked (similar to LiteGraph behavior)\n    // Skip if node is pinned to avoid unwanted movement\n    if (!node.flags?.pinned) {\n      bringNodeToFront(nodeData.id)\n    }\n\n    // Update canvas selection tracking\n    canvasStore.updateSelectedItems()\n  }\n\n  /**\n   * Handle node collapse/expand state changes\n   * Uses LiteGraph's native collapse method for proper state management\n   */\n  const handleNodeCollapse = (nodeId: string, collapsed: boolean) => {\n    if (!shouldHandleNodePointerEvents.value) return\n\n    if (!nodeManager.value) return\n\n    const node = nodeManager.value.getNode(nodeId)\n    if (!node) return\n\n    // Use LiteGraph's collapse method if the state needs to change\n    const currentCollapsed = node.flags?.collapsed ?? false\n    if (currentCollapsed !== collapsed) {\n      node.collapse()\n    }\n  }\n\n  /**\n   * Handle node title updates\n   * Updates the title in LiteGraph for persistence across sessions\n   */\n  const handleNodeTitleUpdate = (nodeId: string, newTitle: string) => {\n    if (!shouldHandleNodePointerEvents.value) return\n\n    if (!nodeManager.value) return\n\n    const node = nodeManager.value.getNode(nodeId)\n    if (!node) return\n\n    // Update the node title in LiteGraph for persistence\n    node.title = newTitle\n  }\n\n  /**\n   * Handle node double-click events\n   * Can be used for custom actions like opening node editor\n   */\n  const handleNodeDoubleClick = (\n    event: PointerEvent,\n    nodeData: VueNodeData\n  ) => {\n    if (!shouldHandleNodePointerEvents.value) return\n\n    if (!canvasStore.canvas || !nodeManager.value) return\n\n    const node = nodeManager.value.getNode(nodeData.id)\n    if (!node) return\n\n    // Prevent default browser behavior\n    event.preventDefault()\n\n    // TODO: add custom double-click behavior here\n    // For now, ensure node is selected\n    if (!node.selected) {\n      handleNodeSelect(event, nodeData, false)\n    }\n  }\n\n  /**\n   * Handle node right-click context menu events\n   * Integrates with LiteGraph's context menu system\n   */\n  const handleNodeRightClick = (event: PointerEvent, nodeData: VueNodeData) => {\n    if (!shouldHandleNodePointerEvents.value) return\n\n    if (!canvasStore.canvas || !nodeManager.value) return\n\n    const node = nodeManager.value.getNode(nodeData.id)\n    if (!node) return\n\n    // Prevent default context menu\n    event.preventDefault()\n\n    // Select the node if not already selected\n    if (!node.selected) {\n      handleNodeSelect(event, nodeData, false)\n    }\n\n    // Let LiteGraph handle the context menu\n    // The canvas will handle showing the appropriate context menu\n  }\n\n  /**\n   * Handle node drag start events\n   * Prepares node for dragging and sets appropriate visual state\n   */\n  const handleNodeDragStart = (event: DragEvent, nodeData: VueNodeData) => {\n    if (!shouldHandleNodePointerEvents.value) return\n\n    if (!canvasStore.canvas || !nodeManager.value) return\n\n    const node = nodeManager.value.getNode(nodeData.id)\n    if (!node) return\n\n    // Ensure node is selected before dragging\n    if (!node.selected) {\n      // Create a synthetic pointer event for selection\n      const syntheticEvent = new PointerEvent('pointerdown', {\n        ctrlKey: event.ctrlKey,\n        metaKey: event.metaKey,\n        bubbles: true\n      })\n      handleNodeSelect(syntheticEvent, nodeData, false)\n    }\n\n    // Set drag data for potential drop operations\n    if (event.dataTransfer) {\n      event.dataTransfer.setData('application/comfy-node-id', nodeData.id)\n      event.dataTransfer.effectAllowed = 'move'\n    }\n  }\n\n  /**\n   * Batch select multiple nodes\n   * Useful for selection toolbox or area selection\n   */\n  const selectNodes = (nodeIds: string[], addToSelection = false) => {\n    if (!shouldHandleNodePointerEvents.value) return\n\n    if (!canvasStore.canvas || !nodeManager.value) return\n\n    if (!addToSelection) {\n      canvasStore.canvas.deselectAll()\n    }\n\n    nodeIds.forEach((nodeId) => {\n      const node = nodeManager.value?.getNode(nodeId)\n      if (node && canvasStore.canvas) {\n        canvasStore.canvas.select(node)\n      }\n    })\n\n    canvasStore.updateSelectedItems()\n  }\n\n  /**\n   * Deselect specific nodes\n   */\n  const deselectNodes = (nodeIds: string[]) => {\n    if (!shouldHandleNodePointerEvents.value) return\n\n    if (!canvasStore.canvas || !nodeManager.value) return\n\n    nodeIds.forEach((nodeId) => {\n      const node = nodeManager.value?.getNode(nodeId)\n      if (node) {\n        node.selected = false\n      }\n    })\n\n    canvasStore.updateSelectedItems()\n  }\n\n  return {\n    // Core event handlers\n    handleNodeSelect,\n    handleNodeCollapse,\n    handleNodeTitleUpdate,\n    handleNodeDoubleClick,\n    handleNodeRightClick,\n    handleNodeDragStart,\n\n    // Batch operations\n    selectNodes,\n    deselectNodes\n  }\n}\n\nexport const useNodeEventHandlers = createSharedComposable(\n  useNodeEventHandlersIndividual\n)\n","import { storeToRefs } from 'pinia'\nimport {\n  type CSSProperties,\n  type MaybeRefOrGetter,\n  computed,\n  inject,\n  ref,\n  toValue\n} from 'vue'\n\nimport { useCanvasStore } from '@/renderer/core/canvas/canvasStore'\nimport { TransformStateKey } from '@/renderer/core/layout/injectionKeys'\nimport { useLayoutMutations } from '@/renderer/core/layout/operations/layoutMutations'\nimport { layoutStore } from '@/renderer/core/layout/store/layoutStore'\nimport { LayoutSource, type Point } from '@/renderer/core/layout/types'\n\n/**\n * Composable for individual Vue node components\n * Uses customRef for shared write access with Canvas renderer\n */\nexport function useNodeLayout(nodeIdMaybe: MaybeRefOrGetter<string>) {\n  const nodeId = toValue(nodeIdMaybe)\n  const mutations = useLayoutMutations()\n  const { selectedNodeIds } = storeToRefs(useCanvasStore())\n\n  // Get transform utilities from TransformPane if available\n  const transformState = inject(TransformStateKey)\n\n  // Get the customRef for this node (shared write access)\n  const layoutRef = layoutStore.getNodeLayoutRef(nodeId)\n\n  // Computed properties for easy access\n  const position = computed(() => {\n    const layout = layoutRef.value\n    const pos = layout?.position ?? { x: 0, y: 0 }\n    return pos\n  })\n  const size = computed(\n    () => layoutRef.value?.size ?? { width: 200, height: 100 }\n  )\n  const bounds = computed(\n    () =>\n      layoutRef.value?.bounds ?? {\n        x: position.value.x,\n        y: position.value.y,\n        width: size.value.width,\n        height: size.value.height\n      }\n  )\n  const isVisible = computed(() => layoutRef.value?.visible ?? true)\n  const zIndex = computed(() => layoutRef.value?.zIndex ?? 0)\n\n  // Drag state\n  const isDragging = ref(false)\n  let dragStartPos: Point | null = null\n  let dragStartMouse: Point | null = null\n  let otherSelectedNodesStartPositions: Map<string, Point> | null = null\n\n  /**\n   * Start dragging the node\n   */\n  function startDrag(event: PointerEvent) {\n    if (!layoutRef.value || !transformState) return\n\n    isDragging.value = true\n    dragStartPos = { ...position.value }\n    dragStartMouse = { x: event.clientX, y: event.clientY }\n\n    // capture the starting positions of all other selected nodes\n    if (selectedNodeIds?.value?.has(nodeId) && selectedNodeIds.value.size > 1) {\n      otherSelectedNodesStartPositions = new Map()\n\n      // Iterate through all selected node IDs\n      for (const id of selectedNodeIds.value) {\n        // Skip the current node being dragged\n        if (id === nodeId) continue\n\n        const nodeLayout = layoutStore.getNodeLayoutRef(id).value\n        if (nodeLayout) {\n          otherSelectedNodesStartPositions.set(id, { ...nodeLayout.position })\n        }\n      }\n    } else {\n      otherSelectedNodesStartPositions = null\n    }\n\n    // Set mutation source\n    mutations.setSource(LayoutSource.Vue)\n\n    // Capture pointer\n    if (!(event.target instanceof HTMLElement)) return\n    event.target.setPointerCapture(event.pointerId)\n  }\n\n  /**\n   * Handle drag movement\n   */\n  const handleDrag = (event: PointerEvent) => {\n    if (\n      !isDragging.value ||\n      !dragStartPos ||\n      !dragStartMouse ||\n      !transformState\n    ) {\n      return\n    }\n\n    // Calculate mouse delta in screen coordinates\n    const mouseDelta = {\n      x: event.clientX - dragStartMouse.x,\n      y: event.clientY - dragStartMouse.y\n    }\n\n    // Convert to canvas coordinates\n    const canvasOrigin = transformState.screenToCanvas({ x: 0, y: 0 })\n    const canvasWithDelta = transformState.screenToCanvas(mouseDelta)\n    const canvasDelta = {\n      x: canvasWithDelta.x - canvasOrigin.x,\n      y: canvasWithDelta.y - canvasOrigin.y\n    }\n\n    // Calculate new position for the current node\n    const newPosition = {\n      x: dragStartPos.x + canvasDelta.x,\n      y: dragStartPos.y + canvasDelta.y\n    }\n\n    // Apply mutation through the layout system\n    mutations.moveNode(nodeId, newPosition)\n\n    // If we're dragging multiple selected nodes, move them all together\n    if (\n      otherSelectedNodesStartPositions &&\n      otherSelectedNodesStartPositions.size > 0\n    ) {\n      for (const [otherNodeId, startPos] of otherSelectedNodesStartPositions) {\n        const newOtherPosition = {\n          x: startPos.x + canvasDelta.x,\n          y: startPos.y + canvasDelta.y\n        }\n        mutations.moveNode(otherNodeId, newOtherPosition)\n      }\n    }\n  }\n\n  /**\n   * End dragging\n   */\n  function endDrag(event: PointerEvent) {\n    if (!isDragging.value) return\n\n    isDragging.value = false\n    dragStartPos = null\n    dragStartMouse = null\n    otherSelectedNodesStartPositions = null\n\n    // Release pointer\n    if (!(event.target instanceof HTMLElement)) return\n    event.target.releasePointerCapture(event.pointerId)\n  }\n\n  /**\n   * Update node position directly (without drag)\n   */\n  function moveTo(position: Point) {\n    mutations.setSource(LayoutSource.Vue)\n    mutations.moveNode(nodeId, position)\n  }\n\n  /**\n   * Update node size\n   */\n  function resize(newSize: { width: number; height: number }) {\n    mutations.setSource(LayoutSource.Vue)\n    mutations.resizeNode(nodeId, newSize)\n  }\n\n  return {\n    // Reactive state (via customRef)\n    layoutRef,\n    position,\n    size,\n    bounds,\n    isVisible,\n    zIndex,\n    isDragging,\n\n    // Mutations\n    moveTo,\n    resize,\n\n    // Drag handlers\n    startDrag,\n    handleDrag,\n    endDrag,\n\n    // Computed styles for Vue templates\n    nodeStyle: computed(\n      (): CSSProperties => ({\n        position: 'absolute' as const,\n        left: `${position.value.x}px`,\n        top: `${position.value.y}px`,\n        width: `${size.value.width}px`,\n        height: `${size.value.height}px`,\n        zIndex: zIndex.value,\n        cursor: isDragging.value ? 'grabbing' : 'grab'\n      })\n    )\n  }\n}\n","import { type MaybeRefOrGetter, computed, onUnmounted, ref, toValue } from 'vue'\n\nimport type { VueNodeData } from '@/composables/graph/useGraphNodeManager'\nimport { useCanvasInteractions } from '@/renderer/core/canvas/useCanvasInteractions'\nimport { layoutStore } from '@/renderer/core/layout/store/layoutStore'\nimport { useNodeLayout } from '@/renderer/extensions/vueNodes/layout/useNodeLayout'\n\n// Treat tiny pointer jitter as a click, not a drag\nconst DRAG_THRESHOLD_PX = 4\n\nexport function useNodePointerInteractions(\n  nodeDataMaybe: MaybeRefOrGetter<VueNodeData | null>,\n  onPointerUp: (\n    event: PointerEvent,\n    nodeData: VueNodeData,\n    wasDragging: boolean\n  ) => void\n) {\n  const nodeData = computed(() => {\n    const value = toValue(nodeDataMaybe)\n    if (!value) {\n      console.warn(\n        'useNodePointerInteractions: nodeDataMaybe resolved to null/undefined'\n      )\n      return null\n    }\n    return value\n  })\n\n  // Avoid potential null access during component initialization\n  const nodeIdComputed = computed(() => nodeData.value?.id ?? '')\n  const { startDrag, endDrag, handleDrag } = useNodeLayout(nodeIdComputed)\n  // Use canvas interactions for proper wheel event handling and pointer event capture control\n  const { forwardEventToCanvas, shouldHandleNodePointerEvents } =\n    useCanvasInteractions()\n\n  // Drag state for styling\n  const isDragging = ref(false)\n  const dragStyle = computed(() => {\n    if (nodeData.value?.flags?.pinned) {\n      return { cursor: 'default' }\n    }\n    return { cursor: isDragging.value ? 'grabbing' : 'grab' }\n  })\n  const startPosition = ref({ x: 0, y: 0 })\n\n  const handlePointerDown = (event: PointerEvent) => {\n    if (!nodeData.value) {\n      console.warn(\n        'LGraphNode: nodeData is null/undefined in handlePointerDown'\n      )\n      return\n    }\n\n    // Only start drag on left-click (button 0)\n    if (event.button !== 0) {\n      return\n    }\n\n    // Don't handle pointer events when canvas is in panning mode - forward to canvas instead\n    if (!shouldHandleNodePointerEvents.value) {\n      forwardEventToCanvas(event)\n      return\n    }\n\n    // Don't allow dragging if node is pinned (but still record position for selection)\n    startPosition.value = { x: event.clientX, y: event.clientY }\n    if (nodeData.value.flags?.pinned) {\n      return\n    }\n\n    // Start drag using layout system\n    isDragging.value = true\n\n    // Set Vue node dragging state for selection toolbox\n    layoutStore.isDraggingVueNodes.value = true\n\n    startDrag(event)\n  }\n\n  const handlePointerMove = (event: PointerEvent) => {\n    if (isDragging.value) {\n      void handleDrag(event)\n    }\n  }\n\n  /**\n   * Centralized cleanup function for drag state\n   * Ensures consistent cleanup across all drag termination scenarios\n   */\n  const cleanupDragState = () => {\n    isDragging.value = false\n    layoutStore.isDraggingVueNodes.value = false\n  }\n\n  /**\n   * Safely ends drag operation with proper error handling\n   * @param event - PointerEvent to end the drag with\n   */\n  const safeDragEnd = async (event: PointerEvent): Promise<void> => {\n    try {\n      await endDrag(event)\n    } catch (error) {\n      console.error('Error during endDrag:', error)\n    } finally {\n      cleanupDragState()\n    }\n  }\n\n  /**\n   * Common drag termination handler with fallback cleanup\n   */\n  const handleDragTermination = (event: PointerEvent, errorContext: string) => {\n    safeDragEnd(event).catch((error) => {\n      console.error(`Failed to complete ${errorContext}:`, error)\n      cleanupDragState() // Fallback cleanup\n    })\n  }\n\n  const handlePointerUp = (event: PointerEvent) => {\n    if (isDragging.value) {\n      handleDragTermination(event, 'drag end')\n    }\n\n    // Don't emit node-click when canvas is in panning mode - forward to canvas instead\n    if (!shouldHandleNodePointerEvents.value) {\n      forwardEventToCanvas(event)\n      return\n    }\n\n    // Emit node-click for selection handling in GraphCanvas\n    const dx = event.clientX - startPosition.value.x\n    const dy = event.clientY - startPosition.value.y\n    const wasDragging = Math.hypot(dx, dy) > DRAG_THRESHOLD_PX\n\n    if (!nodeData?.value) return\n    onPointerUp(event, nodeData.value, wasDragging)\n  }\n\n  /**\n   * Handles pointer cancellation events (e.g., touch cancelled by browser)\n   * Ensures drag state is properly cleaned up when pointer interaction is interrupted\n   */\n  const handlePointerCancel = (event: PointerEvent) => {\n    if (!isDragging.value) return\n    handleDragTermination(event, 'drag cancellation')\n  }\n\n  /**\n   * Handles right-click during drag operations\n   * Cancels the current drag to prevent context menu from appearing while dragging\n   */\n  const handleContextMenu = (event: MouseEvent) => {\n    if (!isDragging.value) return\n\n    event.preventDefault()\n    // Simply cleanup state without calling endDrag to avoid synthetic event creation\n    cleanupDragState()\n  }\n\n  // Cleanup on unmount to prevent resource leaks\n  onUnmounted(() => {\n    if (!isDragging.value) return\n    cleanupDragState()\n  })\n\n  const pointerHandlers = {\n    onPointerdown: handlePointerDown,\n    onPointermove: handlePointerMove,\n    onPointerup: handlePointerUp,\n    onPointercancel: handlePointerCancel,\n    onContextmenu: handleContextMenu\n  }\n\n  return {\n    isDragging,\n    dragStyle,\n    pointerHandlers\n  }\n}\n","/**\n * Generic Vue Element Tracking System\n *\n * Automatically tracks DOM size and position changes for Vue-rendered elements\n * and syncs them to the layout store. Uses a single shared ResizeObserver for\n * performance, with elements identified by configurable data attributes.\n *\n * Supports different element types (nodes, slots, widgets, etc.) with\n * customizable data attributes and update handlers.\n */\nimport {\n  type MaybeRefOrGetter,\n  getCurrentInstance,\n  onMounted,\n  onUnmounted,\n  toValue\n} from 'vue'\n\nimport { useSharedCanvasPositionConversion } from '@/composables/element/useCanvasPositionConversion'\nimport { LiteGraph } from '@/lib/litegraph/src/litegraph'\nimport { layoutStore } from '@/renderer/core/layout/store/layoutStore'\nimport type { Bounds, NodeId } from '@/renderer/core/layout/types'\n\nimport { syncNodeSlotLayoutsFromDOM } from './useSlotElementTracking'\n\n/**\n * Generic update item for element bounds tracking\n */\ninterface ElementBoundsUpdate {\n  /** Element identifier (could be nodeId, widgetId, slotId, etc.) */\n  id: string\n  /** Updated bounds */\n  bounds: Bounds\n}\n\n/**\n * Configuration for different types of tracked elements\n */\ninterface ElementTrackingConfig {\n  /** Data attribute name (e.g., 'nodeId') */\n  dataAttribute: string\n  /** Handler for processing bounds updates */\n  updateHandler: (updates: ElementBoundsUpdate[]) => void\n}\n\n/**\n * Registry of tracking configurations by element type\n */\nconst trackingConfigs: Map<string, ElementTrackingConfig> = new Map([\n  [\n    'node',\n    {\n      dataAttribute: 'nodeId',\n      updateHandler: (updates) => {\n        const nodeUpdates = updates.map(({ id, bounds }) => ({\n          nodeId: id as NodeId,\n          bounds\n        }))\n        layoutStore.batchUpdateNodeBounds(nodeUpdates)\n      }\n    }\n  ]\n])\n\n// Single ResizeObserver instance for all Vue elements\nconst resizeObserver = new ResizeObserver((entries) => {\n  // Canvas is ready when this code runs; no defensive guards needed.\n  const conv = useSharedCanvasPositionConversion()\n  // Group updates by type, then flush via each config's handler\n  const updatesByType = new Map<string, ElementBoundsUpdate[]>()\n  // Track nodes whose slots should be resynced after node size changes\n  const nodesNeedingSlotResync = new Set<string>()\n\n  for (const entry of entries) {\n    if (!(entry.target instanceof HTMLElement)) continue\n    const element = entry.target\n\n    // Find which type this element belongs to\n    let elementType: string | undefined\n    let elementId: string | undefined\n\n    for (const [type, config] of trackingConfigs) {\n      const id = element.dataset[config.dataAttribute]\n      if (id) {\n        elementType = type\n        elementId = id\n        break\n      }\n    }\n\n    if (!elementType || !elementId) continue\n\n    // Use contentBoxSize when available; fall back to contentRect for older engines/tests\n    const contentBox = Array.isArray(entry.contentBoxSize)\n      ? entry.contentBoxSize[0]\n      : {\n          inlineSize: entry.contentRect.width,\n          blockSize: entry.contentRect.height\n        }\n    const width = contentBox.inlineSize\n    const height = contentBox.blockSize\n\n    // Screen-space rect\n    const rect = element.getBoundingClientRect()\n    const [cx, cy] = conv.clientPosToCanvasPos([rect.left, rect.top])\n    const topLeftCanvas = { x: cx, y: cy }\n    const bounds: Bounds = {\n      x: topLeftCanvas.x,\n      y: topLeftCanvas.y + LiteGraph.NODE_TITLE_HEIGHT,\n      width: Math.max(0, width),\n      height: Math.max(0, height - LiteGraph.NODE_TITLE_HEIGHT)\n    }\n\n    let updates = updatesByType.get(elementType)\n    if (!updates) {\n      updates = []\n      updatesByType.set(elementType, updates)\n    }\n    updates.push({ id: elementId, bounds })\n\n    // If this entry is a node, mark it for slot layout resync\n    if (elementType === 'node' && elementId) {\n      nodesNeedingSlotResync.add(elementId)\n    }\n  }\n\n  // Flush per-type\n  for (const [type, updates] of updatesByType) {\n    const config = trackingConfigs.get(type)\n    if (config && updates.length) config.updateHandler(updates)\n  }\n\n  // After node bounds are updated, refresh slot cached offsets and layouts\n  if (nodesNeedingSlotResync.size > 0) {\n    for (const nodeId of nodesNeedingSlotResync) {\n      syncNodeSlotLayoutsFromDOM(nodeId)\n    }\n  }\n})\n\n/**\n * Tracks DOM element size/position changes for a Vue component and syncs to layout store\n *\n * Sets up automatic ResizeObserver tracking when the component mounts and cleans up\n * when unmounted. The tracked element is identified by a data attribute set on the\n * component's root DOM element.\n *\n * @param appIdentifier - Application-level identifier for this tracked element (not a DOM ID)\n *                       Example: node ID like 'node-123', widget ID like 'widget-456'\n * @param trackingType - Type of element being tracked, determines which tracking config to use\n *                      Example: 'node' for Vue nodes, 'widget' for UI widgets\n *\n * @example\n * ```ts\n * // Track a Vue node component with ID 'my-node-123'\n * useVueElementTracking('my-node-123', 'node')\n *\n * // Would set data-node-id=\"my-node-123\" on the component's root element\n * // and sync size changes to layoutStore.batchUpdateNodeBounds()\n * ```\n */\nexport function useVueElementTracking(\n  appIdentifierMaybe: MaybeRefOrGetter<string>,\n  trackingType: string\n) {\n  const appIdentifier = toValue(appIdentifierMaybe)\n  onMounted(() => {\n    const element = getCurrentInstance()?.proxy?.$el\n    if (!(element instanceof HTMLElement) || !appIdentifier) return\n\n    const config = trackingConfigs.get(trackingType)\n    if (!config) return\n\n    // Set the data attribute expected by the RO pipeline for this type\n    element.dataset[config.dataAttribute] = appIdentifier\n    resizeObserver.observe(element)\n  })\n\n  onUnmounted(() => {\n    const element = getCurrentInstance()?.proxy?.$el\n    if (!(element instanceof HTMLElement)) return\n\n    const config = trackingConfigs.get(trackingType)\n    if (!config) return\n\n    // Remove the data attribute and observer\n    delete element.dataset[config.dataAttribute]\n    resizeObserver.unobserve(element)\n  })\n}\n","import { storeToRefs } from 'pinia'\nimport { type MaybeRefOrGetter, computed, toValue } from 'vue'\n\nimport { useExecutionStore } from '@/stores/executionStore'\n\n/**\n * Composable for managing execution state of Vue-based nodes\n *\n * Provides reactive access to execution state and progress for a specific node\n * by injecting execution data from the parent GraphCanvas provider.\n *\n * @param nodeLocatorIdMaybe - Locator ID (root or subgraph scoped) of the node to track\n * @returns Object containing reactive execution state and progress\n */\nexport const useNodeExecutionState = (\n  nodeLocatorIdMaybe: MaybeRefOrGetter<string | undefined>\n) => {\n  const locatorId = computed(() => toValue(nodeLocatorIdMaybe) ?? '')\n  const { nodeLocationProgressStates } = storeToRefs(useExecutionStore())\n\n  const progressState = computed(() => {\n    const id = locatorId.value\n    return id ? nodeLocationProgressStates.value[id] : undefined\n  })\n\n  const executing = computed(() => progressState.value?.state === 'running')\n\n  const progress = computed(() => {\n    const state = progressState.value\n    return state && state.max > 0 ? state.value / state.max : undefined\n  })\n\n  const progressPercentage = computed(() => {\n    const prog = progress.value\n    return prog !== undefined ? Math.round(prog * 100) : undefined\n  })\n\n  const executionState = computed(() => {\n    const state = progressState.value\n    if (!state) return 'idle'\n    return state.state\n  })\n\n  return {\n    executing,\n    progress,\n    progressPercentage,\n    progressState,\n    executionState\n  }\n}\n","import { storeToRefs } from 'pinia'\nimport { type MaybeRefOrGetter, type Ref, computed, toValue } from 'vue'\n\nimport { useWorkflowStore } from '@/platform/workflow/management/stores/workflowStore'\nimport { useNodeOutputStore } from '@/stores/imagePreviewStore'\n\nexport const useNodePreviewState = (\n  nodeIdMaybe: MaybeRefOrGetter<string>,\n  options?: {\n    isCollapsed?: Ref<boolean>\n  }\n) => {\n  const nodeId = toValue(nodeIdMaybe)\n  const workflowStore = useWorkflowStore()\n  const { nodePreviewImages } = storeToRefs(useNodeOutputStore())\n\n  const locatorId = computed(() => workflowStore.nodeIdToNodeLocatorId(nodeId))\n\n  const previewUrls = computed(() => {\n    const key = locatorId.value\n    if (!key) return undefined\n    const urls = nodePreviewImages.value[key]\n    return urls?.length ? urls : undefined\n  })\n\n  const hasPreview = computed(() => !!previewUrls.value?.length)\n\n  const latestPreviewUrl = computed(() => {\n    const urls = previewUrls.value\n    return urls?.length ? urls.at(-1) : ''\n  })\n\n  const shouldShowPreviewImg = computed(() => {\n    if (!options?.isCollapsed) {\n      return hasPreview.value\n    }\n    return !options.isCollapsed.value && hasPreview.value\n  })\n\n  return {\n    locatorId,\n    previewUrls,\n    hasPreview,\n    latestPreviewUrl,\n    shouldShowPreviewImg\n  }\n}\n","<template>\n  <div v-if=\"renderError\" class=\"node-error p-2 text-red-500 text-sm\">\n    {{ $t('Node Render Error') }}\n  </div>\n  <div\n    v-else\n    ref=\"nodeContainerRef\"\n    :data-node-id=\"nodeData.id\"\n    :class=\"\n      cn(\n        'bg-white dark-theme:bg-charcoal-800',\n        'lg-node absolute rounded-2xl',\n        'border-2 border-solid border-sand-100 dark-theme:border-charcoal-600',\n        // hover (only when node should handle events)\n        shouldHandleNodePointerEvents &&\n          'hover:ring-7 ring-gray-500/50 dark-theme:ring-gray-500/20',\n        'outline-transparent -outline-offset-2 outline-2',\n        borderClass,\n        outlineClass,\n        {\n          'animate-pulse': executing,\n          'opacity-50 before:rounded-2xl before:pointer-events-none before:absolute before:bg-bypass/60 before:inset-0':\n            bypassed,\n          'opacity-50 before:rounded-2xl before:pointer-events-none before:absolute before:inset-0':\n            muted,\n          'will-change-transform': isDragging\n        },\n\n        shouldHandleNodePointerEvents\n          ? 'pointer-events-auto'\n          : 'pointer-events-none'\n      )\n    \"\n    :style=\"[\n      {\n        transform: `translate(${position.x ?? 0}px, ${(position.y ?? 0) - LiteGraph.NODE_TITLE_HEIGHT}px)`,\n        zIndex: zIndex,\n        backgroundColor: nodeBodyBackgroundColor,\n        opacity: nodeOpacity\n      },\n      dragStyle\n    ]\"\n    v-bind=\"pointerHandlers\"\n    @wheel=\"handleWheel\"\n    @contextmenu=\"handleContextMenu\"\n  >\n    <div class=\"flex items-center\">\n      <template v-if=\"isCollapsed\">\n        <SlotConnectionDot multi class=\"absolute left-0 -translate-x-1/2\" />\n        <SlotConnectionDot multi class=\"absolute right-0 translate-x-1/2\" />\n      </template>\n      <NodeHeader\n        v-memo=\"[\n          nodeData.title,\n          nodeData.color,\n          nodeData.bgcolor,\n          isCollapsed,\n          nodeData.flags?.pinned\n        ]\"\n        :node-data=\"nodeData\"\n        :readonly=\"readonly\"\n        :collapsed=\"isCollapsed\"\n        @collapse=\"handleCollapse\"\n        @update:title=\"handleHeaderTitleUpdate\"\n        @enter-subgraph=\"handleEnterSubgraph\"\n      />\n    </div>\n\n    <div\n      v-if=\"isCollapsed && executing && progress !== undefined\"\n      :class=\"\n        cn(\n          'absolute inset-x-4 -bottom-[1px] translate-y-1/2 rounded-full',\n          progressClasses\n        )\n      \"\n      :style=\"{ width: `${Math.min(progress * 100, 100)}%` }\"\n    />\n\n    <template v-if=\"!isCollapsed\">\n      <div class=\"mb-4 relative\">\n        <div :class=\"separatorClasses\" />\n        <!-- Progress bar for executing state -->\n        <div\n          v-if=\"executing && progress !== undefined\"\n          :class=\"\n            cn(\n              'absolute inset-x-0 top-1/2 -translate-y-1/2',\n              !!(progress < 1) && 'rounded-r-full',\n              progressClasses\n            )\n          \"\n          :style=\"{ width: `${Math.min(progress * 100, 100)}%` }\"\n        />\n      </div>\n\n      <!-- Node Body - rendered based on LOD level and collapsed state -->\n      <div\n        class=\"flex flex-col gap-4 pb-4\"\n        :data-testid=\"`node-body-${nodeData.id}`\"\n      >\n        <!-- Slots only rendered at full detail -->\n        <NodeSlots\n          v-memo=\"[\n            nodeData.inputs?.length,\n            nodeData.outputs?.length,\n            executionStore.lastNodeErrors\n          ]\"\n          :node-data=\"nodeData\"\n          :readonly=\"readonly\"\n        />\n\n        <!-- Widgets rendered at reduced+ detail -->\n        <NodeWidgets\n          v-if=\"nodeData.widgets?.length\"\n          v-memo=\"[nodeData.widgets?.length]\"\n          :node-data=\"nodeData\"\n          :readonly=\"readonly\"\n        />\n\n        <!-- Custom content at reduced+ detail -->\n        <NodeContent\n          v-if=\"hasCustomContent\"\n          :node-data=\"nodeData\"\n          :readonly=\"readonly\"\n          :image-urls=\"nodeImageUrls\"\n        />\n        <!-- Live preview image -->\n        <div\n          v-if=\"shouldShowPreviewImg\"\n          v-memo=\"[latestPreviewUrl]\"\n          class=\"px-4\"\n        >\n          <img\n            :src=\"latestPreviewUrl\"\n            alt=\"preview\"\n            class=\"w-full max-h-64 object-contain\"\n          />\n        </div>\n      </div>\n    </template>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { storeToRefs } from 'pinia'\nimport { computed, inject, onErrorCaptured, onMounted, provide, ref } from 'vue'\n\nimport type { VueNodeData } from '@/composables/graph/useGraphNodeManager'\nimport { toggleNodeOptions } from '@/composables/graph/useMoreOptionsMenu'\nimport { useErrorHandling } from '@/composables/useErrorHandling'\nimport { LiteGraph } from '@/lib/litegraph/src/litegraph'\nimport { useSettingStore } from '@/platform/settings/settingStore'\nimport { useCanvasStore } from '@/renderer/core/canvas/canvasStore'\nimport { useCanvasInteractions } from '@/renderer/core/canvas/useCanvasInteractions'\nimport { TransformStateKey } from '@/renderer/core/layout/injectionKeys'\nimport { useNodeEventHandlers } from '@/renderer/extensions/vueNodes/composables/useNodeEventHandlers'\nimport { useNodePointerInteractions } from '@/renderer/extensions/vueNodes/composables/useNodePointerInteractions'\nimport { useVueElementTracking } from '@/renderer/extensions/vueNodes/composables/useVueNodeResizeTracking'\nimport { useNodeExecutionState } from '@/renderer/extensions/vueNodes/execution/useNodeExecutionState'\nimport { useNodeLayout } from '@/renderer/extensions/vueNodes/layout/useNodeLayout'\nimport { useNodePreviewState } from '@/renderer/extensions/vueNodes/preview/useNodePreviewState'\nimport { applyLightThemeColor } from '@/renderer/extensions/vueNodes/utils/nodeStyleUtils'\nimport { app } from '@/scripts/app'\nimport { useExecutionStore } from '@/stores/executionStore'\nimport { useNodeOutputStore } from '@/stores/imagePreviewStore'\nimport { useColorPaletteStore } from '@/stores/workspace/colorPaletteStore'\nimport {\n  getLocatorIdFromNodeData,\n  getNodeByLocatorId\n} from '@/utils/graphTraversalUtil'\nimport { cn } from '@/utils/tailwindUtil'\n\nimport NodeContent from './NodeContent.vue'\nimport NodeHeader from './NodeHeader.vue'\nimport NodeSlots from './NodeSlots.vue'\nimport NodeWidgets from './NodeWidgets.vue'\nimport SlotConnectionDot from './SlotConnectionDot.vue'\n\n// Extended props for main node component\ninterface LGraphNodeProps {\n  nodeData: VueNodeData\n  readonly?: boolean\n  error?: string | null\n  zoomLevel?: number\n}\n\nconst {\n  nodeData,\n  error = null,\n  readonly = false\n} = defineProps<LGraphNodeProps>()\n\nconst {\n  handleNodeCollapse,\n  handleNodeTitleUpdate,\n  handleNodeSelect,\n  handleNodeRightClick\n} = useNodeEventHandlers()\n\nuseVueElementTracking(() => nodeData.id, 'node')\n\nconst { selectedNodeIds } = storeToRefs(useCanvasStore())\n\n// Inject transform state for coordinate conversion\nconst transformState = inject(TransformStateKey)\n\n// Computed selection state - only this node re-evaluates when its selection changes\nconst isSelected = computed(() => {\n  return selectedNodeIds.value.has(nodeData.id)\n})\n\n// Use execution state composable\nconst nodeLocatorId = computed(() => getLocatorIdFromNodeData(nodeData))\nconst { executing, progress } = useNodeExecutionState(nodeLocatorId)\n\n// Direct access to execution store for error state\nconst executionStore = useExecutionStore()\nconst hasExecutionError = computed(\n  () => executionStore.lastExecutionErrorNodeId === nodeData.id\n)\n\nconst hasAnyError = computed((): boolean => {\n  return !!(\n    hasExecutionError.value ||\n    nodeData.hasErrors ||\n    error ||\n    (executionStore.lastNodeErrors?.[nodeData.id]?.errors.length ?? 0) > 0\n  )\n})\n\nconst bypassed = computed((): boolean => nodeData.mode === 4)\nconst muted = computed((): boolean => nodeData.mode === 2) // NEVER mode\n\nconst nodeBodyBackgroundColor = computed(() => {\n  const colorPaletteStore = useColorPaletteStore()\n\n  if (!nodeData.bgcolor) {\n    return ''\n  }\n\n  return applyLightThemeColor(\n    nodeData.bgcolor,\n    Boolean(colorPaletteStore.completedActivePalette.light_theme)\n  )\n})\n\nconst nodeOpacity = computed(\n  () => useSettingStore().get('Comfy.Node.Opacity') ?? 1\n)\n\n// Use canvas interactions for proper wheel event handling and pointer event capture control\nconst { handleWheel, shouldHandleNodePointerEvents } = useCanvasInteractions()\n\n// Error boundary implementation\nconst renderError = ref<string | null>(null)\nconst { toastErrorHandler } = useErrorHandling()\n\nonErrorCaptured((error) => {\n  renderError.value = error.message\n  toastErrorHandler(error)\n  return false // Prevent error propagation\n})\n\n// Use layout system for node position and dragging\nconst { position, size, zIndex, resize } = useNodeLayout(() => nodeData.id)\nconst { pointerHandlers, isDragging, dragStyle } = useNodePointerInteractions(\n  () => nodeData,\n  handleNodeSelect\n)\n\n// Handle right-click context menu\nconst handleContextMenu = (event: MouseEvent) => {\n  event.preventDefault()\n  event.stopPropagation()\n\n  // First handle the standard right-click behavior (selection)\n  handleNodeRightClick(event as PointerEvent, nodeData)\n\n  // Show the node options menu at the cursor position\n  const targetElement = event.currentTarget as HTMLElement\n  if (targetElement) {\n    toggleNodeOptions(event, targetElement, false)\n  }\n}\n\nonMounted(() => {\n  if (size.value && transformState?.camera) {\n    const scale = transformState.camera.z\n    const screenSize = {\n      width: size.value.width * scale,\n      height: size.value.height * scale\n    }\n    resize(screenSize)\n  }\n})\n\n// Track collapsed state\nconst isCollapsed = computed(() => nodeData.flags?.collapsed ?? false)\n\n// Check if node has custom content (like image outputs)\nconst hasCustomContent = computed(() => {\n  // Show custom content if node has image outputs\n  return nodeImageUrls.value.length > 0\n})\n\n// Computed classes and conditions for better reusability\nconst separatorClasses =\n  'bg-sand-100 dark-theme:bg-charcoal-600 h-px mx-0 w-full lod-toggle'\nconst progressClasses = 'h-2 bg-primary-500 transition-all duration-300'\n\nconst { latestPreviewUrl, shouldShowPreviewImg } = useNodePreviewState(\n  () => nodeData.id,\n  {\n    isCollapsed\n  }\n)\n\nconst borderClass = computed(() => {\n  return (\n    (hasAnyError.value && 'border-error dark-theme:border-error') ||\n    (executing.value && 'border-blue-500')\n  )\n})\n\nconst outlineClass = computed(() => {\n  return (\n    isSelected.value &&\n    ((hasAnyError.value && 'outline-error dark-theme:outline-error') ||\n      (executing.value && 'outline-blue-500 dark-theme:outline-blue-500') ||\n      'outline-black dark-theme:outline-white')\n  )\n})\n\n// Event handlers\nconst handleCollapse = () => {\n  handleNodeCollapse(nodeData.id, !isCollapsed.value)\n}\n\nconst handleHeaderTitleUpdate = (newTitle: string) => {\n  handleNodeTitleUpdate(nodeData.id, newTitle)\n}\n\nconst handleEnterSubgraph = () => {\n  const graph = app.graph?.rootGraph || app.graph\n  if (!graph) {\n    console.warn('LGraphNode: No graph available for subgraph navigation')\n    return\n  }\n\n  const locatorId = getLocatorIdFromNodeData(nodeData)\n\n  const litegraphNode = getNodeByLocatorId(graph, locatorId)\n\n  if (!litegraphNode?.isSubgraphNode() || !('subgraph' in litegraphNode)) {\n    console.warn('LGraphNode: Node is not a valid subgraph node', litegraphNode)\n    return\n  }\n\n  const canvas = app.canvas\n  if (!canvas || typeof canvas.openSubgraph !== 'function') {\n    console.warn('LGraphNode: Canvas or openSubgraph method not available')\n    return\n  }\n\n  canvas.openSubgraph(litegraphNode.subgraph)\n}\n\nconst nodeOutputs = useNodeOutputStore()\n\nconst nodeOutputLocatorId = computed(() =>\n  nodeData.subgraphId ? `${nodeData.subgraphId}:${nodeData.id}` : nodeData.id\n)\nconst nodeImageUrls = computed(() => {\n  const newOutputs = nodeOutputs.nodeOutputs[nodeOutputLocatorId.value]\n  const locatorId = getLocatorIdFromNodeData(nodeData)\n\n  // Use root graph for getNodeByLocatorId since it needs to traverse from root\n  const rootGraph = app.graph?.rootGraph || app.graph\n  if (!rootGraph) {\n    return []\n  }\n\n  const node = getNodeByLocatorId(rootGraph, locatorId)\n\n  if (node && newOutputs?.images?.length) {\n    const urls = nodeOutputs.getNodeImageUrls(node)\n    if (urls) {\n      return urls\n    }\n  }\n  // Clear URLs if no outputs or no images\n  return []\n})\n\nconst nodeContainerRef = ref()\nprovide('tooltipContainer', nodeContainerRef)\n</script>\n","import type { useSettingStore } from '@/platform/settings/settingStore'\n\nlet pendingCallbacks: Array<() => Promise<void>> = []\nlet isNewUserDetermined = false\nlet isNewUserCached: boolean | null = null\n\nexport const newUserService = () => {\n  function checkIsNewUser(\n    settingStore: ReturnType<typeof useSettingStore>\n  ): boolean {\n    const isNewUserSettings =\n      Object.keys(settingStore.settingValues).length === 0 ||\n      !settingStore.get('Comfy.TutorialCompleted')\n    const hasNoWorkflow = !localStorage.getItem('workflow')\n    const hasNoPreviousWorkflow = !localStorage.getItem(\n      'Comfy.PreviousWorkflow'\n    )\n\n    return isNewUserSettings && hasNoWorkflow && hasNoPreviousWorkflow\n  }\n\n  async function registerInitCallback(callback: () => Promise<void>) {\n    if (isNewUserDetermined) {\n      if (isNewUserCached) {\n        try {\n          await callback()\n        } catch (error) {\n          console.error('New user initialization callback failed:', error)\n        }\n      }\n    } else {\n      pendingCallbacks.push(callback)\n    }\n  }\n\n  async function initializeIfNewUser(\n    settingStore: ReturnType<typeof useSettingStore>\n  ) {\n    if (isNewUserDetermined) return\n\n    isNewUserCached = checkIsNewUser(settingStore)\n    isNewUserDetermined = true\n\n    if (!isNewUserCached) {\n      pendingCallbacks = []\n      return\n    }\n\n    await settingStore.set(\n      'Comfy.InstalledVersion',\n      __COMFYUI_FRONTEND_VERSION__\n    )\n\n    for (const callback of pendingCallbacks) {\n      try {\n        await callback()\n      } catch (error) {\n        console.error('New user initialization callback failed:', error)\n      }\n    }\n\n    pendingCallbacks = []\n  }\n\n  function isNewUser(): boolean | null {\n    return isNewUserDetermined ? isNewUserCached : null\n  }\n\n  return {\n    registerInitCallback,\n    initializeIfNewUser,\n    isNewUser\n  }\n}\n","<template>\n  <!-- Load splitter overlay only after comfyApp is ready. -->\n  <!-- If load immediately, the top-level splitter stateKey won't be correctly\n  synced with the stateStorage (localStorage). -->\n  <LiteGraphCanvasSplitterOverlay v-if=\"comfyAppReady && betaMenuEnabled\">\n    <template v-if=\"!workspaceStore.focusMode\" #side-bar-panel>\n      <SideToolbar />\n    </template>\n    <template v-if=\"!workspaceStore.focusMode\" #bottom-panel>\n      <BottomPanel />\n    </template>\n    <template #graph-canvas-panel>\n      <div class=\"absolute top-0 left-0 w-auto max-w-full pointer-events-auto\">\n        <SecondRowWorkflowTabs\n          v-if=\"workflowTabsPosition === 'Topbar (2nd-row)'\"\n        />\n      </div>\n      <GraphCanvasMenu v-if=\"canvasMenuEnabled\" class=\"pointer-events-auto\" />\n\n      <MiniMap\n        v-if=\"comfyAppReady && minimapEnabled\"\n        class=\"pointer-events-auto\"\n      />\n    </template>\n  </LiteGraphCanvasSplitterOverlay>\n  <GraphCanvasMenu v-if=\"!betaMenuEnabled && canvasMenuEnabled\" />\n  <canvas\n    id=\"graph-canvas\"\n    ref=\"canvasRef\"\n    tabindex=\"1\"\n    class=\"align-top w-full h-full touch-none\"\n  />\n\n  <!-- TransformPane for Vue node rendering -->\n  <TransformPane\n    v-if=\"shouldRenderVueNodes && comfyApp.canvas && comfyAppReady\"\n    :canvas=\"comfyApp.canvas\"\n    @transform-update=\"handleTransformUpdate\"\n    @wheel.capture=\"canvasInteractions.forwardEventToCanvas\"\n  >\n    <!-- Vue nodes rendered based on graph nodes -->\n    <VueGraphNode\n      v-for=\"nodeData in allNodes\"\n      :key=\"nodeData.id\"\n      :node-data=\"nodeData\"\n      :readonly=\"false\"\n      :error=\"\n        executionStore.lastExecutionError?.node_id === nodeData.id\n          ? 'Execution error'\n          : null\n      \"\n      :zoom-level=\"canvasStore.canvas?.ds?.scale || 1\"\n      :data-node-id=\"nodeData.id\"\n    />\n  </TransformPane>\n\n  <NodeTooltip v-if=\"tooltipEnabled\" />\n  <NodeSearchboxPopover ref=\"nodeSearchboxPopoverRef\" />\n\n  <!-- Initialize components after comfyApp is ready. useAbsolutePosition requires\n  canvasStore.canvas to be initialized. -->\n  <template v-if=\"comfyAppReady\">\n    <TitleEditor />\n    <SelectionToolbox v-if=\"selectionToolboxEnabled\" />\n    <NodeOptions />\n    <!-- Render legacy DOM widgets only when Vue nodes are disabled -->\n    <DomWidgets v-if=\"!shouldRenderVueNodes\" />\n  </template>\n</template>\n\n<script setup lang=\"ts\">\nimport { useEventListener, whenever } from '@vueuse/core'\nimport {\n  computed,\n  nextTick,\n  onMounted,\n  onUnmounted,\n  ref,\n  shallowRef,\n  watch,\n  watchEffect\n} from 'vue'\n\nimport LiteGraphCanvasSplitterOverlay from '@/components/LiteGraphCanvasSplitterOverlay.vue'\nimport BottomPanel from '@/components/bottomPanel/BottomPanel.vue'\nimport DomWidgets from '@/components/graph/DomWidgets.vue'\nimport GraphCanvasMenu from '@/components/graph/GraphCanvasMenu.vue'\nimport NodeTooltip from '@/components/graph/NodeTooltip.vue'\nimport SelectionToolbox from '@/components/graph/SelectionToolbox.vue'\nimport TitleEditor from '@/components/graph/TitleEditor.vue'\nimport NodeOptions from '@/components/graph/selectionToolbox/NodeOptions.vue'\nimport NodeSearchboxPopover from '@/components/searchbox/NodeSearchBoxPopover.vue'\nimport SideToolbar from '@/components/sidebar/SideToolbar.vue'\nimport SecondRowWorkflowTabs from '@/components/topbar/SecondRowWorkflowTabs.vue'\nimport { useChainCallback } from '@/composables/functional/useChainCallback'\nimport type { VueNodeData } from '@/composables/graph/useGraphNodeManager'\nimport { useViewportCulling } from '@/composables/graph/useViewportCulling'\nimport { useVueNodeLifecycle } from '@/composables/graph/useVueNodeLifecycle'\nimport { useNodeBadge } from '@/composables/node/useNodeBadge'\nimport { useCanvasDrop } from '@/composables/useCanvasDrop'\nimport { useContextMenuTranslation } from '@/composables/useContextMenuTranslation'\nimport { useCopy } from '@/composables/useCopy'\nimport { useGlobalLitegraph } from '@/composables/useGlobalLitegraph'\nimport { usePaste } from '@/composables/usePaste'\nimport { useVueFeatureFlags } from '@/composables/useVueFeatureFlags'\nimport { i18n, t } from '@/i18n'\nimport { useLitegraphSettings } from '@/platform/settings/composables/useLitegraphSettings'\nimport { CORE_SETTINGS } from '@/platform/settings/constants/coreSettings'\nimport { useSettingStore } from '@/platform/settings/settingStore'\nimport { useToastStore } from '@/platform/updates/common/toastStore'\nimport { useWorkflowService } from '@/platform/workflow/core/services/workflowService'\nimport { useWorkflowStore } from '@/platform/workflow/management/stores/workflowStore'\nimport { useWorkflowAutoSave } from '@/platform/workflow/persistence/composables/useWorkflowAutoSave'\nimport { useWorkflowPersistence } from '@/platform/workflow/persistence/composables/useWorkflowPersistence'\nimport { useCanvasStore } from '@/renderer/core/canvas/canvasStore'\nimport { attachSlotLinkPreviewRenderer } from '@/renderer/core/canvas/links/slotLinkPreviewRenderer'\nimport { useCanvasInteractions } from '@/renderer/core/canvas/useCanvasInteractions'\nimport TransformPane from '@/renderer/core/layout/transform/TransformPane.vue'\nimport MiniMap from '@/renderer/extensions/minimap/MiniMap.vue'\nimport VueGraphNode from '@/renderer/extensions/vueNodes/components/LGraphNode.vue'\nimport { UnauthorizedError, api } from '@/scripts/api'\nimport { app as comfyApp } from '@/scripts/app'\nimport { ChangeTracker } from '@/scripts/changeTracker'\nimport { IS_CONTROL_WIDGET, updateControlWidgetLabel } from '@/scripts/widgets'\nimport { useColorPaletteService } from '@/services/colorPaletteService'\nimport { newUserService } from '@/services/newUserService'\nimport { useCommandStore } from '@/stores/commandStore'\nimport { useExecutionStore } from '@/stores/executionStore'\nimport { useNodeDefStore } from '@/stores/nodeDefStore'\nimport { useColorPaletteStore } from '@/stores/workspace/colorPaletteStore'\nimport { useSearchBoxStore } from '@/stores/workspace/searchBoxStore'\nimport { useWorkspaceStore } from '@/stores/workspaceStore'\n\nconst emit = defineEmits<{\n  ready: []\n}>()\nconst canvasRef = ref<HTMLCanvasElement | null>(null)\nconst nodeSearchboxPopoverRef = shallowRef<InstanceType<\n  typeof NodeSearchboxPopover\n> | null>(null)\nconst settingStore = useSettingStore()\nconst nodeDefStore = useNodeDefStore()\nconst workspaceStore = useWorkspaceStore()\nconst canvasStore = useCanvasStore()\nconst executionStore = useExecutionStore()\nconst toastStore = useToastStore()\nconst canvasInteractions = useCanvasInteractions()\n\nconst betaMenuEnabled = computed(\n  () => settingStore.get('Comfy.UseNewMenu') !== 'Disabled'\n)\nconst workflowTabsPosition = computed(() =>\n  settingStore.get('Comfy.Workflow.WorkflowTabsPosition')\n)\nconst canvasMenuEnabled = computed(() =>\n  settingStore.get('Comfy.Graph.CanvasMenu')\n)\nconst tooltipEnabled = computed(() => settingStore.get('Comfy.EnableTooltips'))\nconst selectionToolboxEnabled = computed(() =>\n  settingStore.get('Comfy.Canvas.SelectionToolbox')\n)\n\nconst minimapEnabled = computed(() => settingStore.get('Comfy.Minimap.Visible'))\n\n// Feature flags\nconst { shouldRenderVueNodes } = useVueFeatureFlags()\n\n// Vue node system\nconst vueNodeLifecycle = useVueNodeLifecycle()\nconst { handleTransformUpdate } = useViewportCulling()\n\nconst handleVueNodeLifecycleReset = async () => {\n  if (shouldRenderVueNodes.value) {\n    vueNodeLifecycle.disposeNodeManagerAndSyncs()\n    await nextTick()\n    vueNodeLifecycle.initializeNodeManager()\n  }\n}\n\nwatch(() => canvasStore.currentGraph, handleVueNodeLifecycleReset)\n\nwatch(\n  () => canvasStore.isInSubgraph,\n  async (newValue, oldValue) => {\n    if (oldValue && !newValue) {\n      useWorkflowStore().updateActiveGraph()\n    }\n    await handleVueNodeLifecycleReset()\n  }\n)\n\nconst allNodes = computed((): VueNodeData[] =>\n  Array.from(vueNodeLifecycle.nodeManager.value?.vueNodeData?.values() ?? [])\n)\n\nwatchEffect(() => {\n  nodeDefStore.showDeprecated = settingStore.get('Comfy.Node.ShowDeprecated')\n})\n\nwatchEffect(() => {\n  nodeDefStore.showExperimental = settingStore.get(\n    'Comfy.Node.ShowExperimental'\n  )\n})\n\nwatchEffect(() => {\n  const spellcheckEnabled = settingStore.get('Comfy.TextareaWidget.Spellcheck')\n  const textareas = document.querySelectorAll<HTMLTextAreaElement>(\n    'textarea.comfy-multiline-input'\n  )\n\n  textareas.forEach((textarea: HTMLTextAreaElement) => {\n    textarea.spellcheck = spellcheckEnabled\n    // Force recheck to ensure visual update\n    textarea.focus()\n    textarea.blur()\n  })\n})\n\nwatch(\n  () => settingStore.get('Comfy.WidgetControlMode'),\n  () => {\n    if (!canvasStore.canvas) return\n\n    for (const n of comfyApp.graph.nodes) {\n      if (!n.widgets) continue\n      for (const w of n.widgets) {\n        if (w[IS_CONTROL_WIDGET]) {\n          updateControlWidgetLabel(w)\n          if (w.linkedWidgets) {\n            for (const l of w.linkedWidgets) {\n              updateControlWidgetLabel(l)\n            }\n          }\n        }\n      }\n    }\n    comfyApp.graph.setDirtyCanvas(true)\n  }\n)\n\nconst colorPaletteService = useColorPaletteService()\nconst colorPaletteStore = useColorPaletteStore()\nwatch(\n  [() => canvasStore.canvas, () => settingStore.get('Comfy.ColorPalette')],\n  async ([canvas, currentPaletteId]) => {\n    if (!canvas) return\n\n    await colorPaletteService.loadColorPalette(currentPaletteId)\n  }\n)\n\nwatch(\n  () => settingStore.get('Comfy.Canvas.BackgroundImage'),\n  async () => {\n    if (!canvasStore.canvas) return\n    const currentPaletteId = colorPaletteStore.activePaletteId\n    if (!currentPaletteId) return\n\n    // Reload color palette to apply background image\n    await colorPaletteService.loadColorPalette(currentPaletteId)\n    // Mark background canvas as dirty\n    canvasStore.canvas.setDirty(false, true)\n  }\n)\nwatch(\n  () => colorPaletteStore.activePaletteId,\n  async (newValue) => {\n    await settingStore.set('Comfy.ColorPalette', newValue)\n  }\n)\n\n// Update the progress of executing nodes\nwatch(\n  () =>\n    [executionStore.nodeLocationProgressStates, canvasStore.canvas] as const,\n  ([nodeLocationProgressStates, canvas]) => {\n    if (!canvas?.graph) return\n    for (const node of canvas.graph.nodes) {\n      const nodeLocatorId = useWorkflowStore().nodeIdToNodeLocatorId(node.id)\n      const progressState = nodeLocationProgressStates[nodeLocatorId]\n      if (progressState && progressState.state === 'running') {\n        node.progress = progressState.value / progressState.max\n      } else {\n        node.progress = undefined\n      }\n    }\n\n    // Force canvas redraw to ensure progress updates are visible\n    canvas.graph.setDirtyCanvas(true, false)\n  },\n  { deep: true }\n)\n\n// Update node slot errors for LiteGraph nodes\n// (Vue nodes read from store directly)\nwatch(\n  () => executionStore.lastNodeErrors,\n  (lastNodeErrors) => {\n    if (!comfyApp.graph) return\n\n    for (const node of comfyApp.graph.nodes) {\n      // Clear existing errors\n      for (const slot of node.inputs) {\n        delete slot.hasErrors\n      }\n      for (const slot of node.outputs) {\n        delete slot.hasErrors\n      }\n\n      const nodeErrors = lastNodeErrors?.[node.id]\n      if (!nodeErrors) continue\n\n      const validErrors = nodeErrors.errors.filter(\n        (error) => error.extra_info?.input_name !== undefined\n      )\n\n      validErrors.forEach((error) => {\n        const inputName = error.extra_info!.input_name!\n        const inputIndex = node.findInputSlot(inputName)\n        if (inputIndex !== -1) {\n          node.inputs[inputIndex].hasErrors = true\n        }\n      })\n    }\n\n    comfyApp.canvas.draw(true, true)\n  }\n)\n\nuseEventListener(\n  canvasRef,\n  'litegraph:no-items-selected',\n  () => {\n    toastStore.add({\n      severity: 'warn',\n      summary: t('toastMessages.nothingSelected'),\n      life: 2000\n    })\n  },\n  { passive: true }\n)\n\nconst loadCustomNodesI18n = async () => {\n  try {\n    const i18nData = await api.getCustomNodesI18n()\n    Object.entries(i18nData).forEach(([locale, message]) => {\n      i18n.global.mergeLocaleMessage(locale, message)\n    })\n  } catch (error) {\n    console.error('Failed to load custom nodes i18n', error)\n  }\n}\n\nconst comfyAppReady = ref(false)\nconst workflowPersistence = useWorkflowPersistence()\nuseCanvasDrop(canvasRef)\nuseLitegraphSettings()\nuseNodeBadge()\n\nonMounted(async () => {\n  useGlobalLitegraph()\n  useContextMenuTranslation()\n  useCopy()\n  usePaste()\n  useWorkflowAutoSave()\n  useVueFeatureFlags()\n\n  comfyApp.vueAppReady = true\n\n  workspaceStore.spinner = true\n  // ChangeTracker needs to be initialized before setup, as it will overwrite\n  // some listeners of litegraph canvas.\n  ChangeTracker.init()\n  await loadCustomNodesI18n()\n  try {\n    await settingStore.loadSettingValues()\n  } catch (error) {\n    if (error instanceof UnauthorizedError) {\n      localStorage.removeItem('Comfy.userId')\n      localStorage.removeItem('Comfy.userName')\n      window.location.reload()\n    } else {\n      throw error\n    }\n  }\n  CORE_SETTINGS.forEach((setting) => {\n    settingStore.addSetting(setting)\n  })\n\n  await newUserService().initializeIfNewUser(settingStore)\n\n  // @ts-expect-error fixme ts strict error\n  await comfyApp.setup(canvasRef.value)\n  attachSlotLinkPreviewRenderer(comfyApp.canvas)\n  canvasStore.canvas = comfyApp.canvas\n  canvasStore.canvas.render_canvas_border = false\n  workspaceStore.spinner = false\n  useSearchBoxStore().setPopoverRef(nodeSearchboxPopoverRef.value)\n\n  window.app = comfyApp\n  window.graph = comfyApp.graph\n\n  comfyAppReady.value = true\n\n  vueNodeLifecycle.setupEmptyGraphListener()\n\n  comfyApp.canvas.onSelectionChange = useChainCallback(\n    comfyApp.canvas.onSelectionChange,\n    () => canvasStore.updateSelectedItems()\n  )\n\n  // Load color palette\n  colorPaletteStore.customPalettes = settingStore.get(\n    'Comfy.CustomColorPalettes'\n  )\n\n  // Restore workflow and workflow tabs state from storage\n  await workflowPersistence.restorePreviousWorkflow()\n  workflowPersistence.restoreWorkflowTabsState()\n\n  // Initialize release store to fetch releases from comfy-api (fire-and-forget)\n  const { useReleaseStore } = await import(\n    '@/platform/updates/common/releaseStore'\n  )\n  const releaseStore = useReleaseStore()\n  void releaseStore.initialize()\n\n  // Start watching for locale change after the initial value is loaded.\n  watch(\n    () => settingStore.get('Comfy.Locale'),\n    async () => {\n      await useCommandStore().execute('Comfy.RefreshNodeDefinitions')\n      await useWorkflowService().reloadCurrentWorkflow()\n    }\n  )\n\n  whenever(\n    () => useCanvasStore().canvas,\n    (canvas) => {\n      useEventListener(canvas.canvas, 'litegraph:set-graph', () => {\n        useWorkflowStore().updateActiveGraph()\n      })\n    },\n    { immediate: true }\n  )\n\n  emit('ready')\n})\n\nonUnmounted(() => {\n  vueNodeLifecycle.cleanup()\n})\n</script>\n","<template>\n  <Toast />\n</template>\n\n<script setup lang=\"ts\">\nimport Toast from 'primevue/toast'\nimport { useToast } from 'primevue/usetoast'\nimport { nextTick, watch } from 'vue'\n\nimport { useSettingStore } from '@/platform/settings/settingStore'\nimport { useToastStore } from '@/platform/updates/common/toastStore'\n\nconst toast = useToast()\nconst toastStore = useToastStore()\nconst settingStore = useSettingStore()\n\nwatch(\n  () => toastStore.messagesToAdd,\n  (newMessages) => {\n    if (newMessages.length === 0) {\n      return\n    }\n\n    newMessages.forEach((message) => {\n      toast.add(message)\n    })\n    toastStore.messagesToAdd = []\n  },\n  { deep: true }\n)\n\nwatch(\n  () => toastStore.messagesToRemove,\n  (messagesToRemove) => {\n    if (messagesToRemove.length === 0) {\n      return\n    }\n\n    messagesToRemove.forEach((message) => {\n      toast.remove(message)\n    })\n    toastStore.messagesToRemove = []\n  },\n  { deep: true }\n)\n\nwatch(\n  () => toastStore.removeAllRequested,\n  (requested) => {\n    if (requested) {\n      toast.removeAllGroups()\n      toastStore.removeAllRequested = false\n    }\n  }\n)\n\nfunction updateToastPosition() {\n  const styleElement =\n    document.getElementById('dynamic-toast-style') || createStyleElement()\n  const rect = document\n    .querySelector('.graph-canvas-container')\n    ?.getBoundingClientRect()\n  if (!rect) return\n\n  styleElement.textContent = `\n    .p-toast.p-component.p-toast-top-right {\n      top: ${rect.top + 20}px !important;\n      right: ${window.innerWidth - (rect.left + rect.width) + 20}px !important;\n    }\n  `\n}\n\nfunction createStyleElement() {\n  const style = document.createElement('style')\n  style.id = 'dynamic-toast-style'\n  document.head.appendChild(style)\n  return style\n}\n\nwatch(\n  () => settingStore.get('Comfy.UseNewMenu'),\n  () => nextTick(updateToastPosition),\n  { immediate: true }\n)\nwatch(\n  () => settingStore.get('Comfy.Sidebar.Location'),\n  () => nextTick(updateToastPosition),\n  { immediate: true }\n)\n</script>\n","<template>\n  <Toast group=\"reroute-migration\">\n    <template #message>\n      <div class=\"flex flex-col items-start flex-auto\">\n        <div class=\"font-medium text-lg my-4\">\n          {{ t('toastMessages.migrateToLitegraphReroute') }}\n        </div>\n        <Button\n          class=\"self-end\"\n          size=\"small\"\n          :label=\"t('g.migrate')\"\n          severity=\"warn\"\n          @click=\"migrateToLitegraphReroute\"\n        />\n      </div>\n    </template>\n  </Toast>\n</template>\n\n<script setup lang=\"ts\">\nimport { useToast } from 'primevue'\nimport Button from 'primevue/button'\nimport Toast from 'primevue/toast'\nimport { useI18n } from 'vue-i18n'\n\nimport { useWorkflowStore } from '@/platform/workflow/management/stores/workflowStore'\nimport type { WorkflowJSON04 } from '@/platform/workflow/validation/schemas/workflowSchema'\nimport { app } from '@/scripts/app'\nimport { migrateLegacyRerouteNodes } from '@/utils/migration/migrateReroute'\n\nconst { t } = useI18n()\nconst toast = useToast()\n\nconst workflowStore = useWorkflowStore()\nconst migrateToLitegraphReroute = async () => {\n  const workflowJSON = app.graph.serialize() as unknown as WorkflowJSON04\n  const migratedWorkflowJSON = migrateLegacyRerouteNodes(workflowJSON)\n  await app.loadGraphData(\n    migratedWorkflowJSON,\n    false,\n    false,\n    workflowStore.activeWorkflow\n  )\n  toast.removeGroup('reroute-migration')\n}\n</script>\n","<template>\n  <div\n    v-tooltip.bottom=\"{\n      value: $t('menu.batchCount'),\n      showDelay: 600\n    }\"\n    class=\"batch-count\"\n    :aria-label=\"$t('menu.batchCount')\"\n  >\n    <InputNumber\n      v-model=\"batchCount\"\n      class=\"w-14\"\n      :min=\"minQueueCount\"\n      :max=\"maxQueueCount\"\n      fluid\n      show-buttons\n      :pt=\"{\n        incrementButton: {\n          class: 'w-6',\n          onmousedown: () => {\n            handleClick(true)\n          }\n        },\n        decrementButton: {\n          class: 'w-6',\n          onmousedown: () => {\n            handleClick(false)\n          }\n        }\n      }\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { storeToRefs } from 'pinia'\nimport InputNumber from 'primevue/inputnumber'\nimport { computed } from 'vue'\n\nimport { useSettingStore } from '@/platform/settings/settingStore'\nimport { useQueueSettingsStore } from '@/stores/queueStore'\n\nconst queueSettingsStore = useQueueSettingsStore()\nconst { batchCount } = storeToRefs(queueSettingsStore)\nconst minQueueCount = 1\n\nconst settingStore = useSettingStore()\nconst maxQueueCount = computed(() =>\n  settingStore.get('Comfy.QueueButton.BatchCountLimit')\n)\n\nconst handleClick = (increment: boolean) => {\n  let newCount: number\n  if (increment) {\n    const originalCount = batchCount.value - 1\n    newCount = Math.min(originalCount * 2, maxQueueCount.value)\n  } else {\n    const originalCount = batchCount.value + 1\n    newCount = Math.floor(originalCount / 2)\n  }\n\n  batchCount.value = newCount\n}\n</script>\n\n<style scoped>\n:deep(.p-inputtext) {\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n}\n</style>\n","<template>\n  <div class=\"queue-button-group flex\">\n    <SplitButton\n      v-tooltip.bottom=\"{\n        value: workspaceStore.shiftDown\n          ? $t('menu.runWorkflowFront')\n          : $t('menu.runWorkflow'),\n        showDelay: 600\n      }\"\n      class=\"comfyui-queue-button\"\n      :label=\"activeQueueModeMenuItem.label\"\n      severity=\"primary\"\n      size=\"small\"\n      :model=\"queueModeMenuItems\"\n      data-testid=\"queue-button\"\n      @click=\"queuePrompt\"\n    >\n      <template #icon>\n        <i-lucide:list-start v-if=\"workspaceStore.shiftDown\" />\n        <i-lucide:play v-else-if=\"queueMode === 'disabled'\" />\n        <i-lucide:fast-forward v-else-if=\"queueMode === 'instant'\" />\n        <i-lucide:step-forward v-else-if=\"queueMode === 'change'\" />\n      </template>\n      <template #item=\"{ item }\">\n        <Button\n          v-tooltip=\"{\n            value: item.tooltip,\n            showDelay: 600\n          }\"\n          :label=\"String(item.label)\"\n          :icon=\"item.icon\"\n          :severity=\"item.key === queueMode ? 'primary' : 'secondary'\"\n          size=\"small\"\n          text\n        />\n      </template>\n    </SplitButton>\n    <BatchCountEdit />\n    <ButtonGroup class=\"execution-actions flex flex-nowrap\">\n      <Button\n        v-tooltip.bottom=\"{\n          value: $t('menu.interrupt'),\n          showDelay: 600\n        }\"\n        icon=\"pi pi-times\"\n        :severity=\"executingPrompt ? 'danger' : 'secondary'\"\n        :disabled=\"!executingPrompt\"\n        text\n        :aria-label=\"$t('menu.interrupt')\"\n        @click=\"() => commandStore.execute('Comfy.Interrupt')\"\n      />\n      <Button\n        v-tooltip.bottom=\"{\n          value: $t('sideToolbar.queueTab.clearPendingTasks'),\n          showDelay: 600\n        }\"\n        icon=\"pi pi-stop\"\n        :severity=\"hasPendingTasks ? 'danger' : 'secondary'\"\n        :disabled=\"!hasPendingTasks\"\n        text\n        :aria-label=\"$t('sideToolbar.queueTab.clearPendingTasks')\"\n        @click=\"\n          () => {\n            if (queueCountStore.count.value > 1) {\n              commandStore.execute('Comfy.ClearPendingTasks')\n            }\n            queueMode = 'disabled'\n          }\n        \"\n      />\n    </ButtonGroup>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { storeToRefs } from 'pinia'\nimport Button from 'primevue/button'\nimport ButtonGroup from 'primevue/buttongroup'\nimport SplitButton from 'primevue/splitbutton'\nimport { computed } from 'vue'\nimport { useI18n } from 'vue-i18n'\n\nimport { useCommandStore } from '@/stores/commandStore'\nimport {\n  useQueuePendingTaskCountStore,\n  useQueueSettingsStore\n} from '@/stores/queueStore'\nimport { useWorkspaceStore } from '@/stores/workspaceStore'\n\nimport BatchCountEdit from './BatchCountEdit.vue'\n\nconst workspaceStore = useWorkspaceStore()\nconst queueCountStore = storeToRefs(useQueuePendingTaskCountStore())\nconst { mode: queueMode } = storeToRefs(useQueueSettingsStore())\n\nconst { t } = useI18n()\nconst queueModeMenuItemLookup = computed(() => ({\n  disabled: {\n    key: 'disabled',\n    label: t('menu.run'),\n    tooltip: t('menu.disabledTooltip'),\n    command: () => {\n      queueMode.value = 'disabled'\n    }\n  },\n  instant: {\n    key: 'instant',\n    label: `${t('menu.run')} (${t('menu.instant')})`,\n    tooltip: t('menu.instantTooltip'),\n    command: () => {\n      queueMode.value = 'instant'\n    }\n  },\n  change: {\n    key: 'change',\n    label: `${t('menu.run')} (${t('menu.onChange')})`,\n    tooltip: t('menu.onChangeTooltip'),\n    command: () => {\n      queueMode.value = 'change'\n    }\n  }\n}))\n\nconst activeQueueModeMenuItem = computed(\n  () => queueModeMenuItemLookup.value[queueMode.value]\n)\nconst queueModeMenuItems = computed(() =>\n  Object.values(queueModeMenuItemLookup.value)\n)\n\nconst executingPrompt = computed(() => !!queueCountStore.count.value)\nconst hasPendingTasks = computed(\n  () => queueCountStore.count.value > 1 || queueMode.value !== 'disabled'\n)\n\nconst commandStore = useCommandStore()\nconst queuePrompt = async (e: Event) => {\n  const commandId =\n    'shiftKey' in e && e.shiftKey\n      ? 'Comfy.QueuePromptFront'\n      : 'Comfy.QueuePrompt'\n  await commandStore.execute(commandId)\n}\n</script>\n\n<style scoped>\n.comfyui-queue-button :deep(.p-splitbutton-dropdown) {\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n}\n</style>\n","<template>\n  <Panel\n    class=\"actionbar w-fit\"\n    :style=\"style\"\n    :class=\"{ 'is-dragging': isDragging, 'is-docked': isDocked }\"\n  >\n    <div ref=\"panelRef\" class=\"actionbar-content flex items-center select-none\">\n      <span ref=\"dragHandleRef\" class=\"drag-handle cursor-move mr-2\" />\n      <ComfyQueueButton />\n    </div>\n  </Panel>\n</template>\n\n<script lang=\"ts\" setup>\nimport {\n  useDraggable,\n  useElementBounding,\n  useEventBus,\n  useEventListener,\n  useLocalStorage,\n  watchDebounced\n} from '@vueuse/core'\nimport { clamp } from 'es-toolkit/compat'\nimport Panel from 'primevue/panel'\nimport type { Ref } from 'vue'\nimport { computed, inject, nextTick, onMounted, ref, watch } from 'vue'\n\nimport { useSettingStore } from '@/platform/settings/settingStore'\n\nimport ComfyQueueButton from './ComfyQueueButton.vue'\n\nconst settingsStore = useSettingStore()\n\nconst position = computed(() => settingsStore.get('Comfy.UseNewMenu'))\n\nconst visible = computed(() => position.value !== 'Disabled')\n\nconst topMenuRef = inject<Ref<HTMLDivElement | null>>('topMenuRef')\nconst panelRef = ref<HTMLElement | null>(null)\nconst dragHandleRef = ref<HTMLElement | null>(null)\nconst isDocked = useLocalStorage('Comfy.MenuPosition.Docked', true)\nconst storedPosition = useLocalStorage('Comfy.MenuPosition.Floating', {\n  x: 0,\n  y: 0\n})\nconst {\n  x,\n  y,\n  style: style,\n  isDragging\n} = useDraggable(panelRef, {\n  initialValue: { x: 0, y: 0 },\n  handle: dragHandleRef,\n  containerElement: document.body,\n  onMove: (event) => {\n    // Prevent dragging the menu over the top of the tabs\n    if (position.value === 'Top') {\n      const minY = topMenuRef?.value?.getBoundingClientRect().top ?? 40\n      if (event.y < minY) {\n        event.y = minY\n      }\n    }\n  }\n})\n\n// Update storedPosition when x or y changes\nwatchDebounced(\n  [x, y],\n  ([newX, newY]) => {\n    storedPosition.value = { x: newX, y: newY }\n  },\n  { debounce: 300 }\n)\n\n// Set initial position to bottom center\nconst setInitialPosition = () => {\n  if (panelRef.value) {\n    const screenWidth = window.innerWidth\n    const screenHeight = window.innerHeight\n    const menuWidth = panelRef.value.offsetWidth\n    const menuHeight = panelRef.value.offsetHeight\n\n    if (menuWidth === 0 || menuHeight === 0) {\n      return\n    }\n\n    // Check if stored position exists and is within bounds\n    if (storedPosition.value.x !== 0 || storedPosition.value.y !== 0) {\n      // Ensure stored position is within screen bounds\n      x.value = clamp(storedPosition.value.x, 0, screenWidth - menuWidth)\n      y.value = clamp(storedPosition.value.y, 0, screenHeight - menuHeight)\n      captureLastDragState()\n      return\n    }\n\n    // If no stored position or current position, set to bottom center\n    if (x.value === 0 && y.value === 0) {\n      x.value = clamp((screenWidth - menuWidth) / 2, 0, screenWidth - menuWidth)\n      y.value = clamp(\n        screenHeight - menuHeight - 10,\n        0,\n        screenHeight - menuHeight\n      )\n      captureLastDragState()\n    }\n  }\n}\nonMounted(setInitialPosition)\nwatch(visible, async (newVisible) => {\n  if (newVisible) {\n    await nextTick(setInitialPosition)\n  }\n})\n\nconst lastDragState = ref({\n  x: x.value,\n  y: y.value,\n  windowWidth: window.innerWidth,\n  windowHeight: window.innerHeight\n})\nconst captureLastDragState = () => {\n  lastDragState.value = {\n    x: x.value,\n    y: y.value,\n    windowWidth: window.innerWidth,\n    windowHeight: window.innerHeight\n  }\n}\nwatch(\n  isDragging,\n  (newIsDragging) => {\n    if (!newIsDragging) {\n      // Stop dragging\n      captureLastDragState()\n    }\n  },\n  { immediate: true }\n)\n\nconst adjustMenuPosition = () => {\n  if (panelRef.value) {\n    const screenWidth = window.innerWidth\n    const screenHeight = window.innerHeight\n    const menuWidth = panelRef.value.offsetWidth\n    const menuHeight = panelRef.value.offsetHeight\n\n    // Calculate distances to all edges\n    const distanceLeft = lastDragState.value.x\n    const distanceRight =\n      lastDragState.value.windowWidth - (lastDragState.value.x + menuWidth)\n    const distanceTop = lastDragState.value.y\n    const distanceBottom =\n      lastDragState.value.windowHeight - (lastDragState.value.y + menuHeight)\n\n    // Find the smallest distance to determine which edge to anchor to\n    const distances = [\n      { edge: 'left', distance: distanceLeft },\n      { edge: 'right', distance: distanceRight },\n      { edge: 'top', distance: distanceTop },\n      { edge: 'bottom', distance: distanceBottom }\n    ]\n    const closestEdge = distances.reduce((min, curr) =>\n      curr.distance < min.distance ? curr : min\n    )\n\n    // Calculate vertical position as a percentage of screen height\n    const verticalRatio =\n      lastDragState.value.y / lastDragState.value.windowHeight\n    const horizontalRatio =\n      lastDragState.value.x / lastDragState.value.windowWidth\n\n    // Apply positioning based on closest edge\n    if (closestEdge.edge === 'left') {\n      x.value = closestEdge.distance // Maintain exact distance from left\n      y.value = verticalRatio * screenHeight\n    } else if (closestEdge.edge === 'right') {\n      x.value = screenWidth - menuWidth - closestEdge.distance // Maintain exact distance from right\n      y.value = verticalRatio * screenHeight\n    } else if (closestEdge.edge === 'top') {\n      x.value = horizontalRatio * screenWidth\n      y.value = closestEdge.distance // Maintain exact distance from top\n    } else {\n      // bottom\n      x.value = horizontalRatio * screenWidth\n      y.value = screenHeight - menuHeight - closestEdge.distance // Maintain exact distance from bottom\n    }\n\n    // Ensure the menu stays within the screen bounds\n    x.value = clamp(x.value, 0, screenWidth - menuWidth)\n    y.value = clamp(y.value, 0, screenHeight - menuHeight)\n  }\n}\n\nuseEventListener(window, 'resize', adjustMenuPosition)\n\nconst topMenuBounds = useElementBounding(topMenuRef)\nconst overlapThreshold = 20 // pixels\nconst isOverlappingWithTopMenu = computed(() => {\n  if (!panelRef.value) {\n    return false\n  }\n  const { height } = panelRef.value.getBoundingClientRect()\n  const actionbarBottom = y.value + height\n  const topMenuBottom = topMenuBounds.bottom.value\n\n  const overlapPixels =\n    Math.min(actionbarBottom, topMenuBottom) -\n    Math.max(y.value, topMenuBounds.top.value)\n  return overlapPixels > overlapThreshold\n})\n\nwatch(isDragging, (newIsDragging) => {\n  if (!newIsDragging) {\n    // Stop dragging\n    isDocked.value = isOverlappingWithTopMenu.value\n  } else {\n    // Start dragging\n    isDocked.value = false\n  }\n})\n\nconst eventBus = useEventBus<string>('topMenu')\nwatch([isDragging, isOverlappingWithTopMenu], ([dragging, overlapping]) => {\n  eventBus.emit('updateHighlight', {\n    isDragging: dragging,\n    isOverlapping: overlapping\n  })\n})\n</script>\n\n<style scoped>\n@reference '../../assets/css/style.css';\n\n.actionbar {\n  pointer-events: all;\n  position: fixed;\n  z-index: 1000;\n}\n\n.actionbar.is-docked {\n  position: static;\n  @apply bg-transparent border-none p-0;\n}\n\n.actionbar.is-dragging {\n  user-select: none;\n}\n\n:deep(.p-panel-content) {\n  @apply p-1;\n}\n\n.is-docked :deep(.p-panel-content) {\n  @apply p-0;\n}\n\n:deep(.p-panel-header) {\n  display: none;\n}\n\n.drag-handle {\n  @apply w-3 h-max;\n}\n</style>\n","<template>\n  <a\n    ref=\"wrapperRef\"\n    v-tooltip.bottom=\"{\n      value: item.label,\n      showDelay: 512\n    }\"\n    href=\"#\"\n    class=\"cursor-pointer p-breadcrumb-item-link\"\n    :class=\"{\n      'flex items-center gap-1': isActive,\n      'p-breadcrumb-item-link-menu-visible': menu?.overlayVisible,\n      'p-breadcrumb-item-link-icon-visible': isActive,\n      'active-breadcrumb-item': isActive\n    }\"\n    @click=\"handleClick\"\n  >\n    <span class=\"p-breadcrumb-item-label\">{{ item.label }}</span>\n    <Tag v-if=\"item.isBlueprint\" :value=\"'Blueprint'\" severity=\"primary\" />\n    <i v-if=\"isActive\" class=\"pi pi-angle-down text-[10px]\"></i>\n  </a>\n  <Menu\n    v-if=\"isActive\"\n    ref=\"menu\"\n    :model=\"menuItems\"\n    :popup=\"true\"\n    :pt=\"{\n      root: {\n        style: 'background-color: var(--comfy-menu-secondary-bg)'\n      },\n      itemLink: {\n        class: 'py-2'\n      }\n    }\"\n  />\n  <InputText\n    v-if=\"isEditing\"\n    ref=\"itemInputRef\"\n    v-model=\"itemLabel\"\n    class=\"fixed z-10000 text-[.8rem] px-2 py-2\"\n    @blur=\"inputBlur(true)\"\n    @click.stop\n    @keydown.enter=\"inputBlur(true)\"\n    @keydown.esc=\"inputBlur(false)\"\n  />\n</template>\n\n<script setup lang=\"ts\">\nimport InputText from 'primevue/inputtext'\nimport type { MenuState } from 'primevue/menu'\nimport Menu from 'primevue/menu'\nimport type { MenuItem } from 'primevue/menuitem'\nimport Tag from 'primevue/tag'\nimport { computed, nextTick, ref } from 'vue'\nimport { useI18n } from 'vue-i18n'\n\nimport { useWorkflowService } from '@/platform/workflow/core/services/workflowService'\nimport {\n  ComfyWorkflow,\n  useWorkflowStore\n} from '@/platform/workflow/management/stores/workflowStore'\nimport { useDialogService } from '@/services/dialogService'\nimport { useCommandStore } from '@/stores/commandStore'\nimport { useSubgraphNavigationStore } from '@/stores/subgraphNavigationStore'\nimport { appendJsonExt } from '@/utils/formatUtil'\n\ninterface Props {\n  item: MenuItem\n  isActive?: boolean\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  isActive: false\n})\n\nconst { t } = useI18n()\nconst menu = ref<InstanceType<typeof Menu> & MenuState>()\nconst dialogService = useDialogService()\nconst workflowStore = useWorkflowStore()\nconst workflowService = useWorkflowService()\nconst isEditing = ref(false)\nconst itemLabel = ref<string>()\nconst itemInputRef = ref<{ $el?: HTMLInputElement }>()\nconst wrapperRef = ref<HTMLAnchorElement>()\n\nconst rename = async (\n  newName: string | null | undefined,\n  initialName: string\n) => {\n  if (newName && newName !== initialName) {\n    // Synchronize the node titles with the new name\n    props.item.updateTitle?.(newName)\n\n    if (workflowStore.activeSubgraph) {\n      workflowStore.activeSubgraph.name = newName\n    } else if (workflowStore.activeWorkflow) {\n      try {\n        await workflowService.renameWorkflow(\n          workflowStore.activeWorkflow,\n          ComfyWorkflow.basePath + appendJsonExt(newName)\n        )\n      } catch (error) {\n        console.error(error)\n        dialogService.showErrorDialog(error)\n        return\n      }\n    }\n\n    // Force the navigation stack to recompute the labels\n    // TODO: investigate if there is a better way to do this\n    const navigationStore = useSubgraphNavigationStore()\n    navigationStore.restoreState(navigationStore.exportState())\n  }\n}\n\nconst isRoot = props.item.key === 'root'\nconst menuItems = computed<MenuItem[]>(() => {\n  return [\n    {\n      label: t('g.rename'),\n      icon: 'pi pi-pencil',\n      command: startRename\n    },\n    {\n      label: t('breadcrumbsMenu.duplicate'),\n      icon: 'pi pi-copy',\n      command: async () => {\n        await workflowService.duplicateWorkflow(workflowStore.activeWorkflow!)\n      },\n      visible: isRoot && !props.item.isBlueprint\n    },\n    {\n      separator: true,\n      visible: isRoot\n    },\n    {\n      label: t('menuLabels.Save'),\n      icon: 'pi pi-save',\n      command: async () => {\n        await useCommandStore().execute('Comfy.SaveWorkflow')\n      },\n      visible: isRoot\n    },\n    {\n      label: t('menuLabels.Save As'),\n      icon: 'pi pi-save',\n      command: async () => {\n        await useCommandStore().execute('Comfy.SaveWorkflowAs')\n      },\n      visible: isRoot\n    },\n    {\n      separator: true\n    },\n    {\n      label: t('breadcrumbsMenu.clearWorkflow'),\n      icon: 'pi pi-trash',\n      command: async () => {\n        await useCommandStore().execute('Comfy.ClearWorkflow')\n      }\n    },\n    {\n      separator: true,\n      visible: props.item.key === 'root' && props.item.isBlueprint\n    },\n    {\n      label: t('subgraphStore.publish'),\n      icon: 'pi pi-copy',\n      command: async () => {\n        await workflowService.saveWorkflowAs(workflowStore.activeWorkflow!)\n      },\n      visible: props.item.key === 'root' && props.item.isBlueprint\n    },\n    {\n      separator: true,\n      visible: isRoot\n    },\n    {\n      label: props.item.isBlueprint\n        ? t('breadcrumbsMenu.deleteBlueprint')\n        : t('breadcrumbsMenu.deleteWorkflow'),\n      icon: 'pi pi-times',\n      command: async () => {\n        await workflowService.deleteWorkflow(workflowStore.activeWorkflow!)\n      },\n      visible: isRoot\n    }\n  ]\n})\n\nconst handleClick = (event: MouseEvent) => {\n  if (isEditing.value) {\n    return\n  }\n\n  if (event.detail === 1) {\n    if (props.isActive) {\n      menu.value?.toggle(event)\n    } else {\n      props.item.command?.({ item: props.item, originalEvent: event })\n    }\n  } else if (props.isActive && event.detail === 2) {\n    menu.value?.hide()\n    event.stopPropagation()\n    event.preventDefault()\n    startRename()\n  }\n}\n\nconst startRename = () => {\n  isEditing.value = true\n  itemLabel.value = props.item.label as string\n  void nextTick(() => {\n    if (itemInputRef.value?.$el) {\n      itemInputRef.value.$el.focus()\n      itemInputRef.value.$el.select()\n      if (wrapperRef.value) {\n        itemInputRef.value.$el.style.width = `${Math.max(200, wrapperRef.value.offsetWidth)}px`\n      }\n    }\n  })\n}\n\nconst inputBlur = async (doRename: boolean) => {\n  if (doRename) {\n    await rename(itemLabel.value, props.item.label as string)\n  }\n\n  isEditing.value = false\n}\n</script>\n\n<style scoped>\n@reference '../../assets/css/style.css';\n\n.p-breadcrumb-item-link,\n.p-breadcrumb-item-icon {\n  @apply select-none;\n}\n\n.p-breadcrumb-item-link {\n  @apply overflow-hidden;\n  padding: var(--p-breadcrumb-item-padding);\n}\n\n.p-breadcrumb-item-label {\n  @apply whitespace-nowrap text-ellipsis overflow-hidden;\n}\n\n.active-breadcrumb-item {\n  color: var(--text-primary);\n}\n</style>\n","<template>\n  <div\n    class=\"subgraph-breadcrumb w-auto\"\n    :class=\"{\n      'subgraph-breadcrumb-collapse': collapseTabs,\n      'subgraph-breadcrumb-overflow': overflowingTabs\n    }\"\n    :style=\"{\n      '--p-breadcrumb-gap': `${ITEM_GAP}px`,\n      '--p-breadcrumb-item-min-width': `${MIN_WIDTH}px`,\n      '--p-breadcrumb-item-padding': `${ITEM_PADDING}px`,\n      '--p-breadcrumb-icon-width': `${ICON_WIDTH}px`\n    }\"\n  >\n    <Breadcrumb\n      ref=\"breadcrumbRef\"\n      class=\"bg-transparent p-0\"\n      :model=\"items\"\n      aria-label=\"Graph navigation\"\n    >\n      <template #item=\"{ item }\">\n        <SubgraphBreadcrumbItem\n          :item=\"item\"\n          :is-active=\"item === items.at(-1)\"\n        />\n      </template>\n      <template #separator\n        ><span style=\"transform: scale(1.5)\"> / </span></template\n      >\n    </Breadcrumb>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport Breadcrumb from 'primevue/breadcrumb'\nimport type { MenuItem } from 'primevue/menuitem'\nimport { computed, onUpdated, ref, watch } from 'vue'\n\nimport SubgraphBreadcrumbItem from '@/components/breadcrumb/SubgraphBreadcrumbItem.vue'\nimport { useOverflowObserver } from '@/composables/element/useOverflowObserver'\nimport { useWorkflowStore } from '@/platform/workflow/management/stores/workflowStore'\nimport { useCanvasStore } from '@/renderer/core/canvas/canvasStore'\nimport { useSubgraphNavigationStore } from '@/stores/subgraphNavigationStore'\nimport { useSubgraphStore } from '@/stores/subgraphStore'\nimport { forEachSubgraphNode } from '@/utils/graphTraversalUtil'\n\nconst MIN_WIDTH = 28\nconst ITEM_GAP = 8\nconst ITEM_PADDING = 8\nconst ICON_WIDTH = 20\n\nconst workflowStore = useWorkflowStore()\nconst navigationStore = useSubgraphNavigationStore()\nconst breadcrumbRef = ref<InstanceType<typeof Breadcrumb>>()\nconst workflowName = computed(() => workflowStore.activeWorkflow?.filename)\nconst isBlueprint = computed(() =>\n  useSubgraphStore().isSubgraphBlueprint(workflowStore.activeWorkflow)\n)\nconst collapseTabs = ref(false)\nconst overflowingTabs = ref(false)\n\nconst breadcrumbElement = computed(() => {\n  if (!breadcrumbRef.value) return null\n\n  const el = (breadcrumbRef.value as unknown as { $el: HTMLElement }).$el\n  const list = el?.querySelector('.p-breadcrumb-list') as HTMLElement\n  return list\n})\n\nconst items = computed(() => {\n  const items = navigationStore.navigationStack.map<MenuItem>((subgraph) => ({\n    label: subgraph.name,\n    command: () => {\n      const canvas = useCanvasStore().getCanvas()\n      if (!canvas.graph) throw new TypeError('Canvas has no graph')\n\n      canvas.setGraph(subgraph)\n    },\n    updateTitle: (title: string) => {\n      const rootGraph = useCanvasStore().getCanvas().graph?.rootGraph\n      if (!rootGraph) return\n\n      forEachSubgraphNode(rootGraph, subgraph.id, (node) => {\n        node.title = title\n      })\n    }\n  }))\n\n  return [home.value, ...items]\n})\n\nconst home = computed(() => ({\n  label: workflowName.value,\n  icon: 'pi pi-home',\n  key: 'root',\n  isBlueprint: isBlueprint.value,\n  command: () => {\n    const canvas = useCanvasStore().getCanvas()\n    if (!canvas.graph) throw new TypeError('Canvas has no graph')\n\n    canvas.setGraph(canvas.graph.rootGraph)\n  }\n}))\n\n// Check for overflow on breadcrumb items and collapse/expand the breadcrumb to fit\nlet overflowObserver: ReturnType<typeof useOverflowObserver> | undefined\nwatch(breadcrumbElement, (el) => {\n  overflowObserver?.dispose()\n  overflowObserver = undefined\n\n  if (!el) return\n\n  overflowObserver = useOverflowObserver(el, {\n    onCheck: (isOverflowing) => {\n      overflowingTabs.value = isOverflowing\n\n      if (collapseTabs.value) {\n        // Items are currently hidden, check if we can show them\n        if (!isOverflowing) {\n          const items = [\n            ...el.querySelectorAll('.p-breadcrumb-item')\n          ] as HTMLElement[]\n\n          if (items.length < 3) return\n\n          const itemsWithIcon = items.filter((item) =>\n            item.querySelector('.p-breadcrumb-item-link-icon-visible')\n          ).length\n          const separators = el.querySelectorAll(\n            '.p-breadcrumb-separator'\n          ) as NodeListOf<HTMLElement>\n          const separator = separators[separators.length - 1] as HTMLElement\n          const separatorWidth = separator.offsetWidth\n\n          // items + separators + gaps + icons\n          const itemsWidth =\n            (MIN_WIDTH + ITEM_PADDING + ITEM_PADDING) * items.length +\n            itemsWithIcon * ICON_WIDTH\n          const separatorsWidth = (items.length - 1) * separatorWidth\n          const gapsWidth = (items.length - 1) * (ITEM_GAP * 2)\n          const totalWidth = itemsWidth + separatorsWidth + gapsWidth\n          const containerWidth = el.clientWidth\n\n          if (totalWidth <= containerWidth) {\n            collapseTabs.value = false\n          }\n        }\n      } else if (isOverflowing) {\n        collapseTabs.value = true\n      }\n    }\n  })\n})\n\n// If e.g. the workflow name changes, we need to check the overflow again\nonUpdated(() => {\n  if (!overflowObserver?.disposed.value) {\n    overflowObserver?.checkOverflow()\n  }\n})\n</script>\n\n<style scoped>\n@reference '../../assets/css/style.css';\n\n.subgraph-breadcrumb:not(:empty) {\n  flex: auto;\n  flex-shrink: 10000;\n  min-width: 120px;\n}\n\n.subgraph-breadcrumb,\n:deep(.p-breadcrumb) {\n  @apply overflow-hidden;\n}\n\n:deep(.p-breadcrumb-item) {\n  @apply flex items-center rounded-lg overflow-hidden;\n  min-width: calc(var(--p-breadcrumb-item-min-width) + 1rem);\n  /* Collapse middle items first */\n  flex-shrink: 10000;\n}\n\n:deep(.p-breadcrumb-item:has(.p-breadcrumb-item-link-icon-visible)) {\n  min-width: calc(var(--p-breadcrumb-item-min-width) + 1rem + 20px);\n}\n\n:deep(.p-breadcrumb-item:first-child) {\n  /* Then collapse the root workflow */\n  flex-shrink: 5000;\n}\n\n:deep(.p-breadcrumb-item:last-child) {\n  /* Then collapse the active item */\n  flex-shrink: 1;\n}\n\n:deep(.p-breadcrumb-item:hover),\n:deep(.p-breadcrumb-item:has(.p-breadcrumb-item-link-menu-visible)) {\n  background-color: color-mix(in srgb, var(--fg-color) 10%, transparent);\n  color: var(--fg-color);\n}\n</style>\n\n<style>\n@reference '../../assets/css/style.css';\n\n.subgraph-breadcrumb-collapse .p-breadcrumb-list {\n  .p-breadcrumb-item,\n  .p-breadcrumb-separator {\n    @apply hidden;\n  }\n\n  .p-breadcrumb-item:nth-last-child(3),\n  .p-breadcrumb-separator:nth-last-child(2),\n  .p-breadcrumb-item:nth-last-child(1) {\n    @apply block;\n  }\n}\n</style>\n","<template>\n  <div\n    class=\"comfyui-logo-wrapper p-1 flex justify-center items-center cursor-pointer rounded-md mr-2\"\n    :class=\"{\n      'comfyui-logo-menu-visible': menuRef?.visible\n    }\"\n    :style=\"{\n      minWidth: isLargeSidebar ? '4rem' : 'auto'\n    }\"\n    @click=\"menuRef?.toggle($event)\"\n  >\n    <img\n      src=\"/assets/images/comfy-logo-mono.svg\"\n      alt=\"ComfyUI Logo\"\n      class=\"comfyui-logo h-7\"\n      @contextmenu=\"showNativeSystemMenu\"\n    />\n    <i class=\"pi pi-angle-down ml-1 text-[10px]\" />\n  </div>\n  <TieredMenu\n    ref=\"menuRef\"\n    :model=\"translatedItems\"\n    :popup=\"true\"\n    class=\"comfy-command-menu\"\n    :class=\"{\n      'comfy-command-menu-top': isTopMenu\n    }\"\n    @show=\"onMenuShow\"\n  >\n    <template #item=\"{ item, props }\">\n      <a\n        class=\"p-menubar-item-link px-4 py-2\"\n        v-bind=\"props.action\"\n        :href=\"item.url\"\n        target=\"_blank\"\n        :class=\"typeof item.class === 'function' ? item.class() : item.class\"\n        @mousedown=\"\n          isZoomCommand(item) ? handleZoomMouseDown(item, $event) : undefined\n        \"\n        @click=\"handleItemClick(item, $event)\"\n      >\n        <i\n          v-if=\"hasActiveStateSiblings(item)\"\n          class=\"p-menubar-item-icon pi pi-check text-sm\"\n          :class=\"{ invisible: !item.comfyCommand?.active?.() }\"\n        />\n        <span\n          v-else-if=\"\n            item.icon && item.comfyCommand?.id !== 'Comfy.NewBlankWorkflow'\n          \"\n          class=\"p-menubar-item-icon\"\n          :class=\"item.icon\"\n        />\n        <span class=\"p-menubar-item-label text-nowrap\">{{ item.label }}</span>\n        <i\n          v-if=\"item.comfyCommand?.id === 'Comfy.NewBlankWorkflow'\"\n          class=\"ml-auto\"\n          :class=\"item.icon\"\n        />\n        <span\n          v-if=\"item?.comfyCommand?.keybinding\"\n          class=\"ml-auto border border-surface rounded text-muted text-xs text-nowrap p-1 keybinding-tag\"\n        >\n          {{ item.comfyCommand.keybinding.combo.toString() }}\n        </span>\n        <i v-if=\"item.items\" class=\"ml-auto pi pi-angle-right\" />\n      </a>\n    </template>\n  </TieredMenu>\n\n  <SubgraphBreadcrumb />\n</template>\n\n<script setup lang=\"ts\">\nimport type { MenuItem } from 'primevue/menuitem'\nimport TieredMenu, {\n  type TieredMenuMethods,\n  type TieredMenuState\n} from 'primevue/tieredmenu'\nimport { computed, nextTick, ref } from 'vue'\nimport { useI18n } from 'vue-i18n'\n\nimport SubgraphBreadcrumb from '@/components/breadcrumb/SubgraphBreadcrumb.vue'\nimport SettingDialogHeader from '@/components/dialog/header/SettingDialogHeader.vue'\nimport SettingDialogContent from '@/platform/settings/components/SettingDialogContent.vue'\nimport { useSettingStore } from '@/platform/settings/settingStore'\nimport { useColorPaletteService } from '@/services/colorPaletteService'\nimport { useCommandStore } from '@/stores/commandStore'\nimport { useDialogStore } from '@/stores/dialogStore'\nimport { useMenuItemStore } from '@/stores/menuItemStore'\nimport { useColorPaletteStore } from '@/stores/workspace/colorPaletteStore'\nimport { showNativeSystemMenu } from '@/utils/envUtil'\nimport { normalizeI18nKey } from '@/utils/formatUtil'\nimport { whileMouseDown } from '@/utils/mouseDownUtil'\nimport { useManagerState } from '@/workbench/extensions/manager/composables/useManagerState'\nimport { ManagerTab } from '@/workbench/extensions/manager/types/comfyManagerTypes'\n\nconst colorPaletteStore = useColorPaletteStore()\nconst colorPaletteService = useColorPaletteService()\nconst menuItemsStore = useMenuItemStore()\nconst commandStore = useCommandStore()\nconst dialogStore = useDialogStore()\nconst settingStore = useSettingStore()\nconst { t } = useI18n()\n\nconst managerState = useManagerState()\n\nconst menuRef = ref<\n  ({ dirty: boolean } & TieredMenuMethods & TieredMenuState) | null\n>(null)\nconst isLargeSidebar = computed(\n  () => settingStore.get('Comfy.Sidebar.Size') !== 'small'\n)\nconst isTopMenu = computed(() => settingStore.get('Comfy.UseNewMenu') === 'Top')\n\nconst translateMenuItem = (item: MenuItem): MenuItem => {\n  const label = typeof item.label === 'function' ? item.label() : item.label\n  const translatedLabel = label\n    ? t(`menuLabels.${normalizeI18nKey(label)}`, label)\n    : undefined\n\n  return {\n    ...item,\n    label: translatedLabel,\n    items: item.items?.map(translateMenuItem)\n  }\n}\n\nconst showSettings = (defaultPanel?: string) => {\n  dialogStore.showDialog({\n    key: 'global-settings',\n    headerComponent: SettingDialogHeader,\n    component: SettingDialogContent,\n    props: {\n      defaultPanel\n    }\n  })\n}\n\nconst showManageExtensions = async () => {\n  await managerState.openManager({\n    initialTab: ManagerTab.All,\n    showToastOnLegacyError: false\n  })\n}\n\nconst themeMenuItems = computed(() => {\n  return colorPaletteStore.palettes.map((palette) => ({\n    key: `theme-${palette.id}`,\n    label: palette.name,\n    parentPath: 'theme',\n    comfyCommand: {\n      active: () => colorPaletteStore.activePaletteId === palette.id\n    },\n    command: async () => {\n      await colorPaletteService.loadColorPalette(palette.id)\n    }\n  }))\n})\n\nconst extraMenuItems = computed(() => [\n  { separator: true },\n  {\n    key: 'theme',\n    label: t('menu.theme'),\n    items: themeMenuItems.value\n  },\n  { separator: true },\n  {\n    key: 'browse-templates',\n    label: t('menuLabels.Browse Templates'),\n    icon: 'icon-[comfy--template]',\n    command: () => commandStore.execute('Comfy.BrowseTemplates')\n  },\n  {\n    key: 'settings',\n    label: t('g.settings'),\n    icon: 'mdi mdi-cog-outline',\n    command: () => showSettings()\n  },\n  {\n    key: 'manage-extensions',\n    label: t('menu.manageExtensions'),\n    icon: 'mdi mdi-puzzle-outline',\n    command: showManageExtensions\n  }\n])\n\nconst translatedItems = computed(() => {\n  const items = menuItemsStore.menuItems.map(translateMenuItem)\n  let helpIndex = items.findIndex((item) => item.key === 'Help')\n  let helpItem: MenuItem | undefined\n\n  if (helpIndex !== -1) {\n    items[helpIndex].icon = 'mdi mdi-help-circle-outline'\n    // If help is not the last item (i.e. we have extension commands), separate them\n    const isLastItem = helpIndex !== items.length - 1\n    helpItem = items.splice(\n      helpIndex,\n      1,\n      ...(isLastItem\n        ? [\n            {\n              separator: true\n            }\n          ]\n        : [])\n    )[0]\n  }\n  helpIndex = items.length\n\n  items.splice(\n    helpIndex,\n    0,\n    ...extraMenuItems.value,\n    ...(helpItem\n      ? [\n          {\n            separator: true\n          },\n          helpItem\n        ]\n      : [])\n  )\n\n  return items\n})\n\nconst onMenuShow = () => {\n  void nextTick(() => {\n    // Force the menu to show submenus on hover\n    if (menuRef.value) {\n      menuRef.value.dirty = true\n    }\n  })\n}\n\nconst isZoomCommand = (item: MenuItem) => {\n  return (\n    item.comfyCommand?.id === 'Comfy.Canvas.ZoomIn' ||\n    item.comfyCommand?.id === 'Comfy.Canvas.ZoomOut'\n  )\n}\n\nconst handleZoomMouseDown = (item: MenuItem, event: MouseEvent) => {\n  if (item.comfyCommand) {\n    whileMouseDown(\n      event,\n      async () => {\n        await commandStore.execute(item.comfyCommand!.id)\n      },\n      50\n    )\n  }\n}\n\nconst handleItemClick = (item: MenuItem, event: MouseEvent) => {\n  // Prevent the menu from closing for zoom commands or commands that have active state\n  if (isZoomCommand(item) || item.comfyCommand?.active) {\n    event.preventDefault()\n    event.stopPropagation()\n    if (item.comfyCommand?.active) {\n      item.command?.({\n        item,\n        originalEvent: event\n      })\n    }\n    return false\n  }\n}\n\nconst hasActiveStateSiblings = (item: MenuItem): boolean => {\n  // Check if this item has siblings with active state (either from store or theme items)\n  return (\n    item.parentPath &&\n    (item.parentPath === 'theme' ||\n      menuItemsStore.menuItemHasActiveStateChildren[item.parentPath])\n  )\n}\n</script>\n\n<style scoped>\n@reference '../../assets/css/style.css';\n\n:deep(.p-menubar-submenu.dropdown-direction-up) {\n  @apply top-auto bottom-full flex-col-reverse;\n}\n\n.keybinding-tag {\n  background: var(--p-content-hover-background);\n  border-color: var(--p-content-border-color);\n  border-style: solid;\n}\n\n.comfyui-logo-menu-visible,\n.comfyui-logo-wrapper:hover {\n  background-color: color-mix(in srgb, var(--fg-color) 10%, transparent);\n}\n</style>\n\n<style>\n.comfy-command-menu {\n  --p-tieredmenu-item-focus-background: color-mix(\n    in srgb,\n    var(--fg-color) 15%,\n    transparent\n  );\n  --p-tieredmenu-item-active-background: color-mix(\n    in srgb,\n    var(--fg-color) 10%,\n    transparent\n  );\n}\n.comfy-command-menu ul {\n  background-color: var(--comfy-menu-secondary-bg) !important;\n}\n.comfy-command-menu-top .p-tieredmenu-submenu {\n  left: calc(100% + 15px) !important;\n  top: -4px !important;\n}\n@media (max-height: 700px) {\n  .comfy-command-menu .p-tieredmenu-submenu {\n    @apply absolute max-h-[90vh] overflow-y-auto;\n  }\n  /* Help (last) submenu upward offset in compact mode */\n  .p-tieredmenu-root-list\n    > .p-tieredmenu-item:last-of-type\n    .p-tieredmenu-submenu {\n    top: -188px !important;\n  }\n}\n</style>\n","<!-- A popover that shows current user information and actions -->\n<template>\n  <div class=\"current-user-popover w-72\">\n    <!-- User Info Section -->\n    <div class=\"p-3\">\n      <div class=\"flex flex-col items-center\">\n        <UserAvatar\n          class=\"mb-3\"\n          :photo-url=\"userPhotoUrl\"\n          :pt:icon:class=\"{\n            'text-2xl!': !userPhotoUrl\n          }\"\n          size=\"large\"\n        />\n\n        <!-- User Details -->\n        <h3 class=\"text-lg font-semibold truncate my-0 mb-1\">\n          {{ userDisplayName || $t('g.user') }}\n        </h3>\n        <p v-if=\"userEmail\" class=\"text-sm text-muted truncate my-0\">\n          {{ userEmail }}\n        </p>\n      </div>\n    </div>\n\n    <Divider class=\"my-2\" />\n\n    <Button\n      class=\"justify-start\"\n      :label=\"$t('userSettings.title')\"\n      icon=\"pi pi-cog\"\n      text\n      fluid\n      severity=\"secondary\"\n      @click=\"handleOpenUserSettings\"\n    />\n\n    <Divider class=\"my-2\" />\n\n    <Button\n      class=\"justify-start\"\n      :label=\"$t('auth.signOut.signOut')\"\n      icon=\"pi pi-sign-out\"\n      text\n      fluid\n      severity=\"secondary\"\n      @click=\"handleLogout\"\n    />\n\n    <Divider class=\"my-2\" />\n\n    <Button\n      class=\"justify-start\"\n      :label=\"$t('credits.apiPricing')\"\n      icon=\"pi pi-external-link\"\n      text\n      fluid\n      severity=\"secondary\"\n      @click=\"handleOpenApiPricing\"\n    />\n\n    <Divider class=\"my-2\" />\n\n    <div class=\"w-full flex flex-col gap-2 p-2\">\n      <div class=\"text-muted text-sm\">\n        {{ $t('credits.yourCreditBalance') }}\n      </div>\n      <div class=\"flex justify-between items-center\">\n        <UserCredit text-class=\"text-2xl\" />\n        <Button :label=\"$t('credits.topUp.topUp')\" @click=\"handleTopUp\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport Button from 'primevue/button'\nimport Divider from 'primevue/divider'\nimport { onMounted } from 'vue'\n\nimport UserAvatar from '@/components/common/UserAvatar.vue'\nimport UserCredit from '@/components/common/UserCredit.vue'\nimport { useCurrentUser } from '@/composables/auth/useCurrentUser'\nimport { useFirebaseAuthActions } from '@/composables/auth/useFirebaseAuthActions'\nimport { useDialogService } from '@/services/dialogService'\n\nconst emit = defineEmits<{\n  close: []\n}>()\n\nconst { userDisplayName, userEmail, userPhotoUrl, handleSignOut } =\n  useCurrentUser()\nconst authActions = useFirebaseAuthActions()\nconst dialogService = useDialogService()\n\nconst handleOpenUserSettings = () => {\n  dialogService.showSettingsDialog('user')\n  emit('close')\n}\n\nconst handleTopUp = () => {\n  dialogService.showTopUpCreditsDialog()\n  emit('close')\n}\n\nconst handleLogout = async () => {\n  await handleSignOut()\n  emit('close')\n}\n\nconst handleOpenApiPricing = () => {\n  window.open('https://docs.comfy.org/tutorials/api-nodes/pricing', '_blank')\n  emit('close')\n}\n\nonMounted(() => {\n  void authActions.fetchBalance()\n})\n</script>\n","<!-- A button that shows current authenticated user's avatar -->\n<template>\n  <div>\n    <Button\n      v-if=\"isLoggedIn\"\n      class=\"user-profile-button p-1\"\n      severity=\"secondary\"\n      text\n      aria-label=\"user profile\"\n      @click=\"popover?.toggle($event)\"\n    >\n      <div class=\"flex items-center rounded-full bg-(--p-content-background)\">\n        <UserAvatar :photo-url=\"photoURL\" />\n\n        <i class=\"pi pi-chevron-down px-1\" :style=\"{ fontSize: '0.5rem' }\" />\n      </div>\n    </Button>\n\n    <Popover ref=\"popover\" :show-arrow=\"false\">\n      <CurrentUserPopover @close=\"closePopover\" />\n    </Popover>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport Button from 'primevue/button'\nimport Popover from 'primevue/popover'\nimport { computed, ref } from 'vue'\n\nimport UserAvatar from '@/components/common/UserAvatar.vue'\nimport { useCurrentUser } from '@/composables/auth/useCurrentUser'\n\nimport CurrentUserPopover from './CurrentUserPopover.vue'\n\nconst { isLoggedIn, userPhotoUrl } = useCurrentUser()\n\nconst popover = ref<InstanceType<typeof Popover> | null>(null)\nconst photoURL = computed<string | undefined>(\n  () => userPhotoUrl.value ?? undefined\n)\n\nconst closePopover = () => {\n  popover.value?.hide()\n}\n</script>\n","<template>\n  <div>\n    <div\n      v-show=\"showTopMenu && workflowTabsPosition === 'Topbar'\"\n      class=\"w-full flex content-end z-1001 h-[38px]\"\n      style=\"background: var(--border-color)\"\n    >\n      <WorkflowTabs />\n    </div>\n    <div\n      v-show=\"showTopMenu\"\n      ref=\"topMenuRef\"\n      class=\"comfyui-menu flex items-center\"\n      :class=\"{ dropzone: isDropZone, 'dropzone-active': isDroppable }\"\n    >\n      <CommandMenubar />\n      <div class=\"grow min-w-0 app-drag h-full\"></div>\n      <div\n        ref=\"menuRight\"\n        class=\"comfyui-menu-right flex-shrink-1 overflow-auto\"\n      />\n      <Actionbar />\n      <CurrentUserButton class=\"shrink-0\" />\n    </div>\n\n    <!-- Virtual top menu for native window (drag handle) -->\n    <div\n      v-show=\"isNativeWindow() && !showTopMenu\"\n      class=\"fixed top-0 left-0 app-drag w-full h-(--comfy-topbar-height)\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { useEventBus } from '@vueuse/core'\nimport { computed, onMounted, provide, ref } from 'vue'\n\nimport Actionbar from '@/components/actionbar/ComfyActionbar.vue'\nimport CommandMenubar from '@/components/topbar/CommandMenubar.vue'\nimport CurrentUserButton from '@/components/topbar/CurrentUserButton.vue'\nimport WorkflowTabs from '@/components/topbar/WorkflowTabs.vue'\nimport { useSettingStore } from '@/platform/settings/settingStore'\nimport { app } from '@/scripts/app'\nimport { useWorkspaceStore } from '@/stores/workspaceStore'\nimport { electronAPI, isElectron, isNativeWindow } from '@/utils/envUtil'\n\nconst workspaceState = useWorkspaceStore()\nconst settingStore = useSettingStore()\n\nconst menuSetting = computed(() => settingStore.get('Comfy.UseNewMenu'))\nconst betaMenuEnabled = computed(() => menuSetting.value !== 'Disabled')\nconst showTopMenu = computed(\n  () => betaMenuEnabled.value && !workspaceState.focusMode\n)\nconst workflowTabsPosition = computed(() =>\n  settingStore.get('Comfy.Workflow.WorkflowTabsPosition')\n)\n\nconst menuRight = ref<HTMLDivElement | null>(null)\n// Menu-right holds legacy topbar elements attached by custom scripts\nonMounted(() => {\n  if (menuRight.value) {\n    app.menu.element.style.width = 'fit-content'\n    menuRight.value.appendChild(app.menu.element)\n  }\n})\n\nconst topMenuRef = ref<HTMLDivElement | null>(null)\nprovide('topMenuRef', topMenuRef)\nconst eventBus = useEventBus<string>('topMenu')\nconst isDropZone = ref(false)\nconst isDroppable = ref(false)\neventBus.on((event: string, payload: any) => {\n  if (event === 'updateHighlight') {\n    isDropZone.value = payload.isDragging\n    isDroppable.value = payload.isOverlapping && payload.isDragging\n  }\n})\n\nonMounted(() => {\n  if (isElectron()) {\n    electronAPI().changeTheme({\n      height: topMenuRef.value?.getBoundingClientRect().height ?? 0\n    })\n  }\n})\n</script>\n\n<style scoped>\n.comfyui-menu {\n  width: 100vw;\n  height: var(--comfy-topbar-height);\n  background: var(--comfy-menu-bg);\n  color: var(--fg-color);\n  box-shadow: var(--bar-shadow);\n  font-family: Arial, Helvetica, sans-serif;\n  font-size: 0.8em;\n  box-sizing: border-box;\n  z-index: 1000;\n  order: 0;\n  grid-column: 1/-1;\n}\n\n.comfyui-menu.dropzone {\n  background: var(--p-highlight-background);\n}\n\n.comfyui-menu.dropzone-active {\n  background: var(--p-highlight-background-focus);\n}\n\n:deep(.p-menubar-item-label) {\n  line-height: revert;\n}\n\n.comfyui-logo {\n  user-select: none;\n  cursor: default;\n  filter: invert(0);\n}\n\n.dark-theme .comfyui-logo {\n  filter: invert(1);\n}\n\n.comfyui-menu-button-hide {\n  background-color: var(--comfy-menu-secondary-bg);\n  border-left: 1px solid var(--border-color);\n}\n</style>\n\n<style>\n.comfyui-menu-right::-webkit-scrollbar {\n  max-height: 5px;\n}\n\n.comfyui-menu-right:hover::-webkit-scrollbar {\n  cursor: grab;\n}\n\n.comfyui-menu-right::-webkit-scrollbar-track {\n  background: color-mix(in srgb, var(--border-color) 60%, transparent);\n}\n\n.comfyui-menu-right:hover::-webkit-scrollbar-track {\n  background: color-mix(in srgb, var(--border-color) 80%, transparent);\n}\n\n.comfyui-menu-right::-webkit-scrollbar-thumb {\n  background: color-mix(in srgb, var(--fg-color) 30%, transparent);\n}\n\n.comfyui-menu-right::-webkit-scrollbar-thumb:hover {\n  background: color-mix(in srgb, var(--fg-color) 80%, transparent);\n}\n</style>\n","import { useTitle } from '@vueuse/core'\nimport { computed } from 'vue'\n\nimport { t } from '@/i18n'\nimport { useSettingStore } from '@/platform/settings/settingStore'\nimport { useWorkflowStore } from '@/platform/workflow/management/stores/workflowStore'\nimport { useExecutionStore } from '@/stores/executionStore'\n\nconst DEFAULT_TITLE = 'ComfyUI'\nconst TITLE_SUFFIX = ' - ComfyUI'\n\nexport const useBrowserTabTitle = () => {\n  const executionStore = useExecutionStore()\n  const settingStore = useSettingStore()\n  const workflowStore = useWorkflowStore()\n\n  const executionText = computed(() =>\n    executionStore.isIdle\n      ? ''\n      : `[${Math.round(executionStore.executionProgress * 100)}%]`\n  )\n\n  const newMenuEnabled = computed(\n    () => settingStore.get('Comfy.UseNewMenu') !== 'Disabled'\n  )\n\n  const isUnsavedText = computed(() =>\n    workflowStore.activeWorkflow?.isModified ||\n    !workflowStore.activeWorkflow?.isPersisted\n      ? ' *'\n      : ''\n  )\n  const workflowNameText = computed(() => {\n    const workflowName = workflowStore.activeWorkflow?.filename\n    return workflowName\n      ? isUnsavedText.value + workflowName + TITLE_SUFFIX\n      : DEFAULT_TITLE\n  })\n\n  const nodeExecutionTitle = computed(() => {\n    // Check if any nodes are in progress\n    const nodeProgressEntries = Object.entries(\n      executionStore.nodeProgressStates\n    )\n    const runningNodes = nodeProgressEntries.filter(\n      ([_, state]) => state.state === 'running'\n    )\n\n    if (runningNodes.length === 0) {\n      return ''\n    }\n\n    // If multiple nodes are running\n    if (runningNodes.length > 1) {\n      return `${executionText.value}[${runningNodes.length} ${t('g.nodesRunning', 'nodes running')}]`\n    }\n\n    // If only one node is running\n    const [nodeId, state] = runningNodes[0]\n    const progress = Math.round((state.value / state.max) * 100)\n    const nodeType =\n      executionStore.activePrompt?.workflow?.changeTracker?.activeState.nodes.find(\n        (n) => String(n.id) === nodeId\n      )?.type || 'Node'\n\n    return `${executionText.value}[${progress}%] ${nodeType}`\n  })\n\n  const workflowTitle = computed(\n    () =>\n      executionText.value +\n      (newMenuEnabled.value ? workflowNameText.value : DEFAULT_TITLE)\n  )\n\n  const title = computed(() => nodeExecutionTitle.value || workflowTitle.value)\n  useTitle(title)\n}\n","<template>\n  <div class=\"relative inline-flex items-center\">\n    <IconButton @click=\"toggle\">\n      <i-lucide:more-vertical class=\"text-sm\" />\n    </IconButton>\n\n    <Popover\n      ref=\"popover\"\n      :append-to=\"'body'\"\n      :auto-z-index=\"true\"\n      :base-z-index=\"1000\"\n      :dismissable=\"true\"\n      :close-on-escape=\"true\"\n      unstyled\n      :pt=\"pt\"\n    >\n      <div class=\"flex flex-col gap-2 p-2 min-w-40\">\n        <slot :close=\"hide\" />\n      </div>\n    </Popover>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport Popover from 'primevue/popover'\nimport { computed, ref } from 'vue'\n\nimport { cn } from '@/utils/tailwindUtil'\n\nimport IconButton from './IconButton.vue'\n\nconst popover = ref<InstanceType<typeof Popover>>()\n\nconst toggle = (event: Event) => {\n  popover.value?.toggle(event)\n}\n\nconst hide = () => {\n  popover.value?.hide()\n}\n\nconst pt = computed(() => ({\n  root: {\n    class: cn('absolute z-50')\n  },\n  content: {\n    class: cn(\n      'mt-2 rounded-lg',\n      'bg-white dark-theme:bg-zinc-800',\n      'text-neutral dark-theme:text-white',\n      'shadow-lg',\n      'border border-zinc-200 dark-theme:border-zinc-700'\n    )\n  }\n}))\n</script>\n","<template>\n  <div :class=\"containerClasses\">\n    <slot></slot>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\n\nimport { cn } from '@/utils/tailwindUtil'\n\nconst { fullHeight = true } = defineProps<{\n  fullHeight?: boolean\n}>()\n\nconst containerClasses = computed(() =>\n  cn('flex-1 w-full', fullHeight && 'h-full')\n)\n</script>\n","<template>\n  <div :class=\"containerClasses\">\n    <slot name=\"top\"></slot>\n    <slot name=\"bottom\"></slot>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\n\nconst { ratio = 'square', type } = defineProps<{\n  ratio?: 'smallSquare' | 'square' | 'portrait' | 'tallPortrait'\n  type?: string\n}>()\n\nconst containerClasses = computed(() => {\n  const baseClasses =\n    'cursor-pointer flex flex-col bg-white dark-theme:bg-zinc-800 rounded-lg shadow-sm border border-zinc-200 dark-theme:border-zinc-700 overflow-hidden'\n\n  if (type === 'workflow-template-card') {\n    return `cursor-pointer p-2 flex flex-col hover:bg-white dark-theme:hover:bg-zinc-800 rounded-lg transition-background duration-200 ease-in-out`\n  }\n\n  const ratioClasses = {\n    smallSquare: 'aspect-240/311',\n    square: 'aspect-256/308',\n    portrait: 'aspect-256/325',\n    tallPortrait: 'aspect-256/353'\n  }\n\n  return `${baseClasses} ${ratioClasses[ratio]}`\n})\n</script>\n","<template>\n  <div :class=\"topStyle\">\n    <slot class=\"absolute top-0 left-0 w-full h-full\"></slot>\n\n    <div\n      v-if=\"slots['top-left']\"\n      class=\"absolute top-2 left-2 flex gap-2 flex-wrap justify-start\"\n    >\n      <slot name=\"top-left\"></slot>\n    </div>\n\n    <div\n      v-if=\"slots['top-right']\"\n      class=\"absolute top-2 right-2 flex gap-2 flex-wrap justify-end\"\n    >\n      <slot name=\"top-right\"></slot>\n    </div>\n\n    <div\n      v-if=\"slots['bottom-left']\"\n      class=\"absolute bottom-2 left-2 flex gap-2 flex-wrap justify-start\"\n    >\n      <slot name=\"bottom-left\"></slot>\n    </div>\n\n    <div\n      v-if=\"slots['bottom-right']\"\n      class=\"absolute bottom-2 right-2 flex gap-2 flex-wrap justify-end\"\n    >\n      <slot name=\"bottom-right\"></slot>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, useSlots } from 'vue'\n\nconst slots = useSlots()\n\nconst { ratio = 'square' } = defineProps<{\n  ratio?: 'square' | 'landscape'\n}>()\n\nconst topStyle = computed(() => {\n  const baseClasses = 'relative p-0'\n\n  const ratioClasses = {\n    square: 'aspect-square',\n    landscape: 'aspect-48/27'\n  }\n\n  return `${baseClasses} ${ratioClasses[ratio]}`\n})\n</script>\n","<template>\n  <div class=\"w-full h-full pl-4 pr-6 pb-8 bg-white dark-theme:bg-charcoal-600\">\n    <slot></slot>\n  </div>\n</template>\n","<template>\n  <BaseModalLayout :content-title=\"$t('Checkpoints')\">\n    <template #leftPanel>\n      <LeftSidePanel v-model=\"selectedNavItem\" :nav-items=\"tempNavigation\">\n        <template #header-icon>\n          <i-lucide:puzzle class=\"text-neutral\" />\n        </template>\n        <template #header-title>\n          <span class=\"text-neutral text-base\">{{ t('g.title') }}</span>\n        </template>\n      </LeftSidePanel>\n    </template>\n\n    <template #header>\n      <SearchBox v-model=\"searchQuery\" size=\"lg\" class=\"max-w-[384px]\" />\n    </template>\n\n    <template #header-right-area>\n      <div class=\"flex gap-2\">\n        <IconTextButton type=\"primary\" label=\"Upload Model\" @click=\"() => {}\">\n          <template #icon>\n            <i-lucide:upload />\n          </template>\n        </IconTextButton>\n        <MoreButton>\n          <template #default=\"{ close }\">\n            <IconTextButton\n              type=\"secondary\"\n              label=\"Settings\"\n              @click=\"\n                () => {\n                  close()\n                }\n              \"\n            >\n              <template #icon>\n                <i-lucide:download />\n              </template>\n            </IconTextButton>\n            <IconTextButton\n              type=\"primary\"\n              label=\"Profile\"\n              @click=\"\n                () => {\n                  close()\n                }\n              \"\n            >\n              <template #icon>\n                <i-lucide:scroll />\n              </template>\n            </IconTextButton>\n          </template>\n        </MoreButton>\n      </div>\n    </template>\n\n    <template #contentFilter>\n      <div class=\"relative px-6 pb-4 flex gap-2\">\n        <MultiSelect\n          v-model=\"selectedFrameworks\"\n          v-model:search-query=\"searchText\"\n          class=\"w-[250px]\"\n          label=\"Select Frameworks\"\n          :options=\"frameworkOptions\"\n          :show-search-box=\"true\"\n          :show-selected-count=\"true\"\n          :show-clear-button=\"true\"\n        />\n        <MultiSelect\n          v-model=\"selectedProjects\"\n          label=\"Select Projects\"\n          :options=\"projectOptions\"\n        />\n        <SingleSelect\n          v-model=\"selectedSort\"\n          label=\"Sorting Type\"\n          :options=\"sortOptions\"\n          class=\"w-[135px]\"\n        >\n          <template #icon>\n            <i-lucide:filter />\n          </template>\n        </SingleSelect>\n      </div>\n    </template>\n\n    <template #content>\n      <!-- Card Examples -->\n      <div :style=\"gridStyle\">\n        <CardContainer v-for=\"i in 100\" :key=\"i\" ratio=\"square\">\n          <template #top>\n            <CardTop ratio=\"landscape\">\n              <template #default>\n                <div class=\"w-full h-full bg-blue-500\"></div>\n              </template>\n              <template #top-right>\n                <IconButton\n                  class=\"!bg-white !text-neutral-900\"\n                  @click=\"() => {}\"\n                >\n                  <i-lucide:info />\n                </IconButton>\n              </template>\n              <template #bottom-right>\n                <SquareChip label=\"png\" />\n                <SquareChip label=\"1.2 MB\" />\n                <SquareChip label=\"LoRA\">\n                  <template #icon>\n                    <i-lucide:folder />\n                  </template>\n                </SquareChip>\n              </template>\n            </CardTop>\n          </template>\n          <template #bottom>\n            <CardBottom></CardBottom>\n          </template>\n        </CardContainer>\n      </div>\n    </template>\n\n    <template #rightPanel>\n      <RightSidePanel></RightSidePanel>\n    </template>\n  </BaseModalLayout>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, provide, ref, watch } from 'vue'\nimport { useI18n } from 'vue-i18n'\n\nimport IconButton from '@/components/button/IconButton.vue'\nimport IconTextButton from '@/components/button/IconTextButton.vue'\nimport MoreButton from '@/components/button/MoreButton.vue'\nimport CardBottom from '@/components/card/CardBottom.vue'\nimport CardContainer from '@/components/card/CardContainer.vue'\nimport CardTop from '@/components/card/CardTop.vue'\nimport SquareChip from '@/components/chip/SquareChip.vue'\nimport MultiSelect from '@/components/input/MultiSelect.vue'\nimport SearchBox from '@/components/input/SearchBox.vue'\nimport SingleSelect from '@/components/input/SingleSelect.vue'\nimport BaseModalLayout from '@/components/widget/layout/BaseModalLayout.vue'\nimport LeftSidePanel from '@/components/widget/panel/LeftSidePanel.vue'\nimport RightSidePanel from '@/components/widget/panel/RightSidePanel.vue'\nimport type { NavGroupData, NavItemData } from '@/types/navTypes'\nimport { OnCloseKey } from '@/types/widgetTypes'\nimport { createGridStyle } from '@/utils/gridUtil'\n\nconst frameworkOptions = ref([\n  { name: 'Vue', value: 'vue' },\n  { name: 'React', value: 'react' },\n  { name: 'Angular', value: 'angular' },\n  { name: 'Svelte', value: 'svelte' }\n])\n\nconst projectOptions = ref([\n  { name: 'Project A', value: 'proj-a' },\n  { name: 'Project B', value: 'proj-b' },\n  { name: 'Project C', value: 'proj-c' }\n])\n\nconst sortOptions = ref([\n  { name: 'Popular', value: 'popular' },\n  { name: 'Latest', value: 'latest' },\n  { name: 'A → Z', value: 'az' }\n])\n\nconst tempNavigation = ref<(NavItemData | NavGroupData)[]>([\n  { id: 'installed', label: 'Installed', icon: 'icon-[lucide--download]' },\n  {\n    title: 'TAGS',\n    items: [\n      { id: 'tag-sd15', label: 'SD 1.5', icon: 'icon-[lucide--tag]' },\n      { id: 'tag-sdxl', label: 'SDXL', icon: 'icon-[lucide--tag]' },\n      { id: 'tag-utility', label: 'Utility', icon: 'icon-[lucide--tag]' }\n    ]\n  },\n  {\n    title: 'CATEGORIES',\n    items: [\n      { id: 'cat-models', label: 'Models', icon: 'icon-[lucide--layers]' },\n      { id: 'cat-nodes', label: 'Nodes', icon: 'icon-[lucide--grid-3x3]' }\n    ]\n  }\n])\n\nconst { t } = useI18n()\n\nconst { onClose } = defineProps<{\n  onClose: () => void\n}>()\n\nprovide(OnCloseKey, onClose)\n\nconst searchQuery = ref<string>('')\nconst searchText = ref<string>('')\nconst selectedFrameworks = ref([])\nconst selectedProjects = ref([])\nconst selectedSort = ref<string>('popular')\n\nconst selectedNavItem = ref<string | null>('installed')\n\nconst gridStyle = computed(() => createGridStyle())\n\nwatch(searchText, (newQuery) => {\n  console.log('searchText:', searchText.value, newQuery)\n})\n\nwatch(searchQuery, (newQuery) => {\n  console.log('searchQuery:', searchQuery.value, newQuery)\n})\n</script>\n","import SampleModelSelector from '@/components/widget/SampleModelSelector.vue'\nimport { useDialogService } from '@/services/dialogService'\nimport { useDialogStore } from '@/stores/dialogStore'\n\nconst DIALOG_KEY = 'global-model-selector'\n\nexport const useModelSelectorDialog = () => {\n  const dialogService = useDialogService()\n  const dialogStore = useDialogStore()\n\n  function hide() {\n    dialogStore.closeDialog({ key: DIALOG_KEY })\n  }\n\n  function show() {\n    dialogService.showLayoutDialog({\n      key: DIALOG_KEY,\n      component: SampleModelSelector,\n      props: {\n        onClose: hide\n      }\n    })\n  }\n\n  return {\n    show,\n    hide\n  }\n}\n","export default \"__VITE_PUBLIC_ASSET__c8cdd13f__\"","<template>\n  <div\n    class=\"relative w-full aspect-square rounded-t-lg overflow-hidden select-none\"\n  >\n    <div\n      v-if=\"!error\"\n      ref=\"contentRef\"\n      class=\"w-full h-full transform-gpu transition-transform duration-1000 ease-out\"\n      :style=\"\n        isHovered ? { transform: `scale(${1 + hoverZoom / 100})` } : undefined\n      \"\n    >\n      <slot />\n    </div>\n    <div v-else class=\"w-full h-full flex items-center justify-center\">\n      <img\n        src=\"/assets/images/default-template.png\"\n        draggable=\"false\"\n        class=\"transform-gpu transition-transform duration-300 ease-out w-full h-full object-cover\"\n      />\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { useEventListener } from '@vueuse/core'\nimport { onMounted, ref } from 'vue'\n\nconst error = ref(false)\nconst contentRef = ref<HTMLElement | null>(null)\n\nconst { hoverZoom = 4 } = defineProps<{\n  hoverZoom?: number\n  isHovered?: boolean\n}>()\n\nonMounted(() => {\n  const images = Array.from(contentRef.value?.getElementsByTagName('img') ?? [])\n  images.forEach((img) => {\n    useEventListener(img, 'error', () => {\n      error.value = true\n    })\n  })\n})\n</script>\n<style scoped>\nimg {\n  transition: transform 1s cubic-bezier(0.2, 0, 0.4, 1);\n}\n</style>\n","import { type Ref, onBeforeUnmount, ref, watch } from 'vue'\n\ninterface UseIntersectionObserverOptions extends IntersectionObserverInit {\n  immediate?: boolean\n}\n\nexport function useIntersectionObserver(\n  target: Ref<Element | null>,\n  callback: IntersectionObserverCallback,\n  options: UseIntersectionObserverOptions = {}\n) {\n  const { immediate = true, ...observerOptions } = options\n\n  const isSupported =\n    typeof window !== 'undefined' && 'IntersectionObserver' in window\n  const isIntersecting = ref(false)\n\n  let observer: IntersectionObserver | null = null\n\n  const cleanup = () => {\n    if (observer) {\n      observer.disconnect()\n      observer = null\n    }\n  }\n\n  const observe = () => {\n    cleanup()\n\n    if (!isSupported || !target.value) return\n\n    observer = new IntersectionObserver((entries) => {\n      isIntersecting.value = entries.some((entry) => entry.isIntersecting)\n      callback(entries, observer!)\n    }, observerOptions)\n\n    observer.observe(target.value)\n  }\n\n  const unobserve = () => {\n    if (observer && target.value) {\n      observer.unobserve(target.value)\n    }\n  }\n\n  if (immediate) {\n    watch(target, observe, { immediate: true, flush: 'post' })\n  }\n\n  onBeforeUnmount(cleanup)\n\n  return {\n    isSupported,\n    isIntersecting,\n    observe,\n    unobserve,\n    cleanup\n  }\n}\n","import { reactive } from 'vue'\n\ninterface CachedMedia {\n  src: string\n  blob?: Blob\n  objectUrl?: string\n  error?: boolean\n  isLoading: boolean\n  lastAccessed: number\n}\n\ninterface MediaCacheOptions {\n  maxSize?: number\n  maxAge?: number // in milliseconds\n  preloadDistance?: number // pixels from viewport\n}\n\nclass MediaCacheService {\n  public cache = reactive(new Map<string, CachedMedia>())\n  private readonly maxSize: number\n  private readonly maxAge: number\n  private cleanupInterval: number | null = null\n  private urlRefCount = new Map<string, number>()\n\n  constructor(options: MediaCacheOptions = {}) {\n    this.maxSize = options.maxSize ?? 100\n    this.maxAge = options.maxAge ?? 30 * 60 * 1000 // 30 minutes\n\n    // Start cleanup interval\n    this.startCleanupInterval()\n  }\n\n  private startCleanupInterval() {\n    // Clean up every 5 minutes\n    this.cleanupInterval = window.setInterval(\n      () => {\n        this.cleanup()\n      },\n      5 * 60 * 1000\n    )\n  }\n\n  private cleanup() {\n    const now = Date.now()\n    const keysToDelete: string[] = []\n\n    // Find expired entries\n    for (const [key, entry] of Array.from(this.cache.entries())) {\n      if (now - entry.lastAccessed > this.maxAge) {\n        // Only revoke object URL if no components are using it\n        if (entry.objectUrl) {\n          const refCount = this.urlRefCount.get(entry.objectUrl) || 0\n          if (refCount === 0) {\n            URL.revokeObjectURL(entry.objectUrl)\n            this.urlRefCount.delete(entry.objectUrl)\n            keysToDelete.push(key)\n          }\n          // Don't delete cache entry if URL is still in use\n        } else {\n          keysToDelete.push(key)\n        }\n      }\n    }\n\n    // Remove expired entries\n    keysToDelete.forEach((key) => this.cache.delete(key))\n\n    // If still over size limit, remove oldest entries that aren't in use\n    if (this.cache.size > this.maxSize) {\n      const entries = Array.from(this.cache.entries())\n      entries.sort((a, b) => a[1].lastAccessed - b[1].lastAccessed)\n\n      let removedCount = 0\n      const targetRemoveCount = this.cache.size - this.maxSize\n\n      for (const [key, entry] of entries) {\n        if (removedCount >= targetRemoveCount) break\n\n        if (entry.objectUrl) {\n          const refCount = this.urlRefCount.get(entry.objectUrl) || 0\n          if (refCount === 0) {\n            URL.revokeObjectURL(entry.objectUrl)\n            this.urlRefCount.delete(entry.objectUrl)\n            this.cache.delete(key)\n            removedCount++\n          }\n        } else {\n          this.cache.delete(key)\n          removedCount++\n        }\n      }\n    }\n  }\n\n  async getCachedMedia(src: string): Promise<CachedMedia> {\n    let entry = this.cache.get(src)\n\n    if (entry) {\n      // Update last accessed time\n      entry.lastAccessed = Date.now()\n      return entry\n    }\n\n    // Create new entry\n    entry = {\n      src,\n      isLoading: true,\n      lastAccessed: Date.now()\n    }\n\n    // Update cache with loading entry\n    this.cache.set(src, entry)\n\n    try {\n      // Fetch the media\n      const response = await fetch(src, { cache: 'force-cache' })\n      if (!response.ok) {\n        throw new Error(`Failed to fetch: ${response.status}`)\n      }\n\n      const blob = await response.blob()\n      const objectUrl = URL.createObjectURL(blob)\n\n      // Update entry with successful result\n      const updatedEntry: CachedMedia = {\n        src,\n        blob,\n        objectUrl,\n        isLoading: false,\n        lastAccessed: Date.now()\n      }\n\n      this.cache.set(src, updatedEntry)\n      return updatedEntry\n    } catch (error) {\n      console.warn('Failed to cache media:', src, error)\n\n      // Update entry with error\n      const errorEntry: CachedMedia = {\n        src,\n        error: true,\n        isLoading: false,\n        lastAccessed: Date.now()\n      }\n\n      this.cache.set(src, errorEntry)\n      return errorEntry\n    }\n  }\n\n  acquireUrl(src: string): string | undefined {\n    const entry = this.cache.get(src)\n    if (entry?.objectUrl) {\n      const currentCount = this.urlRefCount.get(entry.objectUrl) || 0\n      this.urlRefCount.set(entry.objectUrl, currentCount + 1)\n      return entry.objectUrl\n    }\n    return undefined\n  }\n\n  releaseUrl(src: string): void {\n    const entry = this.cache.get(src)\n    if (entry?.objectUrl) {\n      const count = (this.urlRefCount.get(entry.objectUrl) || 1) - 1\n      if (count <= 0) {\n        URL.revokeObjectURL(entry.objectUrl)\n        this.urlRefCount.delete(entry.objectUrl)\n        // Remove from cache as well\n        this.cache.delete(src)\n      } else {\n        this.urlRefCount.set(entry.objectUrl, count)\n      }\n    }\n  }\n\n  clearCache() {\n    // Revoke all object URLs\n    for (const entry of Array.from(this.cache.values())) {\n      if (entry.objectUrl) {\n        URL.revokeObjectURL(entry.objectUrl)\n      }\n    }\n    this.cache.clear()\n    this.urlRefCount.clear()\n  }\n\n  destroy() {\n    if (this.cleanupInterval) {\n      clearInterval(this.cleanupInterval)\n      this.cleanupInterval = null\n    }\n    this.clearCache()\n  }\n}\n\n// Global instance\nlet mediaCacheInstance: MediaCacheService | null = null\n\nexport function useMediaCache(options?: MediaCacheOptions) {\n  if (!mediaCacheInstance) {\n    mediaCacheInstance = new MediaCacheService(options)\n  }\n\n  const getCachedMedia = (src: string) =>\n    mediaCacheInstance!.getCachedMedia(src)\n  const clearCache = () => mediaCacheInstance!.clearCache()\n  const acquireUrl = (src: string) => mediaCacheInstance!.acquireUrl(src)\n  const releaseUrl = (src: string) => mediaCacheInstance!.releaseUrl(src)\n\n  return {\n    getCachedMedia,\n    clearCache,\n    acquireUrl,\n    releaseUrl,\n    cache: mediaCacheInstance.cache\n  }\n}\n\n// Cleanup on page unload\nif (typeof window !== 'undefined') {\n  window.addEventListener('beforeunload', () => {\n    if (mediaCacheInstance) {\n      mediaCacheInstance.destroy()\n    }\n  })\n}\n","<template>\n  <div\n    ref=\"containerRef\"\n    class=\"relative overflow-hidden w-full h-full flex items-center justify-center\"\n  >\n    <Skeleton\n      v-if=\"!isImageLoaded\"\n      width=\"100%\"\n      height=\"100%\"\n      class=\"absolute inset-0\"\n    />\n    <img\n      v-if=\"cachedSrc\"\n      ref=\"imageRef\"\n      :src=\"cachedSrc\"\n      :alt=\"alt\"\n      draggable=\"false\"\n      :class=\"imageClass\"\n      :style=\"imageStyle\"\n      @load=\"onImageLoad\"\n      @error=\"onImageError\"\n    />\n    <div\n      v-if=\"hasError\"\n      class=\"absolute inset-0 flex items-center justify-center bg-surface-50 dark-theme:bg-surface-800 text-muted\"\n    >\n      <img\n        src=\"/assets/images/default-template.png\"\n        :alt=\"alt\"\n        draggable=\"false\"\n        :class=\"imageClass\"\n        :style=\"imageStyle\"\n      />\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport Skeleton from 'primevue/skeleton'\nimport { computed, onUnmounted, ref, watch } from 'vue'\n\nimport { useIntersectionObserver } from '@/composables/useIntersectionObserver'\nimport { useMediaCache } from '@/services/mediaCacheService'\n\nconst {\n  src,\n  alt = '',\n  imageClass = '',\n  imageStyle,\n  rootMargin = '300px'\n} = defineProps<{\n  src: string\n  alt?: string\n  imageClass?: string | string[] | Record<string, boolean>\n  imageStyle?: Record<string, any>\n  rootMargin?: string\n}>()\n\nconst containerRef = ref<HTMLElement | null>(null)\nconst imageRef = ref<HTMLImageElement | null>(null)\nconst isIntersecting = ref(false)\nconst isImageLoaded = ref(false)\nconst hasError = ref(false)\nconst cachedSrc = ref<string | undefined>(undefined)\n\nconst { getCachedMedia, acquireUrl, releaseUrl } = useMediaCache()\n\n// Use intersection observer to detect when the image container comes into view\nuseIntersectionObserver(\n  containerRef,\n  (entries) => {\n    const entry = entries[0]\n    isIntersecting.value = entry?.isIntersecting ?? false\n  },\n  {\n    rootMargin,\n    threshold: 0.1\n  }\n)\n\n// Only start loading the image when it's in view\nconst shouldLoad = computed(() => isIntersecting.value)\n\nwatch(\n  shouldLoad,\n  async (shouldLoadVal) => {\n    if (shouldLoadVal && src && !cachedSrc.value && !hasError.value) {\n      try {\n        const cachedMedia = await getCachedMedia(src)\n        if (cachedMedia.error) {\n          hasError.value = true\n        } else if (cachedMedia.objectUrl) {\n          const acquiredUrl = acquireUrl(src)\n          cachedSrc.value = acquiredUrl || cachedMedia.objectUrl\n        } else {\n          cachedSrc.value = src\n        }\n      } catch (error) {\n        console.warn('Failed to load cached media:', error)\n        cachedSrc.value = src\n      }\n    } else if (!shouldLoadVal) {\n      if (cachedSrc.value?.startsWith('blob:')) {\n        releaseUrl(src)\n      }\n      // Hide image when out of view\n      isImageLoaded.value = false\n      cachedSrc.value = undefined\n      hasError.value = false\n    }\n  },\n  { immediate: true }\n)\n\nconst onImageLoad = () => {\n  isImageLoaded.value = true\n  hasError.value = false\n}\n\nconst onImageError = () => {\n  hasError.value = true\n  isImageLoaded.value = false\n}\n\nonUnmounted(() => {\n  if (cachedSrc.value?.startsWith('blob:')) {\n    releaseUrl(src)\n  }\n})\n</script>\n","<template>\n  <BaseThumbnail :is-hovered=\"isHovered\">\n    <LazyImage\n      :src=\"baseImageSrc\"\n      :alt=\"alt\"\n      :image-class=\"\n        isVideoType\n          ? 'w-full h-full object-cover'\n          : 'max-w-full max-h-64 object-contain'\n      \"\n    />\n    <div ref=\"containerRef\" class=\"absolute inset-0\">\n      <LazyImage\n        :src=\"overlayImageSrc\"\n        :alt=\"alt\"\n        :image-class=\"\n          isVideoType\n            ? 'w-full h-full object-cover'\n            : 'max-w-full max-h-64 object-contain'\n        \"\n        :image-style=\"{\n          clipPath: `inset(0 ${100 - sliderPosition}% 0 0)`\n        }\"\n      />\n      <div\n        class=\"absolute inset-y-0 w-0.5 bg-white/30 backdrop-blur-sm z-10 pointer-events-none\"\n        :style=\"{\n          left: `${sliderPosition}%`\n        }\"\n      />\n    </div>\n  </BaseThumbnail>\n</template>\n\n<script setup lang=\"ts\">\nimport { useMouseInElement } from '@vueuse/core'\nimport { ref, watch } from 'vue'\n\nimport LazyImage from '@/components/common/LazyImage.vue'\nimport BaseThumbnail from '@/components/templates/thumbnails/BaseThumbnail.vue'\n\nconst SLIDER_START_POSITION = 50\n\nconst { baseImageSrc, overlayImageSrc, isHovered, isVideo } = defineProps<{\n  baseImageSrc: string\n  overlayImageSrc: string\n  alt: string\n  isHovered?: boolean\n  isVideo?: boolean\n}>()\n\nconst isVideoType =\n  isVideo ||\n  baseImageSrc?.toLowerCase().endsWith('.webp') ||\n  overlayImageSrc?.toLowerCase().endsWith('.webp') ||\n  false\n\nconst sliderPosition = ref(SLIDER_START_POSITION)\nconst containerRef = ref<HTMLElement | null>(null)\n\nconst { elementX, elementWidth, isOutside } = useMouseInElement(containerRef)\n\n// Update slider position based on mouse position when hovered\nwatch(\n  [() => isHovered, elementX, elementWidth, isOutside],\n  ([isHovered, x, width, outside]) => {\n    if (!isHovered) return\n    if (!outside) {\n      sliderPosition.value = (x / width) * 100\n    }\n  }\n)\n</script>\n","<template>\n  <BaseThumbnail :hover-zoom=\"hoverZoom\" :is-hovered=\"isHovered\">\n    <LazyImage\n      :src=\"src\"\n      :alt=\"alt\"\n      :image-class=\"[\n        'transform-gpu transition-transform duration-300 ease-out',\n        isVideoType\n          ? 'w-full h-full object-cover'\n          : 'max-w-full max-h-64 object-contain'\n      ]\"\n      :image-style=\"\n        isHovered ? { transform: `scale(${1 + hoverZoom / 100})` } : undefined\n      \"\n    />\n  </BaseThumbnail>\n</template>\n\n<script setup lang=\"ts\">\nimport LazyImage from '@/components/common/LazyImage.vue'\nimport BaseThumbnail from '@/components/templates/thumbnails/BaseThumbnail.vue'\n\nconst { src, isVideo } = defineProps<{\n  src: string\n  alt: string\n  hoverZoom: number\n  isHovered?: boolean\n  isVideo?: boolean\n}>()\n\nconst isVideoType = isVideo ?? (src?.toLowerCase().endsWith('.webp') || false)\n</script>\n","<template>\n  <BaseThumbnail :is-hovered=\"isHovered\">\n    <div class=\"relative w-full h-full\">\n      <div class=\"absolute inset-0\">\n        <LazyImage\n          :src=\"baseImageSrc\"\n          :alt=\"alt\"\n          :image-class=\"baseImageClass\"\n        />\n      </div>\n      <div class=\"absolute inset-0 z-10\">\n        <LazyImage\n          :src=\"overlayImageSrc\"\n          :alt=\"alt\"\n          :image-class=\"overlayImageClass\"\n        />\n      </div>\n    </div>\n  </BaseThumbnail>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\n\nimport LazyImage from '@/components/common/LazyImage.vue'\nimport BaseThumbnail from '@/components/templates/thumbnails/BaseThumbnail.vue'\n\nconst { baseImageSrc, overlayImageSrc, isVideo, isHovered } = defineProps<{\n  baseImageSrc: string\n  overlayImageSrc: string\n  alt: string\n  isHovered: boolean\n  isVideo?: boolean\n}>()\n\nconst isVideoType =\n  isVideo ||\n  baseImageSrc?.toLowerCase().endsWith('.webp') ||\n  overlayImageSrc?.toLowerCase().endsWith('.webp') ||\n  false\n\nconst baseImageClass = computed(() => {\n  const sizeClasses = isVideoType\n    ? 'size-full object-cover'\n    : 'size-full object-contain'\n  return sizeClasses\n})\n\nconst overlayImageClass = computed(() => {\n  const baseClasses = 'size-full transition-opacity duration-300'\n  const sizeClasses = isVideoType ? 'object-cover' : 'object-contain'\n  const opacityClasses = isHovered ? 'opacity-100' : 'opacity-0'\n  return `${baseClasses} ${sizeClasses} ${opacityClasses}`\n})\n</script>\n","import { type Ref, computed, ref, shallowRef, watch } from 'vue'\n\ninterface LazyPaginationOptions {\n  itemsPerPage?: number\n  initialPage?: number\n}\n\nexport function useLazyPagination<T>(\n  items: Ref<T[]> | T[],\n  options: LazyPaginationOptions = {}\n) {\n  const { itemsPerPage = 12, initialPage = 1 } = options\n\n  const currentPage = ref(initialPage)\n  const isLoading = ref(false)\n  const loadedPages = shallowRef(new Set<number>([]))\n\n  // Get reactive items array\n  const itemsArray = computed(() => {\n    const itemData = 'value' in items ? items.value : items\n    return Array.isArray(itemData) ? itemData : []\n  })\n\n  // Simulate pagination by slicing the items\n  const paginatedItems = computed(() => {\n    const itemData = itemsArray.value\n    if (itemData.length === 0) {\n      return []\n    }\n\n    const loadedPageNumbers = Array.from(loadedPages.value).sort(\n      (a, b) => a - b\n    )\n    const maxLoadedPage = Math.max(...loadedPageNumbers, 0)\n    const endIndex = maxLoadedPage * itemsPerPage\n    return itemData.slice(0, endIndex)\n  })\n\n  const hasMoreItems = computed(() => {\n    const itemData = itemsArray.value\n    if (itemData.length === 0) {\n      return false\n    }\n\n    const loadedPagesArray = Array.from(loadedPages.value)\n    const maxLoadedPage = Math.max(...loadedPagesArray, 0)\n    return maxLoadedPage * itemsPerPage < itemData.length\n  })\n\n  const totalPages = computed(() => {\n    const itemData = itemsArray.value\n    if (itemData.length === 0) {\n      return 0\n    }\n    return Math.ceil(itemData.length / itemsPerPage)\n  })\n\n  const loadNextPage = async () => {\n    if (isLoading.value || !hasMoreItems.value) return\n\n    isLoading.value = true\n    const loadedPagesArray = Array.from(loadedPages.value)\n    const nextPage = Math.max(...loadedPagesArray, 0) + 1\n\n    // Simulate network delay\n    // await new Promise((resolve) => setTimeout(resolve, 5000))\n\n    const newLoadedPages = new Set(loadedPages.value)\n    newLoadedPages.add(nextPage)\n    loadedPages.value = newLoadedPages\n    currentPage.value = nextPage\n    isLoading.value = false\n  }\n\n  // Initialize with first page\n  watch(\n    () => itemsArray.value.length,\n    (length) => {\n      if (length > 0 && loadedPages.value.size === 0) {\n        loadedPages.value = new Set([1])\n      }\n    },\n    { immediate: true }\n  )\n\n  const reset = () => {\n    currentPage.value = initialPage\n    loadedPages.value = new Set([])\n    isLoading.value = false\n\n    // Immediately load first page if we have items\n    const itemData = itemsArray.value\n    if (itemData.length > 0) {\n      loadedPages.value = new Set([1])\n    }\n  }\n\n  return {\n    paginatedItems,\n    isLoading,\n    hasMoreItems,\n    currentPage,\n    totalPages,\n    loadNextPage,\n    reset\n  }\n}\n","import { refDebounced } from '@vueuse/core'\nimport Fuse from 'fuse.js'\nimport { type Ref, computed, ref } from 'vue'\n\nimport type { TemplateInfo } from '@/platform/workflow/templates/types/template'\n\nexport function useTemplateFiltering(\n  templates: Ref<TemplateInfo[]> | TemplateInfo[]\n) {\n  const searchQuery = ref('')\n  const selectedModels = ref<string[]>([])\n  const selectedUseCases = ref<string[]>([])\n  const selectedLicenses = ref<string[]>([])\n  const sortBy = ref<\n    | 'default'\n    | 'alphabetical'\n    | 'newest'\n    | 'vram-low-to-high'\n    | 'model-size-low-to-high'\n  >('newest')\n\n  const templatesArray = computed(() => {\n    const templateData = 'value' in templates ? templates.value : templates\n    return Array.isArray(templateData) ? templateData : []\n  })\n\n  // Fuse.js configuration for fuzzy search\n  const fuseOptions = {\n    keys: [\n      { name: 'name', weight: 0.3 },\n      { name: 'title', weight: 0.3 },\n      { name: 'description', weight: 0.2 },\n      { name: 'tags', weight: 0.1 },\n      { name: 'models', weight: 0.1 }\n    ],\n    threshold: 0.4,\n    includeScore: true,\n    includeMatches: true\n  }\n\n  const fuse = computed(() => new Fuse(templatesArray.value, fuseOptions))\n\n  const availableModels = computed(() => {\n    const modelSet = new Set<string>()\n    templatesArray.value.forEach((template) => {\n      if (Array.isArray(template.models)) {\n        template.models.forEach((model) => modelSet.add(model))\n      }\n    })\n    return Array.from(modelSet).sort()\n  })\n\n  const availableUseCases = computed(() => {\n    const tagSet = new Set<string>()\n    templatesArray.value.forEach((template) => {\n      if (template.tags && Array.isArray(template.tags)) {\n        template.tags.forEach((tag) => tagSet.add(tag))\n      }\n    })\n    return Array.from(tagSet).sort()\n  })\n\n  const availableLicenses = computed(() => {\n    return ['Open Source', 'Closed Source (API Nodes)']\n  })\n\n  const debouncedSearchQuery = refDebounced(searchQuery, 50)\n\n  const filteredBySearch = computed(() => {\n    if (!debouncedSearchQuery.value.trim()) {\n      return templatesArray.value\n    }\n\n    const results = fuse.value.search(debouncedSearchQuery.value)\n    return results.map((result) => result.item)\n  })\n\n  const filteredByModels = computed(() => {\n    if (selectedModels.value.length === 0) {\n      return filteredBySearch.value\n    }\n\n    return filteredBySearch.value.filter((template) => {\n      if (!template.models || !Array.isArray(template.models)) {\n        return false\n      }\n      return selectedModels.value.some((selectedModel) =>\n        template.models?.includes(selectedModel)\n      )\n    })\n  })\n\n  const filteredByUseCases = computed(() => {\n    if (selectedUseCases.value.length === 0) {\n      return filteredByModels.value\n    }\n\n    return filteredByModels.value.filter((template) => {\n      if (!template.tags || !Array.isArray(template.tags)) {\n        return false\n      }\n      return selectedUseCases.value.some((selectedTag) =>\n        template.tags?.includes(selectedTag)\n      )\n    })\n  })\n\n  const filteredByLicenses = computed(() => {\n    if (selectedLicenses.value.length === 0) {\n      return filteredByUseCases.value\n    }\n\n    return filteredByUseCases.value.filter((template) => {\n      // Check if template has API in its tags or name (indicating it's a closed source API node)\n      const isApiTemplate =\n        template.tags?.includes('API') ||\n        template.name?.toLowerCase().includes('api_')\n\n      return selectedLicenses.value.some((selectedLicense) => {\n        if (selectedLicense === 'Closed Source (API Nodes)') {\n          return isApiTemplate\n        } else if (selectedLicense === 'Open Source') {\n          return !isApiTemplate\n        }\n        return false\n      })\n    })\n  })\n\n  const sortedTemplates = computed(() => {\n    const templates = [...filteredByLicenses.value]\n\n    switch (sortBy.value) {\n      case 'alphabetical':\n        return templates.sort((a, b) => {\n          const nameA = a.title || a.name || ''\n          const nameB = b.title || b.name || ''\n          return nameA.localeCompare(nameB)\n        })\n      case 'newest':\n        return templates.sort((a, b) => {\n          const dateA = new Date(a.date || '1970-01-01')\n          const dateB = new Date(b.date || '1970-01-01')\n          return dateB.getTime() - dateA.getTime()\n        })\n      case 'vram-low-to-high':\n        // TODO: Implement VRAM sorting when VRAM data is available\n        // For now, keep original order\n        return templates\n      case 'model-size-low-to-high':\n        return templates.sort((a: any, b: any) => {\n          const sizeA =\n            typeof a.size === 'number' ? a.size : Number.POSITIVE_INFINITY\n          const sizeB =\n            typeof b.size === 'number' ? b.size : Number.POSITIVE_INFINITY\n          if (sizeA === sizeB) return 0\n          return sizeA - sizeB\n        })\n      case 'default':\n      default:\n        // Keep original order (default order)\n        return templates\n    }\n  })\n\n  const filteredTemplates = computed(() => sortedTemplates.value)\n\n  const resetFilters = () => {\n    searchQuery.value = ''\n    selectedModels.value = []\n    selectedUseCases.value = []\n    selectedLicenses.value = []\n    sortBy.value = 'default'\n  }\n\n  const removeModelFilter = (model: string) => {\n    selectedModels.value = selectedModels.value.filter((m) => m !== model)\n  }\n\n  const removeUseCaseFilter = (tag: string) => {\n    selectedUseCases.value = selectedUseCases.value.filter((t) => t !== tag)\n  }\n\n  const removeLicenseFilter = (license: string) => {\n    selectedLicenses.value = selectedLicenses.value.filter((l) => l !== license)\n  }\n\n  const filteredCount = computed(() => filteredTemplates.value.length)\n  const totalCount = computed(() => templatesArray.value.length)\n\n  return {\n    // State\n    searchQuery,\n    selectedModels,\n    selectedUseCases,\n    selectedLicenses,\n    sortBy,\n\n    // Computed\n    filteredTemplates,\n    availableModels,\n    availableUseCases,\n    availableLicenses,\n    filteredCount,\n    totalCount,\n\n    // Methods\n    resetFilters,\n    removeModelFilter,\n    removeUseCaseFilter,\n    removeLicenseFilter\n  }\n}\n","/**\n * Maps category IDs to their corresponding Lucide icon classes\n */\nexport const getCategoryIcon = (categoryId: string): string => {\n  const iconMap: Record<string, string> = {\n    // Main categories\n    all: 'icon-[lucide--list]',\n    'getting-started': 'icon-[lucide--graduation-cap]',\n\n    // Generation types\n    'generation-image': 'icon-[lucide--image]',\n    image: 'icon-[lucide--image]',\n    'generation-video': 'icon-[lucide--film]',\n    video: 'icon-[lucide--film]',\n    'generation-3d': 'icon-[lucide--box]',\n    '3d': 'icon-[lucide--box]',\n    'generation-audio': 'icon-[lucide--volume-2]',\n    audio: 'icon-[lucide--volume-2]',\n    'generation-llm': 'icon-[lucide--message-square-text]',\n\n    // API and models\n    'api-nodes': 'icon-[lucide--hand-coins]',\n    'closed-models': 'icon-[lucide--hand-coins]',\n\n    // LLMs and AI\n    llm: 'icon-[lucide--message-square-text]',\n    llms: 'icon-[lucide--message-square-text]',\n    'llm-api': 'icon-[lucide--message-square-text]',\n\n    // Performance and hardware\n    'small-models': 'icon-[lucide--zap]',\n    performance: 'icon-[lucide--zap]',\n    'mac-compatible': 'icon-[lucide--command]',\n    'runs-on-mac': 'icon-[lucide--command]',\n\n    // Training\n    'lora-training': 'icon-[lucide--dumbbell]',\n    training: 'icon-[lucide--dumbbell]',\n\n    // Extensions and tools\n    extensions: 'icon-[lucide--puzzle]',\n    tools: 'icon-[lucide--wrench]',\n\n    // Fallbacks for common patterns\n    upscaling: 'icon-[lucide--maximize-2]',\n    controlnet: 'icon-[lucide--sliders-horizontal]',\n    'area-composition': 'icon-[lucide--layout-grid]'\n  }\n\n  // Return mapped icon or fallback to folder\n  return iconMap[categoryId.toLowerCase()] || 'icon-[lucide--folder]'\n}\n","import Fuse from 'fuse.js'\nimport { defineStore } from 'pinia'\nimport { computed, ref, shallowRef } from 'vue'\n\nimport { i18n, st } from '@/i18n'\nimport { api } from '@/scripts/api'\nimport type { NavGroupData, NavItemData } from '@/types/navTypes'\nimport { getCategoryIcon } from '@/utils/categoryIcons'\nimport { normalizeI18nKey } from '@/utils/formatUtil'\n\nimport type {\n  TemplateGroup,\n  TemplateInfo,\n  WorkflowTemplates\n} from '../types/template'\n\n// Enhanced template interface for easier filtering\ninterface EnhancedTemplate extends TemplateInfo {\n  sourceModule: string\n  category?: string\n  categoryType?: string\n  categoryGroup?: string // 'GENERATION TYPE' or 'CLOSED SOURCE MODELS'\n  isEssential?: boolean\n  searchableText?: string\n}\n\nexport const useWorkflowTemplatesStore = defineStore(\n  'workflowTemplates',\n  () => {\n    const customTemplates = shallowRef<{ [moduleName: string]: string[] }>({})\n    const coreTemplates = shallowRef<WorkflowTemplates[]>([])\n    const isLoaded = ref(false)\n\n    // Store filter mappings for dynamic categories\n    type FilterData = {\n      category?: string\n      categoryGroup?: string\n    }\n\n    const categoryFilters = ref(new Map<string, FilterData>())\n\n    /**\n     * Add localization fields to a template.\n     */\n    const addLocalizedFieldsToTemplate = (\n      template: TemplateInfo,\n      categoryTitle: string\n    ) => ({\n      ...template,\n      localizedTitle: st(\n        `templateWorkflows.template.${normalizeI18nKey(categoryTitle)}.${normalizeI18nKey(template.name)}`,\n        template.title ?? template.name\n      ),\n      localizedDescription: st(\n        `templateWorkflows.templateDescription.${normalizeI18nKey(categoryTitle)}.${normalizeI18nKey(template.name)}`,\n        template.description\n      )\n    })\n\n    /**\n     * Add localization fields to all templates in a list of templates.\n     */\n    const localizeTemplateList = (\n      templates: TemplateInfo[],\n      categoryTitle: string\n    ) =>\n      templates.map((template) =>\n        addLocalizedFieldsToTemplate(template, categoryTitle)\n      )\n\n    /**\n     * Add localization fields to a template category and all its constituent templates.\n     */\n    const localizeTemplateCategory = (templateCategory: WorkflowTemplates) => ({\n      ...templateCategory,\n      localizedTitle: st(\n        `templateWorkflows.category.${normalizeI18nKey(templateCategory.title)}`,\n        templateCategory.title ?? templateCategory.moduleName\n      ),\n      templates: localizeTemplateList(\n        templateCategory.templates,\n        templateCategory.title\n      )\n    })\n\n    // Create an \"All\" category that combines all templates\n    const createAllCategory = () => {\n      // First, get core templates with source module added\n      const coreTemplatesWithSourceModule = coreTemplates.value.flatMap(\n        (category) =>\n          // For each template in each category, add the sourceModule and pass through any localized fields\n          category.templates.map((template) => {\n            // Get localized template with its original category title for i18n lookup\n            const localizedTemplate = addLocalizedFieldsToTemplate(\n              template,\n              category.title\n            )\n            return {\n              ...localizedTemplate,\n              sourceModule: category.moduleName\n            }\n          })\n      )\n\n      // Now handle custom templates\n      const customTemplatesWithSourceModule = Object.entries(\n        customTemplates.value\n      ).flatMap(([moduleName, templates]) =>\n        templates.map((name) => ({\n          name,\n          mediaType: 'image',\n          mediaSubtype: 'jpg',\n          description: name,\n          sourceModule: moduleName\n        }))\n      )\n\n      return {\n        moduleName: 'all',\n        title: 'All',\n        localizedTitle: st('templateWorkflows.category.All', 'All Templates'),\n        templates: [\n          ...coreTemplatesWithSourceModule,\n          ...customTemplatesWithSourceModule\n        ]\n      }\n    }\n\n    /**\n     * Original grouped templates for backward compatibility\n     */\n    const groupedTemplates = computed<TemplateGroup[]>(() => {\n      // Get regular categories\n      const allTemplates = [\n        ...coreTemplates.value.map(localizeTemplateCategory),\n        ...Object.entries(customTemplates.value).map(\n          ([moduleName, templates]) => ({\n            moduleName,\n            title: moduleName,\n            localizedTitle: st(\n              `templateWorkflows.category.${normalizeI18nKey(moduleName)}`,\n              moduleName\n            ),\n            templates: templates.map((name) => ({\n              name,\n              mediaType: 'image',\n              mediaSubtype: 'jpg',\n              description: name\n            }))\n          })\n        )\n      ]\n\n      // Group templates by their main category\n      const groupedByCategory = [\n        {\n          label: st(\n            'templateWorkflows.category.ComfyUI Examples',\n            'ComfyUI Examples'\n          ),\n          modules: [\n            createAllCategory(),\n            ...allTemplates.filter((t) => t.moduleName === 'default')\n          ]\n        },\n        ...(Object.keys(customTemplates.value).length > 0\n          ? [\n              {\n                label: st(\n                  'templateWorkflows.category.Custom Nodes',\n                  'Custom Nodes'\n                ),\n                modules: allTemplates.filter((t) => t.moduleName !== 'default')\n              }\n            ]\n          : [])\n      ]\n\n      return groupedByCategory\n    })\n\n    /**\n     * Enhanced templates with proper categorization for filtering\n     */\n    const enhancedTemplates = computed<EnhancedTemplate[]>(() => {\n      const allTemplates: EnhancedTemplate[] = []\n\n      // Process core templates\n      coreTemplates.value.forEach((category) => {\n        category.templates.forEach((template) => {\n          const enhancedTemplate: EnhancedTemplate = {\n            ...template,\n            sourceModule: category.moduleName,\n            category: category.title,\n            categoryType: category.type,\n            categoryGroup: category.category,\n            isEssential: category.isEssential,\n            searchableText: [\n              template.title || template.name,\n              template.description || '',\n              category.title,\n              ...(template.tags || []),\n              ...(template.models || [])\n            ].join(' ')\n          }\n\n          allTemplates.push(enhancedTemplate)\n        })\n      })\n\n      // Process custom templates\n      Object.entries(customTemplates.value).forEach(\n        ([moduleName, templates]) => {\n          templates.forEach((name) => {\n            const enhancedTemplate: EnhancedTemplate = {\n              name,\n              title: name,\n              description: name,\n              mediaType: 'image',\n              mediaSubtype: 'jpg',\n              sourceModule: moduleName,\n              category: 'Extensions',\n              categoryType: 'extension',\n              searchableText: `${name} ${moduleName} extension`\n            }\n            allTemplates.push(enhancedTemplate)\n          })\n        }\n      )\n\n      return allTemplates\n    })\n\n    /**\n     * Fuse.js instance for advanced template searching and filtering\n     */\n    const templateFuse = computed(() => {\n      const fuseOptions = {\n        keys: [\n          { name: 'searchableText', weight: 0.4 },\n          { name: 'title', weight: 0.3 },\n          { name: 'name', weight: 0.2 },\n          { name: 'tags', weight: 0.1 }\n        ],\n        threshold: 0.3,\n        includeScore: true\n      }\n\n      return new Fuse(enhancedTemplates.value, fuseOptions)\n    })\n\n    /**\n     * Filter templates by category ID using stored filter mappings\n     */\n    const filterTemplatesByCategory = (categoryId: string) => {\n      if (categoryId === 'all') {\n        return enhancedTemplates.value\n      }\n\n      if (categoryId === 'basics') {\n        // Filter for templates from categories marked as essential\n        return enhancedTemplates.value.filter((t) => t.isEssential)\n      }\n\n      // Handle extension-specific filters\n      if (categoryId.startsWith('extension-')) {\n        const moduleName = categoryId.replace('extension-', '')\n        return enhancedTemplates.value.filter(\n          (t) => t.sourceModule === moduleName\n        )\n      }\n\n      // Look up the filter from our stored mappings\n      const filter = categoryFilters.value.get(categoryId)\n      if (!filter) {\n        return enhancedTemplates.value\n      }\n\n      // Apply the filter\n      return enhancedTemplates.value.filter((template) => {\n        if (filter.category && template.category !== filter.category) {\n          return false\n        }\n        if (\n          filter.categoryGroup &&\n          template.categoryGroup !== filter.categoryGroup\n        ) {\n          return false\n        }\n        return true\n      })\n    }\n\n    /**\n     * New navigation structure dynamically built from JSON categories\n     */\n    const navGroupedTemplates = computed<(NavItemData | NavGroupData)[]>(() => {\n      if (!isLoaded.value) return []\n\n      const items: (NavItemData | NavGroupData)[] = []\n\n      // Clear and rebuild filter mappings\n      categoryFilters.value.clear()\n\n      // 1. All Templates - always first\n      items.push({\n        id: 'all',\n        label: st('templateWorkflows.category.All', 'All Templates'),\n        icon: getCategoryIcon('all')\n      })\n\n      // 2. Basics (isEssential categories) - always second if it exists\n      let gettingStartedText = 'Getting Started'\n      const essentialCat = coreTemplates.value.find(\n        (cat) => cat.isEssential && cat.templates.length > 0\n      )\n      const hasEssentialCategories = Boolean(essentialCat)\n\n      if (essentialCat) {\n        gettingStartedText = essentialCat.title\n      }\n      if (hasEssentialCategories) {\n        items.push({\n          id: 'basics',\n          label: gettingStartedText,\n          icon: 'icon-[lucide--graduation-cap]'\n        })\n      }\n\n      // 3. Group categories from JSON dynamically\n      const categoryGroups = new Map<\n        string,\n        { title: string; items: NavItemData[] }\n      >()\n\n      // Process all categories from JSON\n      coreTemplates.value.forEach((category) => {\n        // Skip essential categories as they're handled as Basics\n        if (category.isEssential) return\n\n        const categoryGroup = category.category\n        const categoryIcon = category.icon\n\n        if (categoryGroup) {\n          if (!categoryGroups.has(categoryGroup)) {\n            categoryGroups.set(categoryGroup, {\n              title: categoryGroup,\n              items: []\n            })\n          }\n\n          const group = categoryGroups.get(categoryGroup)!\n\n          // Generate unique ID for this category\n          const categoryId = `${categoryGroup.toLowerCase().replace(/\\s+/g, '-')}-${category.title.toLowerCase().replace(/\\s+/g, '-')}`\n\n          // Store the filter mapping\n          categoryFilters.value.set(categoryId, {\n            category: category.title,\n            categoryGroup: categoryGroup\n          })\n\n          group.items.push({\n            id: categoryId,\n            label: st(\n              `templateWorkflows.category.${normalizeI18nKey(category.title)}`,\n              category.title\n            ),\n            icon: categoryIcon || getCategoryIcon(category.type || 'default')\n          })\n        }\n      })\n\n      // Add grouped categories\n      categoryGroups.forEach((group, groupName) => {\n        if (group.items.length > 0) {\n          items.push({\n            title: st(\n              `templateWorkflows.category.${normalizeI18nKey(groupName)}`,\n              groupName\n                .split(' ')\n                .map(\n                  (word) =>\n                    word.charAt(0).toUpperCase() + word.slice(1).toLowerCase()\n                )\n                .join(' ')\n            ),\n            items: group.items\n          })\n        }\n      })\n\n      // 4. Extensions - always last\n      const extensionCounts = enhancedTemplates.value.filter(\n        (t) => t.sourceModule !== 'default'\n      ).length\n\n      if (extensionCounts > 0) {\n        // Get unique extension modules\n        const extensionModules = Array.from(\n          new Set(\n            enhancedTemplates.value\n              .filter((t) => t.sourceModule !== 'default')\n              .map((t) => t.sourceModule)\n          )\n        ).sort()\n\n        const extensionItems: NavItemData[] = extensionModules.map(\n          (moduleName) => ({\n            id: `extension-${moduleName}`,\n            label: st(\n              `templateWorkflows.category.${normalizeI18nKey(moduleName)}`,\n              moduleName\n            ),\n            icon: getCategoryIcon('extensions')\n          })\n        )\n\n        items.push({\n          title: st('templateWorkflows.category.Extensions', 'Extensions'),\n          items: extensionItems,\n          collapsible: true\n        })\n      }\n\n      return items\n    })\n\n    async function loadWorkflowTemplates() {\n      try {\n        if (!isLoaded.value) {\n          customTemplates.value = await api.getWorkflowTemplates()\n          const locale = i18n.global.locale.value\n          coreTemplates.value = await api.getCoreWorkflowTemplates(locale)\n          isLoaded.value = true\n        }\n      } catch (error) {\n        console.error('Error fetching workflow templates:', error)\n      }\n    }\n\n    return {\n      groupedTemplates,\n      navGroupedTemplates,\n      enhancedTemplates,\n      templateFuse,\n      filterTemplatesByCategory,\n      isLoaded,\n      loadWorkflowTemplates\n    }\n  }\n)\n","import { computed, ref } from 'vue'\nimport { useI18n } from 'vue-i18n'\n\nimport { useWorkflowTemplatesStore } from '@/platform/workflow/templates/repositories/workflowTemplatesStore'\nimport type {\n  TemplateGroup,\n  TemplateInfo,\n  WorkflowTemplates\n} from '@/platform/workflow/templates/types/template'\nimport { api } from '@/scripts/api'\nimport { app } from '@/scripts/app'\nimport { useDialogStore } from '@/stores/dialogStore'\n\nexport function useTemplateWorkflows() {\n  const { t } = useI18n()\n  const workflowTemplatesStore = useWorkflowTemplatesStore()\n  const dialogStore = useDialogStore()\n\n  // State\n  const selectedTemplate = ref<WorkflowTemplates | null>(null)\n  const loadingTemplateId = ref<string | null>(null)\n\n  // Computed\n  const isTemplatesLoaded = computed(() => workflowTemplatesStore.isLoaded)\n  const allTemplateGroups = computed<TemplateGroup[]>(\n    () => workflowTemplatesStore.groupedTemplates\n  )\n\n  /**\n   * Loads all template workflows from the API\n   */\n  const loadTemplates = async () => {\n    if (!workflowTemplatesStore.isLoaded) {\n      await workflowTemplatesStore.loadWorkflowTemplates()\n    }\n    return workflowTemplatesStore.isLoaded\n  }\n\n  /**\n   * Selects the first template category as default\n   */\n  const selectFirstTemplateCategory = () => {\n    if (allTemplateGroups.value.length > 0) {\n      const firstCategory = allTemplateGroups.value[0].modules[0]\n      selectTemplateCategory(firstCategory)\n    }\n  }\n\n  /**\n   * Selects a template category\n   */\n  const selectTemplateCategory = (category: WorkflowTemplates | null) => {\n    selectedTemplate.value = category\n    return category !== null\n  }\n\n  /**\n   * Gets template thumbnail URL\n   */\n  const getTemplateThumbnailUrl = (\n    template: TemplateInfo,\n    sourceModule: string,\n    index = '1'\n  ) => {\n    const basePath =\n      sourceModule === 'default'\n        ? api.fileURL(`/templates/${template.name}`)\n        : api.apiURL(`/workflow_templates/${sourceModule}/${template.name}`)\n\n    const indexSuffix = sourceModule === 'default' && index ? `-${index}` : ''\n    return `${basePath}${indexSuffix}.${template.mediaSubtype}`\n  }\n\n  /**\n   * Gets formatted template title\n   */\n  const getTemplateTitle = (template: TemplateInfo, sourceModule: string) => {\n    const fallback =\n      template.title ?? template.name ?? `${sourceModule} Template`\n    return sourceModule === 'default'\n      ? template.localizedTitle ?? fallback\n      : fallback\n  }\n\n  /**\n   * Gets formatted template description\n   */\n  const getTemplateDescription = (template: TemplateInfo) => {\n    return (\n      (template.localizedDescription || template.description)\n        ?.replace(/[-_]/g, ' ')\n        .trim() ?? ''\n    )\n  }\n\n  /**\n   * Loads a workflow template\n   */\n  const loadWorkflowTemplate = async (id: string, sourceModule: string) => {\n    if (!isTemplatesLoaded.value) return false\n\n    loadingTemplateId.value = id\n    let json\n\n    try {\n      // Handle \"All\" category as a special case\n      if (sourceModule === 'all') {\n        // Find \"All\" category in the ComfyUI Examples group\n        const comfyExamplesGroup = allTemplateGroups.value.find(\n          (g) =>\n            g.label ===\n            t('templateWorkflows.category.ComfyUI Examples', 'ComfyUI Examples')\n        )\n        const allCategory = comfyExamplesGroup?.modules.find(\n          (m) => m.moduleName === 'all'\n        )\n        const template = allCategory?.templates.find((t) => t.name === id)\n\n        if (!template || !template.sourceModule) return false\n\n        // Use the stored source module for loading\n        const actualSourceModule = template.sourceModule\n        json = await fetchTemplateJson(id, actualSourceModule)\n\n        // Use source module for name\n        const workflowName =\n          actualSourceModule === 'default'\n            ? t(`templateWorkflows.template.${id}`, id)\n            : id\n\n        dialogStore.closeDialog()\n        await app.loadGraphData(json, true, true, workflowName)\n\n        return true\n      }\n\n      // Regular case for normal categories\n      json = await fetchTemplateJson(id, sourceModule)\n\n      const workflowName =\n        sourceModule === 'default'\n          ? t(`templateWorkflows.template.${id}`, id)\n          : id\n\n      dialogStore.closeDialog()\n      await app.loadGraphData(json, true, true, workflowName)\n\n      return true\n    } catch (error) {\n      console.error('Error loading workflow template:', error)\n      return false\n    } finally {\n      loadingTemplateId.value = null\n    }\n  }\n\n  /**\n   * Fetches template JSON from the appropriate endpoint\n   */\n  const fetchTemplateJson = async (id: string, sourceModule: string) => {\n    if (sourceModule === 'default') {\n      // Default templates provided by frontend are served on this separate endpoint\n      return fetch(api.fileURL(`/templates/${id}.json`)).then((r) => r.json())\n    } else {\n      return fetch(\n        api.apiURL(`/workflow_templates/${sourceModule}/${id}.json`)\n      ).then((r) => r.json())\n    }\n  }\n\n  return {\n    // State\n    selectedTemplate,\n    loadingTemplateId,\n\n    // Computed\n    isTemplatesLoaded,\n    allTemplateGroups,\n\n    // Methods\n    loadTemplates,\n    selectFirstTemplateCategory,\n    selectTemplateCategory,\n    getTemplateThumbnailUrl,\n    getTemplateTitle,\n    getTemplateDescription,\n    loadWorkflowTemplate\n  }\n}\n","<template>\n  <BaseModalLayout\n    :content-title=\"$t('templateWorkflows.title', 'Workflow Templates')\"\n    class=\"workflow-template-selector-dialog\"\n  >\n    <template #leftPanel>\n      <LeftSidePanel v-model=\"selectedNavItem\" :nav-items=\"navItems\">\n        <template #header-icon>\n          <i class=\"icon-[comfy--template]\" />\n        </template>\n        <template #header-title>\n          <span class=\"text-neutral text-base\">{{\n            $t('sideToolbar.templates', 'Templates')\n          }}</span>\n        </template>\n      </LeftSidePanel>\n    </template>\n\n    <template #header>\n      <SearchBox v-model=\"searchQuery\" class=\"max-w-[384px]\" />\n    </template>\n\n    <template #header-right-area>\n      <div class=\"flex gap-2\">\n        <IconTextButton\n          v-if=\"filteredCount !== totalCount\"\n          type=\"secondary\"\n          :label=\"$t('templateWorkflows.resetFilters', 'Clear Filters')\"\n          @click=\"resetFilters\"\n        >\n          <template #icon>\n            <i-lucide:filter-x />\n          </template>\n        </IconTextButton>\n      </div>\n    </template>\n\n    <template #contentFilter>\n      <div class=\"relative px-6 pt-2 pb-4 flex gap-2 flex-wrap\">\n        <!-- Model Filter -->\n        <MultiSelect\n          v-model=\"selectedModelObjects\"\n          v-model:search-query=\"modelSearchText\"\n          class=\"w-[250px]\"\n          :label=\"modelFilterLabel\"\n          :options=\"modelOptions\"\n          :show-search-box=\"true\"\n          :show-selected-count=\"true\"\n          :show-clear-button=\"true\"\n        >\n          <template #icon>\n            <i-lucide:cpu />\n          </template>\n        </MultiSelect>\n\n        <!-- Use Case Filter -->\n        <MultiSelect\n          v-model=\"selectedUseCaseObjects\"\n          :label=\"useCaseFilterLabel\"\n          :options=\"useCaseOptions\"\n          :show-search-box=\"true\"\n          :show-selected-count=\"true\"\n          :show-clear-button=\"true\"\n        >\n          <template #icon>\n            <i-lucide:target />\n          </template>\n        </MultiSelect>\n\n        <!-- License Filter -->\n        <MultiSelect\n          v-model=\"selectedLicenseObjects\"\n          :label=\"licenseFilterLabel\"\n          :options=\"licenseOptions\"\n          :show-search-box=\"true\"\n          :show-selected-count=\"true\"\n          :show-clear-button=\"true\"\n        >\n          <template #icon>\n            <i-lucide:file-text />\n          </template>\n        </MultiSelect>\n\n        <!-- Sort Options -->\n        <div class=\"absolute right-5\">\n          <SingleSelect\n            v-model=\"sortBy\"\n            :label=\"$t('templateWorkflows.sorting', 'Sort by')\"\n            :options=\"sortOptions\"\n            class=\"min-w-[270px]\"\n          >\n            <template #icon>\n              <i-lucide:arrow-up-down />\n            </template>\n          </SingleSelect>\n        </div>\n      </div>\n      <div\n        v-if=\"!isLoading\"\n        class=\"px-6 pt-4 pb-2 text-2xl font-semibold text-neutral\"\n      >\n        <span>\n          {{ pageTitle }}\n        </span>\n      </div>\n    </template>\n\n    <template #content>\n      <!-- No Results State (only show when loaded and no results) -->\n      <div\n        v-if=\"!isLoading && filteredTemplates.length === 0\"\n        class=\"flex flex-col items-center justify-center h-64 text-neutral-500\"\n      >\n        <i-lucide:search class=\"w-12 h-12 mb-4 opacity-50\" />\n        <p class=\"text-lg mb-2\">\n          {{ $t('templateWorkflows.noResults', 'No templates found') }}\n        </p>\n        <p class=\"text-sm\">\n          {{\n            $t(\n              'templateWorkflows.noResultsHint',\n              'Try adjusting your search or filters'\n            )\n          }}\n        </p>\n      </div>\n      <div v-else>\n        <!-- Title -->\n        <span\n          v-if=\"isLoading\"\n          class=\"inline-block h-8 w-48 bg-neutral-200 dark-theme:bg-neutral-700 rounded animate-pulse\"\n        ></span>\n\n        <!-- Template Cards Grid -->\n        <div\n          :key=\"templateListKey\"\n          :style=\"gridStyle\"\n          data-testid=\"template-workflows-content\"\n        >\n          <!-- Loading Skeletons (show while loading initial data) -->\n          <CardContainer\n            v-for=\"n in isLoading ? 12 : 0\"\n            :key=\"`initial-skeleton-${n}`\"\n            ratio=\"smallSquare\"\n            type=\"workflow-template-card\"\n          >\n            <template #top>\n              <CardTop ratio=\"landscape\">\n                <template #default>\n                  <div\n                    class=\"w-full h-full bg-neutral-200 dark-theme:bg-neutral-700 animate-pulse\"\n                  ></div>\n                </template>\n              </CardTop>\n            </template>\n            <template #bottom>\n              <CardBottom>\n                <div class=\"px-4 py-3\">\n                  <div\n                    class=\"h-6 bg-neutral-200 dark-theme:bg-neutral-700 rounded animate-pulse mb-2\"\n                  ></div>\n                  <div\n                    class=\"h-4 bg-neutral-200 dark-theme:bg-neutral-700 rounded animate-pulse\"\n                  ></div>\n                </div>\n              </CardBottom>\n            </template>\n          </CardContainer>\n\n          <!-- Actual Template Cards -->\n          <CardContainer\n            v-for=\"template in isLoading ? [] : displayTemplates\"\n            :key=\"template.name\"\n            ref=\"cardRefs\"\n            v-memo=\"[template.name, hoveredTemplate === template.name]\"\n            ratio=\"smallSquare\"\n            type=\"workflow-template-card\"\n            :data-testid=\"`template-workflow-${template.name}`\"\n            @mouseenter=\"hoveredTemplate = template.name\"\n            @mouseleave=\"hoveredTemplate = null\"\n            @click=\"onLoadWorkflow(template)\"\n          >\n            <template #top>\n              <CardTop ratio=\"square\">\n                <template #default>\n                  <!-- Template Thumbnail -->\n                  <div\n                    class=\"w-full h-full relative rounded-lg overflow-hidden\"\n                  >\n                    <template v-if=\"template.mediaType === 'audio'\">\n                      <AudioThumbnail :src=\"getBaseThumbnailSrc(template)\" />\n                    </template>\n                    <template\n                      v-else-if=\"template.thumbnailVariant === 'compareSlider'\"\n                    >\n                      <CompareSliderThumbnail\n                        :base-image-src=\"getBaseThumbnailSrc(template)\"\n                        :overlay-image-src=\"getOverlayThumbnailSrc(template)\"\n                        :alt=\"\n                          getTemplateTitle(\n                            template,\n                            getEffectiveSourceModule(template)\n                          )\n                        \"\n                        :is-hovered=\"hoveredTemplate === template.name\"\n                        :is-video=\"\n                          template.mediaType === 'video' ||\n                          template.mediaSubtype === 'webp'\n                        \"\n                      />\n                    </template>\n                    <template\n                      v-else-if=\"template.thumbnailVariant === 'hoverDissolve'\"\n                    >\n                      <HoverDissolveThumbnail\n                        :base-image-src=\"getBaseThumbnailSrc(template)\"\n                        :overlay-image-src=\"getOverlayThumbnailSrc(template)\"\n                        :alt=\"\n                          getTemplateTitle(\n                            template,\n                            getEffectiveSourceModule(template)\n                          )\n                        \"\n                        :is-hovered=\"hoveredTemplate === template.name\"\n                        :is-video=\"\n                          template.mediaType === 'video' ||\n                          template.mediaSubtype === 'webp'\n                        \"\n                      />\n                    </template>\n                    <template v-else>\n                      <DefaultThumbnail\n                        :src=\"getBaseThumbnailSrc(template)\"\n                        :alt=\"\n                          getTemplateTitle(\n                            template,\n                            getEffectiveSourceModule(template)\n                          )\n                        \"\n                        :is-hovered=\"hoveredTemplate === template.name\"\n                        :is-video=\"\n                          template.mediaType === 'video' ||\n                          template.mediaSubtype === 'webp'\n                        \"\n                        :hover-zoom=\"\n                          template.thumbnailVariant === 'zoomHover' ? 16 : 5\n                        \"\n                      />\n                    </template>\n                    <ProgressSpinner\n                      v-if=\"loadingTemplate === template.name\"\n                      class=\"absolute inset-0 z-10 w-12 h-12 m-auto\"\n                    />\n                  </div>\n                </template>\n                <template #bottom-right>\n                  <template v-if=\"template.tags && template.tags.length > 0\">\n                    <SquareChip\n                      v-for=\"tag in template.tags\"\n                      :key=\"tag\"\n                      :label=\"tag\"\n                    />\n                  </template>\n                </template>\n              </CardTop>\n            </template>\n            <template #bottom>\n              <CardBottom>\n                <div class=\"flex flex-col gap-2 pt-3\">\n                  <h3\n                    class=\"line-clamp-1 text-sm m-0\"\n                    :title=\"\n                      getTemplateTitle(\n                        template,\n                        getEffectiveSourceModule(template)\n                      )\n                    \"\n                  >\n                    {{\n                      getTemplateTitle(\n                        template,\n                        getEffectiveSourceModule(template)\n                      )\n                    }}\n                  </h3>\n                  <div class=\"flex justify-between gap-2\">\n                    <div class=\"flex-1\">\n                      <p\n                        class=\"line-clamp-2 text-sm text-muted m-0\"\n                        :title=\"getTemplateDescription(template)\"\n                      >\n                        {{ getTemplateDescription(template) }}\n                      </p>\n                    </div>\n                    <div\n                      v-if=\"template.tutorialUrl\"\n                      class=\"flex flex-col-reverse justify-center\"\n                    >\n                      <IconButton\n                        v-if=\"hoveredTemplate === template.name\"\n                        v-tooltip.bottom=\"$t('g.seeTutorial')\"\n                        v-bind=\"$attrs\"\n                        type=\"primary\"\n                        size=\"sm\"\n                        @click.stop=\"openTutorial(template)\"\n                      >\n                        <i class=\"icon-[lucide--info] size-4\" />\n                      </IconButton>\n                    </div>\n                  </div>\n                </div>\n              </CardBottom>\n            </template>\n          </CardContainer>\n\n          <!-- Loading More Skeletons -->\n          <CardContainer\n            v-for=\"n in isLoadingMore ? 6 : 0\"\n            :key=\"`skeleton-${n}`\"\n            ratio=\"smallSquare\"\n            type=\"workflow-template-card\"\n          >\n            <template #top>\n              <CardTop ratio=\"square\">\n                <template #default>\n                  <div\n                    class=\"w-full h-full bg-neutral-200 dark-theme:bg-neutral-700 animate-pulse\"\n                  ></div>\n                </template>\n              </CardTop>\n            </template>\n            <template #bottom>\n              <CardBottom>\n                <div class=\"px-4 py-3\">\n                  <div\n                    class=\"h-6 bg-neutral-200 dark-theme:bg-neutral-700 rounded animate-pulse mb-2\"\n                  ></div>\n                  <div\n                    class=\"h-4 bg-neutral-200 dark-theme:bg-neutral-700 rounded animate-pulse\"\n                  ></div>\n                </div>\n              </CardBottom>\n            </template>\n          </CardContainer>\n        </div>\n      </div>\n\n      <!-- Load More Trigger -->\n      <div\n        v-if=\"!isLoading && hasMoreTemplates\"\n        ref=\"loadTrigger\"\n        class=\"w-full h-4 flex justify-center items-center mt-4\"\n      >\n        <div v-if=\"isLoadingMore\" class=\"text-sm text-muted\">\n          {{ $t('templateWorkflows.loadingMore', 'Loading more...') }}\n        </div>\n      </div>\n\n      <!-- Results Summary -->\n      <div\n        v-if=\"!isLoading\"\n        class=\"mt-6 px-6 text-sm text-neutral-600 dark-theme:text-neutral-400\"\n      >\n        {{\n          $t('templateWorkflows.resultsCount', {\n            count: filteredCount,\n            total: totalCount\n          })\n        }}\n      </div>\n    </template>\n  </BaseModalLayout>\n</template>\n\n<script setup lang=\"ts\">\nimport { useAsyncState } from '@vueuse/core'\nimport ProgressSpinner from 'primevue/progressspinner'\nimport { computed, onBeforeUnmount, provide, ref, watch } from 'vue'\nimport { useI18n } from 'vue-i18n'\n\nimport IconButton from '@/components/button/IconButton.vue'\nimport IconTextButton from '@/components/button/IconTextButton.vue'\nimport CardBottom from '@/components/card/CardBottom.vue'\nimport CardContainer from '@/components/card/CardContainer.vue'\nimport CardTop from '@/components/card/CardTop.vue'\nimport SquareChip from '@/components/chip/SquareChip.vue'\nimport MultiSelect from '@/components/input/MultiSelect.vue'\nimport SearchBox from '@/components/input/SearchBox.vue'\nimport SingleSelect from '@/components/input/SingleSelect.vue'\nimport AudioThumbnail from '@/components/templates/thumbnails/AudioThumbnail.vue'\nimport CompareSliderThumbnail from '@/components/templates/thumbnails/CompareSliderThumbnail.vue'\nimport DefaultThumbnail from '@/components/templates/thumbnails/DefaultThumbnail.vue'\nimport HoverDissolveThumbnail from '@/components/templates/thumbnails/HoverDissolveThumbnail.vue'\nimport BaseModalLayout from '@/components/widget/layout/BaseModalLayout.vue'\nimport LeftSidePanel from '@/components/widget/panel/LeftSidePanel.vue'\nimport { useIntersectionObserver } from '@/composables/useIntersectionObserver'\nimport { useLazyPagination } from '@/composables/useLazyPagination'\nimport { useTemplateFiltering } from '@/composables/useTemplateFiltering'\nimport { useTemplateWorkflows } from '@/platform/workflow/templates/composables/useTemplateWorkflows'\nimport { useWorkflowTemplatesStore } from '@/platform/workflow/templates/repositories/workflowTemplatesStore'\nimport type { TemplateInfo } from '@/platform/workflow/templates/types/template'\nimport type { NavGroupData, NavItemData } from '@/types/navTypes'\nimport { OnCloseKey } from '@/types/widgetTypes'\nimport { createGridStyle } from '@/utils/gridUtil'\n\nconst { t } = useI18n()\n\nconst { onClose } = defineProps<{\n  onClose: () => void\n}>()\n\nprovide(OnCloseKey, onClose)\n\n// Workflow templates store and composable\nconst workflowTemplatesStore = useWorkflowTemplatesStore()\nconst {\n  loadTemplates,\n  loadWorkflowTemplate,\n  getTemplateThumbnailUrl,\n  getTemplateTitle,\n  getTemplateDescription\n} = useTemplateWorkflows()\n\nconst getEffectiveSourceModule = (template: TemplateInfo) =>\n  template.sourceModule || 'default'\n\nconst getBaseThumbnailSrc = (template: TemplateInfo) => {\n  const sm = getEffectiveSourceModule(template)\n  return getTemplateThumbnailUrl(template, sm, sm === 'default' ? '1' : '')\n}\n\nconst getOverlayThumbnailSrc = (template: TemplateInfo) => {\n  const sm = getEffectiveSourceModule(template)\n  return getTemplateThumbnailUrl(template, sm, sm === 'default' ? '2' : '')\n}\n\n// Open tutorial in new tab\nconst openTutorial = (template: TemplateInfo) => {\n  if (template.tutorialUrl) {\n    window.open(template.tutorialUrl, '_blank')\n  }\n}\n\n// Get navigation items from the store, with skeleton items while loading\nconst navItems = computed<(NavItemData | NavGroupData)[]>(() => {\n  // Show skeleton navigation items while loading\n  if (isLoading.value) {\n    return [\n      {\n        id: 'skeleton-all',\n        label: 'All Templates',\n        icon: 'icon-[lucide--layout-grid]'\n      },\n      {\n        id: 'skeleton-basics',\n        label: 'Basics',\n        icon: 'icon-[lucide--graduation-cap]'\n      },\n      {\n        title: 'Generation Type',\n        items: [\n          { id: 'skeleton-1', label: '...', icon: 'icon-[lucide--loader-2]' },\n          { id: 'skeleton-2', label: '...', icon: 'icon-[lucide--loader-2]' }\n        ]\n      },\n      {\n        title: 'Closed Source Models',\n        items: [\n          { id: 'skeleton-3', label: '...', icon: 'icon-[lucide--loader-2]' }\n        ]\n      }\n    ]\n  }\n  return workflowTemplatesStore.navGroupedTemplates\n})\n\nconst gridStyle = computed(() => createGridStyle())\n\n// Get enhanced templates for better filtering\nconst allTemplates = computed(() => {\n  return workflowTemplatesStore.enhancedTemplates\n})\n\n// Filter templates based on selected navigation item\nconst navigationFilteredTemplates = computed(() => {\n  if (!selectedNavItem.value) {\n    return allTemplates.value\n  }\n\n  return workflowTemplatesStore.filterTemplatesByCategory(selectedNavItem.value)\n})\n\n// Template filtering\nconst {\n  searchQuery,\n  selectedModels,\n  selectedUseCases,\n  selectedLicenses,\n  sortBy,\n  filteredTemplates,\n  availableModels,\n  availableUseCases,\n  availableLicenses,\n  filteredCount,\n  totalCount,\n  resetFilters\n} = useTemplateFiltering(navigationFilteredTemplates)\n\n// Convert between string array and object array for MultiSelect component\nconst selectedModelObjects = computed({\n  get() {\n    return selectedModels.value.map((model) => ({ name: model, value: model }))\n  },\n  set(value: { name: string; value: string }[]) {\n    selectedModels.value = value.map((item) => item.value)\n  }\n})\n\nconst selectedUseCaseObjects = computed({\n  get() {\n    return selectedUseCases.value.map((useCase) => ({\n      name: useCase,\n      value: useCase\n    }))\n  },\n  set(value: { name: string; value: string }[]) {\n    selectedUseCases.value = value.map((item) => item.value)\n  }\n})\n\nconst selectedLicenseObjects = computed({\n  get() {\n    return selectedLicenses.value.map((license) => ({\n      name: license,\n      value: license\n    }))\n  },\n  set(value: { name: string; value: string }[]) {\n    selectedLicenses.value = value.map((item) => item.value)\n  }\n})\n\n// Loading states\nconst loadingTemplate = ref<string | null>(null)\nconst hoveredTemplate = ref<string | null>(null)\nconst cardRefs = ref<HTMLElement[]>([])\n\n// Force re-render key for templates when sorting changes\nconst templateListKey = ref(0)\n\n// Navigation\nconst selectedNavItem = ref<string | null>('all')\n\n// Search text for model filter\nconst modelSearchText = ref<string>('')\n\n// Filter options\nconst modelOptions = computed(() =>\n  availableModels.value.map((model) => ({\n    name: model,\n    value: model\n  }))\n)\n\nconst useCaseOptions = computed(() =>\n  availableUseCases.value.map((useCase) => ({\n    name: useCase,\n    value: useCase\n  }))\n)\n\nconst licenseOptions = computed(() =>\n  availableLicenses.value.map((license) => ({\n    name: license,\n    value: license\n  }))\n)\n\n// Filter labels\nconst modelFilterLabel = computed(() => {\n  if (selectedModelObjects.value.length === 0) {\n    return t('templateWorkflows.modelFilter', 'Model Filter')\n  } else if (selectedModelObjects.value.length === 1) {\n    return selectedModelObjects.value[0].name\n  } else {\n    return t('templateWorkflows.modelsSelected', {\n      count: selectedModelObjects.value.length\n    })\n  }\n})\n\nconst useCaseFilterLabel = computed(() => {\n  if (selectedUseCaseObjects.value.length === 0) {\n    return t('templateWorkflows.useCaseFilter', 'Use Case')\n  } else if (selectedUseCaseObjects.value.length === 1) {\n    return selectedUseCaseObjects.value[0].name\n  } else {\n    return t('templateWorkflows.useCasesSelected', {\n      count: selectedUseCaseObjects.value.length\n    })\n  }\n})\n\nconst licenseFilterLabel = computed(() => {\n  if (selectedLicenseObjects.value.length === 0) {\n    return t('templateWorkflows.licenseFilter', 'License')\n  } else if (selectedLicenseObjects.value.length === 1) {\n    return selectedLicenseObjects.value[0].name\n  } else {\n    return t('templateWorkflows.licensesSelected', {\n      count: selectedLicenseObjects.value.length\n    })\n  }\n})\n\n// Sort options\nconst sortOptions = computed(() => [\n  { name: t('templateWorkflows.sort.newest', 'Newest'), value: 'newest' },\n  {\n    name: t('templateWorkflows.sort.default', 'Default'),\n    value: 'default'\n  },\n  {\n    name: t(\n      'templateWorkflows.sort.vramLowToHigh',\n      'VRAM Utilization (Low to High)'\n    ),\n    value: 'vram-low-to-high'\n  },\n  {\n    name: t(\n      'templateWorkflows.sort.modelSizeLowToHigh',\n      'Model Size (Low to High)'\n    ),\n    value: 'model-size-low-to-high'\n  },\n  {\n    name: t('templateWorkflows.sort.alphabetical', 'Alphabetical (A-Z)'),\n    value: 'alphabetical'\n  }\n])\n\n// Lazy pagination setup\nconst loadTrigger = ref<HTMLElement | null>(null)\nconst shouldUsePagination = computed(() => !searchQuery.value.trim())\n\nconst {\n  paginatedItems: paginatedTemplates,\n  isLoading: isLoadingMore,\n  hasMoreItems: hasMoreTemplates,\n  loadNextPage,\n  reset: resetPagination\n} = useLazyPagination(filteredTemplates, { itemsPerPage: 24 }) // Load 24 items per page\n\n// Display templates (all when searching, paginated when not)\nconst displayTemplates = computed(() => {\n  return shouldUsePagination.value\n    ? paginatedTemplates.value\n    : filteredTemplates.value\n})\n\n// Set up intersection observer for lazy loading\nuseIntersectionObserver(loadTrigger, () => {\n  if (\n    shouldUsePagination.value &&\n    hasMoreTemplates.value &&\n    !isLoadingMore.value\n  ) {\n    void loadNextPage()\n  }\n})\n\n// Reset pagination when filters change\nwatch(\n  [\n    searchQuery,\n    selectedNavItem,\n    sortBy,\n    selectedModels,\n    selectedUseCases,\n    selectedLicenses\n  ],\n  () => {\n    resetPagination()\n    // Clear loading state and force re-render of template list\n    loadingTemplate.value = null\n    templateListKey.value++\n  }\n)\n\n// Methods\nconst onLoadWorkflow = async (template: any) => {\n  loadingTemplate.value = template.name\n  try {\n    await loadWorkflowTemplate(\n      template.name,\n      getEffectiveSourceModule(template)\n    )\n    onClose()\n  } finally {\n    loadingTemplate.value = null\n  }\n}\n\nconst pageTitle = computed(() => {\n  const navItem = navItems.value.find((item) =>\n    'id' in item\n      ? item.id === selectedNavItem.value\n      : item.items?.some((sub) => sub.id === selectedNavItem.value)\n  )\n\n  if (!navItem) {\n    return t('templateWorkflows.allTemplates', 'All Templates')\n  }\n\n  return 'id' in navItem\n    ? navItem.label\n    : navItem.items?.find((i) => i.id === selectedNavItem.value)?.label ||\n        t('templateWorkflows.allTemplates', 'All Templates')\n})\n\n// Initialize templates loading with useAsyncState\nconst { isLoading } = useAsyncState(\n  async () => {\n    // Run both operations in parallel for better performance\n    await Promise.all([\n      loadTemplates(),\n      workflowTemplatesStore.loadWorkflowTemplates()\n    ])\n    return true\n  },\n  false, // initial state\n  {\n    immediate: true // Start loading immediately\n  }\n)\n\nonBeforeUnmount(() => {\n  cardRefs.value = [] // Release DOM refs\n})\n</script>\n\n<style>\n/* Ensure the workflow template selector dialog fits within provided dialog */\n.workflow-template-selector-dialog.base-widget-layout {\n  width: 100% !important;\n  max-width: 1400px;\n  height: 100% !important;\n  aspect-ratio: auto !important;\n}\n\n@media (min-width: 1600px) {\n  .workflow-template-selector-dialog.base-widget-layout {\n    max-width: 1600px;\n  }\n}\n</style>\n","import WorkflowTemplateSelectorDialog from '@/components/custom/widget/WorkflowTemplateSelectorDialog.vue'\nimport { useDialogService } from '@/services/dialogService'\nimport { useDialogStore } from '@/stores/dialogStore'\n\nconst DIALOG_KEY = 'global-workflow-template-selector'\n\nexport const useWorkflowTemplateSelectorDialog = () => {\n  const dialogService = useDialogService()\n  const dialogStore = useDialogStore()\n\n  function hide() {\n    dialogStore.closeDialog({ key: DIALOG_KEY })\n  }\n\n  function show() {\n    dialogService.showLayoutDialog({\n      key: DIALOG_KEY,\n      component: WorkflowTemplateSelectorDialog,\n      props: {\n        onClose: hide\n      },\n      dialogComponentProps: {\n        pt: {\n          content: { class: '!px-0 overflow-hidden h-full !py-0' },\n          root: {\n            style:\n              'width: 90vw; height: 85vh; max-width: 1400px; display: flex;'\n          }\n        }\n      }\n    })\n  }\n\n  return {\n    show,\n    hide\n  }\n}\n","import { useFirebaseAuthActions } from '@/composables/auth/useFirebaseAuthActions'\nimport { useSelectedLiteGraphItems } from '@/composables/canvas/useSelectedLiteGraphItems'\nimport { useModelSelectorDialog } from '@/composables/useModelSelectorDialog'\nimport {\n  DEFAULT_DARK_COLOR_PALETTE,\n  DEFAULT_LIGHT_COLOR_PALETTE\n} from '@/constants/coreColorPalettes'\nimport { t } from '@/i18n'\nimport {\n  LGraphEventMode,\n  LGraphGroup,\n  LGraphNode,\n  LiteGraph,\n  SubgraphNode\n} from '@/lib/litegraph/src/litegraph'\nimport type { Point } from '@/lib/litegraph/src/litegraph'\nimport { useSettingStore } from '@/platform/settings/settingStore'\nimport { useToastStore } from '@/platform/updates/common/toastStore'\nimport { useWorkflowService } from '@/platform/workflow/core/services/workflowService'\nimport {\n  type ComfyWorkflow,\n  useWorkflowStore\n} from '@/platform/workflow/management/stores/workflowStore'\nimport {\n  useCanvasStore,\n  useTitleEditorStore\n} from '@/renderer/core/canvas/canvasStore'\nimport { layoutStore } from '@/renderer/core/layout/store/layoutStore'\nimport { selectionBounds } from '@/renderer/core/layout/utils/layoutMath'\nimport { api } from '@/scripts/api'\nimport { app } from '@/scripts/app'\nimport { useDialogService } from '@/services/dialogService'\nimport { useLitegraphService } from '@/services/litegraphService'\nimport type { ComfyCommand } from '@/stores/commandStore'\nimport { useExecutionStore } from '@/stores/executionStore'\nimport { useHelpCenterStore } from '@/stores/helpCenterStore'\nimport { useNodeOutputStore } from '@/stores/imagePreviewStore'\nimport { useQueueSettingsStore, useQueueStore } from '@/stores/queueStore'\nimport { useSubgraphNavigationStore } from '@/stores/subgraphNavigationStore'\nimport { useSubgraphStore } from '@/stores/subgraphStore'\nimport { useBottomPanelStore } from '@/stores/workspace/bottomPanelStore'\nimport { useColorPaletteStore } from '@/stores/workspace/colorPaletteStore'\nimport { useSearchBoxStore } from '@/stores/workspace/searchBoxStore'\nimport { useWorkspaceStore } from '@/stores/workspaceStore'\nimport {\n  getAllNonIoNodesInSubgraph,\n  getExecutionIdsForSelectedNodes\n} from '@/utils/graphTraversalUtil'\nimport { filterOutputNodes } from '@/utils/nodeFilterUtil'\nimport {\n  ManagerUIState,\n  useManagerState\n} from '@/workbench/extensions/manager/composables/useManagerState'\nimport { ManagerTab } from '@/workbench/extensions/manager/types/comfyManagerTypes'\n\nimport { useWorkflowTemplateSelectorDialog } from './useWorkflowTemplateSelectorDialog'\n\nconst moveSelectedNodesVersionAdded = '1.22.2'\n\nexport function useCoreCommands(): ComfyCommand[] {\n  const workflowService = useWorkflowService()\n  const workflowStore = useWorkflowStore()\n  const dialogService = useDialogService()\n  const colorPaletteStore = useColorPaletteStore()\n  const firebaseAuthActions = useFirebaseAuthActions()\n  const toastStore = useToastStore()\n  const canvasStore = useCanvasStore()\n  const executionStore = useExecutionStore()\n\n  const bottomPanelStore = useBottomPanelStore()\n\n  const { getSelectedNodes, toggleSelectedNodesMode } =\n    useSelectedLiteGraphItems()\n  const getTracker = () => workflowStore.activeWorkflow?.changeTracker\n\n  const moveSelectedNodes = (\n    positionUpdater: (pos: Point, gridSize: number) => Point\n  ) => {\n    const selectedNodes = getSelectedNodes()\n    if (selectedNodes.length === 0) return\n\n    const gridSize = useSettingStore().get('Comfy.SnapToGrid.GridSize')\n    selectedNodes.forEach((node) => {\n      node.pos = positionUpdater(node.pos, gridSize)\n    })\n    app.canvas.state.selectionChanged = true\n    app.canvas.setDirty(true, true)\n  }\n\n  const commands = [\n    {\n      id: 'Comfy.NewBlankWorkflow',\n      icon: 'pi pi-plus',\n      label: 'New Blank Workflow',\n      menubarLabel: 'New',\n      category: 'essentials' as const,\n      function: () => workflowService.loadBlankWorkflow()\n    },\n    {\n      id: 'Comfy.OpenWorkflow',\n      icon: 'pi pi-folder-open',\n      label: 'Open Workflow',\n      menubarLabel: 'Open',\n      category: 'essentials' as const,\n      function: () => {\n        app.ui.loadFile()\n      }\n    },\n    {\n      id: 'Comfy.LoadDefaultWorkflow',\n      icon: 'pi pi-code',\n      label: 'Load Default Workflow',\n      function: () => workflowService.loadDefaultWorkflow()\n    },\n    {\n      id: 'Comfy.SaveWorkflow',\n      icon: 'pi pi-save',\n      label: 'Save Workflow',\n      menubarLabel: 'Save',\n      category: 'essentials' as const,\n      function: async () => {\n        const workflow = useWorkflowStore().activeWorkflow as ComfyWorkflow\n        if (!workflow) return\n\n        await workflowService.saveWorkflow(workflow)\n      }\n    },\n    {\n      id: 'Comfy.PublishSubgraph',\n      icon: 'pi pi-save',\n      label: 'Publish Subgraph',\n      menubarLabel: 'Publish',\n      function: async () => {\n        await useSubgraphStore().publishSubgraph()\n      }\n    },\n    {\n      id: 'Comfy.SaveWorkflowAs',\n      icon: 'pi pi-save',\n      label: 'Save Workflow As',\n      menubarLabel: 'Save As',\n      category: 'essentials' as const,\n      function: async () => {\n        const workflow = useWorkflowStore().activeWorkflow as ComfyWorkflow\n        if (!workflow) return\n\n        await workflowService.saveWorkflowAs(workflow)\n      }\n    },\n    {\n      id: 'Comfy.ExportWorkflow',\n      icon: 'pi pi-download',\n      label: 'Export Workflow',\n      menubarLabel: 'Export',\n      category: 'essentials' as const,\n      function: async () => {\n        await workflowService.exportWorkflow('workflow', 'workflow')\n      }\n    },\n    {\n      id: 'Comfy.ExportWorkflowAPI',\n      icon: 'pi pi-download',\n      label: 'Export Workflow (API Format)',\n      menubarLabel: 'Export (API)',\n      function: async () => {\n        await workflowService.exportWorkflow('workflow_api', 'output')\n      }\n    },\n    {\n      id: 'Comfy.Undo',\n      icon: 'pi pi-undo',\n      label: 'Undo',\n      category: 'essentials' as const,\n      function: async () => {\n        await getTracker()?.undo?.()\n      }\n    },\n    {\n      id: 'Comfy.Redo',\n      icon: 'pi pi-refresh',\n      label: 'Redo',\n      category: 'essentials' as const,\n      function: async () => {\n        await getTracker()?.redo?.()\n      }\n    },\n    {\n      id: 'Comfy.ClearWorkflow',\n      icon: 'pi pi-trash',\n      label: 'Clear Workflow',\n      category: 'essentials' as const,\n      function: () => {\n        const settingStore = useSettingStore()\n        if (\n          !settingStore.get('Comfy.ConfirmClear') ||\n          confirm('Clear workflow?')\n        ) {\n          app.clean()\n          if (app.canvas.subgraph) {\n            // `clear` is not implemented on subgraphs and the parent class's\n            // (`LGraph`) `clear` breaks the subgraph structure. For subgraphs,\n            // just clear the nodes but preserve input/output nodes and structure\n            const subgraph = app.canvas.subgraph\n            const nonIoNodes = getAllNonIoNodesInSubgraph(subgraph)\n            nonIoNodes.forEach((node) => subgraph.remove(node))\n          }\n          api.dispatchCustomEvent('graphCleared')\n        }\n      }\n    },\n    {\n      id: 'Comfy.Canvas.ResetView',\n      icon: 'pi pi-expand',\n      label: 'Reset View',\n      function: () => {\n        useLitegraphService().resetView()\n      }\n    },\n    {\n      id: 'Comfy.OpenClipspace',\n      icon: 'pi pi-clipboard',\n      label: 'Clipspace',\n      function: () => {\n        app.openClipspace()\n      }\n    },\n    {\n      id: 'Comfy.RefreshNodeDefinitions',\n      icon: 'pi pi-refresh',\n      label: 'Refresh Node Definitions',\n      category: 'essentials' as const,\n      function: async () => {\n        await app.refreshComboInNodes()\n      }\n    },\n    {\n      id: 'Comfy.Interrupt',\n      icon: 'pi pi-stop',\n      label: 'Interrupt',\n      category: 'essentials' as const,\n      function: async () => {\n        await api.interrupt(executionStore.activePromptId)\n        toastStore.add({\n          severity: 'info',\n          summary: t('g.interrupted'),\n          detail: t('toastMessages.interrupted'),\n          life: 1000\n        })\n      }\n    },\n    {\n      id: 'Comfy.ClearPendingTasks',\n      icon: 'pi pi-stop',\n      label: 'Clear Pending Tasks',\n      category: 'essentials' as const,\n      function: async () => {\n        await useQueueStore().clear(['queue'])\n        toastStore.add({\n          severity: 'info',\n          summary: t('g.confirmed'),\n          detail: t('toastMessages.pendingTasksDeleted'),\n          life: 3000\n        })\n      }\n    },\n    {\n      id: 'Comfy.BrowseTemplates',\n      icon: 'pi pi-folder-open',\n      label: 'Browse Templates',\n      function: () => {\n        useWorkflowTemplateSelectorDialog().show()\n      }\n    },\n    {\n      id: 'Comfy.Canvas.ZoomIn',\n      icon: 'pi pi-plus',\n      label: 'Zoom In',\n      category: 'view-controls' as const,\n      function: () => {\n        const ds = app.canvas.ds\n        ds.changeScale(\n          ds.scale * 1.1,\n          ds.element ? [ds.element.width / 2, ds.element.height / 2] : undefined\n        )\n        app.canvas.setDirty(true, true)\n      }\n    },\n    {\n      id: 'Comfy.Canvas.ZoomOut',\n      icon: 'pi pi-minus',\n      label: 'Zoom Out',\n      category: 'view-controls' as const,\n      function: () => {\n        const ds = app.canvas.ds\n        ds.changeScale(\n          ds.scale / 1.1,\n          ds.element ? [ds.element.width / 2, ds.element.height / 2] : undefined\n        )\n        app.canvas.setDirty(true, true)\n      }\n    },\n    {\n      id: 'Experimental.ToggleVueNodes',\n      label: () =>\n        `Experimental: ${\n          useSettingStore().get('Comfy.VueNodes.Enabled') ? 'Disable' : 'Enable'\n        } Vue Nodes`,\n      function: async () => {\n        const settingStore = useSettingStore()\n        const current = settingStore.get('Comfy.VueNodes.Enabled') ?? false\n        await settingStore.set('Comfy.VueNodes.Enabled', !current)\n      }\n    },\n    {\n      id: 'Comfy.Canvas.FitView',\n      icon: 'pi pi-expand',\n      label: 'Fit view to selected nodes',\n      menubarLabel: 'Zoom to fit',\n      category: 'view-controls' as const,\n      function: () => {\n        const vueNodesEnabled = useSettingStore().get('Comfy.VueNodes.Enabled')\n\n        if (vueNodesEnabled) {\n          // Get nodes from Vue stores\n          const canvasStore = useCanvasStore()\n          const selectedNodeIds = canvasStore.selectedNodeIds\n          const allNodes = layoutStore.getAllNodes().value\n\n          // Get nodes to fit - selected if any, otherwise all\n          const nodesToFit =\n            selectedNodeIds.size > 0\n              ? Array.from(selectedNodeIds)\n                  .map((id) => allNodes.get(id))\n                  .filter((node) => node != null)\n              : Array.from(allNodes.values())\n\n          // Use Vue nodes bounds calculation\n          const bounds = selectionBounds(nodesToFit)\n          if (!bounds) {\n            toastStore.add({\n              severity: 'error',\n              summary: t('toastMessages.emptyCanvas'),\n              life: 3000\n            })\n            return\n          }\n\n          // Convert to LiteGraph format and animate\n          const lgBounds = [\n            bounds.x,\n            bounds.y,\n            bounds.width,\n            bounds.height\n          ] as const\n          const setDirty = () => app.canvas.setDirty(true, true)\n          app.canvas.ds.animateToBounds(lgBounds, setDirty)\n        } else {\n          if (app.canvas.empty) {\n            toastStore.add({\n              severity: 'error',\n              summary: t('toastMessages.emptyCanvas'),\n              life: 3000\n            })\n            return\n          }\n          app.canvas.fitViewToSelectionAnimated()\n        }\n      }\n    },\n    {\n      id: 'Comfy.Canvas.ToggleLock',\n      icon: 'pi pi-lock',\n      label: 'Canvas Toggle Lock',\n      category: 'view-controls' as const,\n      function: () => {\n        app.canvas.state.readOnly = !app.canvas.state.readOnly\n      }\n    },\n    {\n      id: 'Comfy.Canvas.Lock',\n      icon: 'pi pi-lock',\n      label: 'Lock Canvas',\n      category: 'view-controls' as const,\n      function: () => {\n        app.canvas.state.readOnly = true\n      }\n    },\n    {\n      id: 'Comfy.Canvas.Unlock',\n      icon: 'pi pi-lock-open',\n      label: 'Unlock Canvas',\n      function: () => {\n        app.canvas.state.readOnly = false\n      }\n    },\n    {\n      id: 'Comfy.Canvas.ToggleLinkVisibility',\n      icon: 'pi pi-eye',\n      label: 'Canvas Toggle Link Visibility',\n      menubarLabel: 'Node Links',\n      versionAdded: '1.3.6',\n\n      function: (() => {\n        const settingStore = useSettingStore()\n        let lastLinksRenderMode = LiteGraph.SPLINE_LINK\n\n        return async () => {\n          const currentMode = settingStore.get('Comfy.LinkRenderMode')\n\n          if (currentMode === LiteGraph.HIDDEN_LINK) {\n            // If links are hidden, restore the last positive value or default to spline mode\n            await settingStore.set('Comfy.LinkRenderMode', lastLinksRenderMode)\n          } else {\n            // If links are visible, store the current mode and hide links\n            lastLinksRenderMode = currentMode\n            await settingStore.set(\n              'Comfy.LinkRenderMode',\n              LiteGraph.HIDDEN_LINK\n            )\n          }\n        }\n      })(),\n      active: () =>\n        useSettingStore().get('Comfy.LinkRenderMode') !== LiteGraph.HIDDEN_LINK\n    },\n    {\n      id: 'Comfy.Canvas.ToggleMinimap',\n      icon: 'pi pi-map',\n      label: 'Canvas Toggle Minimap',\n      menubarLabel: 'Minimap',\n      versionAdded: '1.24.1',\n      function: async () => {\n        const settingStore = useSettingStore()\n        await settingStore.set(\n          'Comfy.Minimap.Visible',\n          !settingStore.get('Comfy.Minimap.Visible')\n        )\n      },\n      active: () => useSettingStore().get('Comfy.Minimap.Visible')\n    },\n    {\n      id: 'Comfy.QueuePrompt',\n      icon: 'pi pi-play',\n      label: 'Queue Prompt',\n      versionAdded: '1.3.7',\n      category: 'essentials' as const,\n      function: async () => {\n        const batchCount = useQueueSettingsStore().batchCount\n        await app.queuePrompt(0, batchCount)\n      }\n    },\n    {\n      id: 'Comfy.QueuePromptFront',\n      icon: 'pi pi-play',\n      label: 'Queue Prompt (Front)',\n      versionAdded: '1.3.7',\n      category: 'essentials' as const,\n      function: async () => {\n        const batchCount = useQueueSettingsStore().batchCount\n        await app.queuePrompt(-1, batchCount)\n      }\n    },\n    {\n      id: 'Comfy.QueueSelectedOutputNodes',\n      icon: 'pi pi-play',\n      label: 'Queue Selected Output Nodes',\n      versionAdded: '1.19.6',\n      function: async () => {\n        const batchCount = useQueueSettingsStore().batchCount\n        const selectedNodes = getSelectedNodes()\n        const selectedOutputNodes = filterOutputNodes(selectedNodes)\n\n        if (selectedOutputNodes.length === 0) {\n          toastStore.add({\n            severity: 'error',\n            summary: t('toastMessages.nothingToQueue'),\n            detail: t('toastMessages.pleaseSelectOutputNodes'),\n            life: 3000\n          })\n          return\n        }\n\n        // Get execution IDs for all selected output nodes and their descendants\n        const executionIds =\n          getExecutionIdsForSelectedNodes(selectedOutputNodes)\n        await app.queuePrompt(0, batchCount, executionIds)\n      }\n    },\n    {\n      id: 'Comfy.ShowSettingsDialog',\n      icon: 'pi pi-cog',\n      label: 'Show Settings Dialog',\n      versionAdded: '1.3.7',\n      category: 'view-controls' as const,\n      function: () => {\n        dialogService.showSettingsDialog()\n      }\n    },\n    {\n      id: 'Comfy.Graph.GroupSelectedNodes',\n      icon: 'pi pi-sitemap',\n      label: 'Group Selected Nodes',\n      versionAdded: '1.3.7',\n      category: 'essentials' as const,\n      function: () => {\n        const { canvas } = app\n        if (!canvas.selectedItems?.size) {\n          toastStore.add({\n            severity: 'error',\n            summary: t('toastMessages.nothingToGroup'),\n            detail: t('toastMessages.pleaseSelectNodesToGroup'),\n            life: 3000\n          })\n          return\n        }\n        const group = new LGraphGroup()\n        const padding = useSettingStore().get(\n          'Comfy.GroupSelectedNodes.Padding'\n        )\n        group.resizeTo(canvas.selectedItems, padding)\n        canvas.graph?.add(group)\n\n        group.recomputeInsideNodes()\n\n        useTitleEditorStore().titleEditorTarget = group\n      }\n    },\n    {\n      id: 'Workspace.NextOpenedWorkflow',\n      icon: 'pi pi-step-forward',\n      label: 'Next Opened Workflow',\n      versionAdded: '1.3.9',\n      function: async () => {\n        await workflowService.loadNextOpenedWorkflow()\n      }\n    },\n    {\n      id: 'Workspace.PreviousOpenedWorkflow',\n      icon: 'pi pi-step-backward',\n      label: 'Previous Opened Workflow',\n      versionAdded: '1.3.9',\n      function: async () => {\n        await workflowService.loadPreviousOpenedWorkflow()\n      }\n    },\n    {\n      id: 'Comfy.Canvas.ToggleSelectedNodes.Mute',\n      icon: 'pi pi-volume-off',\n      label: 'Mute/Unmute Selected Nodes',\n      versionAdded: '1.3.11',\n      category: 'essentials' as const,\n      function: () => {\n        toggleSelectedNodesMode(LGraphEventMode.NEVER)\n        app.canvas.setDirty(true, true)\n      }\n    },\n    {\n      id: 'Comfy.Canvas.ToggleSelectedNodes.Bypass',\n      icon: 'pi pi-shield',\n      label: 'Bypass/Unbypass Selected Nodes',\n      versionAdded: '1.3.11',\n      category: 'essentials' as const,\n      function: () => {\n        toggleSelectedNodesMode(LGraphEventMode.BYPASS)\n        app.canvas.setDirty(true, true)\n      }\n    },\n    {\n      id: 'Comfy.Canvas.ToggleSelectedNodes.Pin',\n      icon: 'pi pi-pin',\n      label: 'Pin/Unpin Selected Nodes',\n      versionAdded: '1.3.11',\n      category: 'essentials' as const,\n      function: () => {\n        getSelectedNodes().forEach((node) => {\n          node.pin(!node.pinned)\n        })\n        app.canvas.setDirty(true, true)\n      }\n    },\n    {\n      id: 'Comfy.Canvas.ToggleSelected.Pin',\n      icon: 'pi pi-pin',\n      label: 'Pin/Unpin Selected Items',\n      versionAdded: '1.3.33',\n      function: () => {\n        for (const item of app.canvas.selectedItems) {\n          if (item instanceof LGraphNode || item instanceof LGraphGroup) {\n            item.pin(!item.pinned)\n          }\n        }\n        app.canvas.setDirty(true, true)\n      }\n    },\n    {\n      id: 'Comfy.Canvas.Resize',\n      icon: 'pi pi-minus',\n      label: 'Resize Selected Nodes',\n      versionAdded: '',\n      function: () => {\n        getSelectedNodes().forEach((node) => {\n          const optimalSize = node.computeSize()\n          node.setSize([optimalSize[0], optimalSize[1]])\n        })\n        app.canvas.setDirty(true, true)\n      }\n    },\n    {\n      id: 'Comfy.Canvas.ToggleSelectedNodes.Collapse',\n      icon: 'pi pi-minus',\n      label: 'Collapse/Expand Selected Nodes',\n      versionAdded: '1.3.11',\n      function: () => {\n        getSelectedNodes().forEach((node) => {\n          node.collapse()\n        })\n        app.canvas.setDirty(true, true)\n      }\n    },\n    {\n      id: 'Comfy.ToggleTheme',\n      icon: 'pi pi-moon',\n      label: 'Toggle Theme (Dark/Light)',\n      versionAdded: '1.3.12',\n      function: (() => {\n        let previousDarkTheme: string = DEFAULT_DARK_COLOR_PALETTE.id\n        let previousLightTheme: string = DEFAULT_LIGHT_COLOR_PALETTE.id\n\n        return async () => {\n          const settingStore = useSettingStore()\n          const theme = colorPaletteStore.completedActivePalette\n          if (theme.light_theme) {\n            previousLightTheme = theme.id\n            await settingStore.set('Comfy.ColorPalette', previousDarkTheme)\n          } else {\n            previousDarkTheme = theme.id\n            await settingStore.set('Comfy.ColorPalette', previousLightTheme)\n          }\n        }\n      })()\n    },\n    {\n      id: 'Workspace.ToggleBottomPanel',\n      icon: 'pi pi-list',\n      label: 'Toggle Bottom Panel',\n      menubarLabel: 'Bottom Panel',\n      versionAdded: '1.3.22',\n      category: 'view-controls' as const,\n      function: () => {\n        bottomPanelStore.toggleBottomPanel()\n      },\n      active: () => bottomPanelStore.bottomPanelVisible\n    },\n    {\n      id: 'Workspace.ToggleFocusMode',\n      icon: 'pi pi-eye',\n      label: 'Toggle Focus Mode',\n      menubarLabel: 'Focus Mode',\n      versionAdded: '1.3.27',\n      category: 'view-controls' as const,\n      function: () => {\n        useWorkspaceStore().toggleFocusMode()\n      },\n      active: () => useWorkspaceStore().focusMode\n    },\n    {\n      id: 'Comfy.Graph.FitGroupToContents',\n      icon: 'pi pi-expand',\n      label: 'Fit Group To Contents',\n      versionAdded: '1.4.9',\n      function: () => {\n        for (const group of app.canvas.selectedItems) {\n          if (group instanceof LGraphGroup) {\n            group.recomputeInsideNodes()\n            const padding = useSettingStore().get(\n              'Comfy.GroupSelectedNodes.Padding'\n            )\n            group.resizeTo(group.children, padding)\n            app.graph.change()\n          }\n        }\n      }\n    },\n    {\n      id: 'Comfy.Help.OpenComfyUIIssues',\n      icon: 'pi pi-github',\n      label: 'Open ComfyUI Issues',\n      menubarLabel: 'ComfyUI Issues',\n      versionAdded: '1.5.5',\n      function: () => {\n        window.open(\n          'https://github.com/comfyanonymous/ComfyUI/issues',\n          '_blank'\n        )\n      }\n    },\n    {\n      id: 'Comfy.Help.OpenComfyUIDocs',\n      icon: 'pi pi-info-circle',\n      label: 'Open ComfyUI Docs',\n      menubarLabel: 'ComfyUI Docs',\n      versionAdded: '1.5.5',\n      function: () => {\n        window.open('https://docs.comfy.org/', '_blank')\n      }\n    },\n    {\n      id: 'Comfy.Help.OpenComfyOrgDiscord',\n      icon: 'pi pi-discord',\n      label: 'Open Comfy-Org Discord',\n      menubarLabel: 'Comfy-Org Discord',\n      versionAdded: '1.5.5',\n      function: () => {\n        window.open('https://www.comfy.org/discord', '_blank')\n      }\n    },\n    {\n      id: 'Workspace.SearchBox.Toggle',\n      icon: 'pi pi-search',\n      label: 'Toggle Search Box',\n      versionAdded: '1.5.7',\n      function: () => {\n        useSearchBoxStore().toggleVisible()\n      }\n    },\n    {\n      id: 'Comfy.Help.AboutComfyUI',\n      icon: 'pi pi-info-circle',\n      label: 'Open About ComfyUI',\n      menubarLabel: 'About ComfyUI',\n      versionAdded: '1.6.4',\n      function: () => {\n        dialogService.showSettingsDialog('about')\n      }\n    },\n    {\n      id: 'Comfy.DuplicateWorkflow',\n      icon: 'pi pi-clone',\n      label: 'Duplicate Current Workflow',\n      versionAdded: '1.6.15',\n      function: async () => {\n        await workflowService.duplicateWorkflow(workflowStore.activeWorkflow!)\n      }\n    },\n    {\n      id: 'Workspace.CloseWorkflow',\n      icon: 'pi pi-times',\n      label: 'Close Current Workflow',\n      versionAdded: '1.7.3',\n      function: async () => {\n        if (workflowStore.activeWorkflow)\n          await workflowService.closeWorkflow(workflowStore.activeWorkflow)\n      }\n    },\n    {\n      id: 'Comfy.ContactSupport',\n      icon: 'pi pi-question',\n      label: 'Contact Support',\n      versionAdded: '1.17.8',\n      function: () => {\n        window.open('https://support.comfy.org/', '_blank')\n      }\n    },\n    {\n      id: 'Comfy.Help.OpenComfyUIForum',\n      icon: 'pi pi-comments',\n      label: 'Open ComfyUI Forum',\n      menubarLabel: 'ComfyUI Forum',\n      versionAdded: '1.8.2',\n      function: () => {\n        window.open('https://forum.comfy.org/', '_blank')\n      }\n    },\n    {\n      id: 'Comfy.Canvas.DeleteSelectedItems',\n      icon: 'pi pi-trash',\n      label: 'Delete Selected Items',\n      versionAdded: '1.10.5',\n      function: () => {\n        app.canvas.deleteSelected()\n        app.canvas.setDirty(true, true)\n      }\n    },\n    {\n      id: 'Comfy.Manager.CustomNodesManager.ShowCustomNodesMenu',\n      icon: 'pi pi-puzzle',\n      label: 'Custom Nodes Manager',\n      versionAdded: '1.12.10',\n      function: async () => {\n        await useManagerState().openManager({\n          showToastOnLegacyError: true\n        })\n      }\n    },\n    {\n      id: 'Comfy.Manager.ShowUpdateAvailablePacks',\n      icon: 'pi pi-sync',\n      label: 'Check for Custom Node Updates',\n      versionAdded: '1.17.0',\n      function: async () => {\n        const managerState = useManagerState()\n        const state = managerState.managerUIState.value\n\n        // For DISABLED state, show error toast instead of opening settings\n        if (state === ManagerUIState.DISABLED) {\n          toastStore.add({\n            severity: 'error',\n            summary: t('g.error'),\n            detail: t('manager.notAvailable'),\n            life: 3000\n          })\n          return\n        }\n\n        await managerState.openManager({\n          initialTab: ManagerTab.UpdateAvailable,\n          showToastOnLegacyError: false\n        })\n      }\n    },\n    {\n      id: 'Comfy.Manager.ShowMissingPacks',\n      icon: 'pi pi-exclamation-circle',\n      label: 'Install Missing Custom Nodes',\n      versionAdded: '1.17.0',\n      function: async () => {\n        await useManagerState().openManager({\n          initialTab: ManagerTab.Missing,\n          showToastOnLegacyError: false\n        })\n      }\n    },\n    {\n      id: 'Comfy.Manager.ToggleManagerProgressDialog',\n      icon: 'pi pi-spinner',\n      label: 'Toggle the Custom Nodes Manager Progress Bar',\n      versionAdded: '1.13.9',\n      function: () => {\n        dialogService.toggleManagerProgressDialog()\n      }\n    },\n    {\n      id: 'Comfy.User.OpenSignInDialog',\n      icon: 'pi pi-user',\n      label: 'Open Sign In Dialog',\n      versionAdded: '1.17.6',\n      function: async () => {\n        await dialogService.showSignInDialog()\n      }\n    },\n    {\n      id: 'Comfy.User.SignOut',\n      icon: 'pi pi-sign-out',\n      label: 'Sign Out',\n      versionAdded: '1.18.1',\n      function: async () => {\n        await firebaseAuthActions.logout()\n      }\n    },\n    {\n      id: 'Comfy.Canvas.MoveSelectedNodes.Up',\n      icon: 'pi pi-arrow-up',\n      label: 'Move Selected Nodes Up',\n      versionAdded: moveSelectedNodesVersionAdded,\n      function: () => moveSelectedNodes(([x, y], gridSize) => [x, y - gridSize])\n    },\n    {\n      id: 'Comfy.Canvas.MoveSelectedNodes.Down',\n      icon: 'pi pi-arrow-down',\n      label: 'Move Selected Nodes Down',\n      versionAdded: moveSelectedNodesVersionAdded,\n      function: () => moveSelectedNodes(([x, y], gridSize) => [x, y + gridSize])\n    },\n    {\n      id: 'Comfy.Canvas.MoveSelectedNodes.Left',\n      icon: 'pi pi-arrow-left',\n      label: 'Move Selected Nodes Left',\n      versionAdded: moveSelectedNodesVersionAdded,\n      function: () => moveSelectedNodes(([x, y], gridSize) => [x - gridSize, y])\n    },\n    {\n      id: 'Comfy.Canvas.MoveSelectedNodes.Right',\n      icon: 'pi pi-arrow-right',\n      label: 'Move Selected Nodes Right',\n      versionAdded: moveSelectedNodesVersionAdded,\n      function: () => moveSelectedNodes(([x, y], gridSize) => [x + gridSize, y])\n    },\n    {\n      id: 'Comfy.Graph.ConvertToSubgraph',\n      icon: 'pi pi-sitemap',\n      label: 'Convert Selection to Subgraph',\n      versionAdded: '1.20.1',\n      category: 'essentials' as const,\n      function: () => {\n        const canvas = canvasStore.getCanvas()\n        const graph = canvas.subgraph ?? canvas.graph\n        if (!graph) throw new TypeError('Canvas has no graph or subgraph set.')\n\n        const res = graph.convertToSubgraph(canvas.selectedItems)\n        if (!res) {\n          toastStore.add({\n            severity: 'error',\n            summary: t('toastMessages.cannotCreateSubgraph'),\n            detail: t('toastMessages.failedToConvertToSubgraph'),\n            life: 3000\n          })\n          return\n        }\n\n        const { node } = res\n        canvas.select(node)\n        canvasStore.updateSelectedItems()\n      }\n    },\n    {\n      id: 'Comfy.Graph.UnpackSubgraph',\n      icon: 'pi pi-sitemap',\n      label: 'Unpack the selected Subgraph',\n      versionAdded: '1.20.1',\n      category: 'essentials' as const,\n      function: () => {\n        const canvas = canvasStore.getCanvas()\n        const graph = canvas.subgraph ?? canvas.graph\n        if (!graph) throw new TypeError('Canvas has no graph or subgraph set.')\n\n        const subgraphNode = app.canvas.selectedItems.values().next().value\n        if (!(subgraphNode instanceof SubgraphNode)) return\n        useNodeOutputStore().revokeSubgraphPreviews(subgraphNode)\n        graph.unpackSubgraph(subgraphNode)\n      }\n    },\n    {\n      id: 'Comfy.OpenManagerDialog',\n      icon: 'mdi mdi-puzzle-outline',\n      label: 'Manager',\n      function: async () => {\n        await useManagerState().openManager({\n          initialTab: ManagerTab.All,\n          showToastOnLegacyError: false\n        })\n      }\n    },\n    {\n      id: 'Comfy.ToggleHelpCenter',\n      icon: 'pi pi-question-circle',\n      label: 'Help Center',\n      function: () => {\n        useHelpCenterStore().toggle()\n      },\n      active: () => useHelpCenterStore().isVisible\n    },\n    {\n      id: 'Comfy.ToggleCanvasInfo',\n      icon: 'pi pi-info-circle',\n      label: 'Canvas Performance',\n      function: async () => {\n        const settingStore = useSettingStore()\n        const currentValue = settingStore.get('Comfy.Graph.CanvasInfo')\n        await settingStore.set('Comfy.Graph.CanvasInfo', !currentValue)\n      },\n      active: () => useSettingStore().get('Comfy.Graph.CanvasInfo')\n    },\n    {\n      id: 'Workspace.ToggleBottomPanel.Shortcuts',\n      icon: 'pi pi-key',\n      label: 'Show Keybindings Dialog',\n      versionAdded: '1.24.1',\n      category: 'view-controls' as const,\n      function: () => {\n        bottomPanelStore.togglePanel('shortcuts')\n      }\n    },\n    {\n      id: 'Comfy.Graph.ExitSubgraph',\n      icon: 'pi pi-arrow-up',\n      label: 'Exit Subgraph',\n      versionAdded: '1.20.1',\n      function: () => {\n        const canvas = useCanvasStore().getCanvas()\n        const navigationStore = useSubgraphNavigationStore()\n        if (!canvas.graph) return\n\n        canvas.setGraph(\n          navigationStore.navigationStack.at(-2) ?? canvas.graph.rootGraph\n        )\n      }\n    },\n    {\n      id: 'Comfy.Dev.ShowModelSelector',\n      icon: 'pi pi-box',\n      label: 'Show Model Selector (Dev)',\n      versionAdded: '1.26.2',\n      category: 'view-controls' as const,\n      function: () => {\n        const modelSelectorDialog = useModelSelectorDialog()\n        modelSelectorDialog.show()\n      }\n    },\n    {\n      id: 'Comfy.Manager.CustomNodesManager.ShowLegacyCustomNodesMenu',\n      icon: 'pi pi-bars',\n      label: 'Custom Nodes (Legacy)',\n      versionAdded: '1.16.4',\n      function: async () => {\n        await useManagerState().openManager({\n          legacyCommand: 'Comfy.Manager.CustomNodesManager.ToggleVisibility',\n          showToastOnLegacyError: true,\n          isLegacyOnly: true\n        })\n      }\n    },\n    {\n      id: 'Comfy.Manager.ShowLegacyManagerMenu',\n      icon: 'mdi mdi-puzzle',\n      label: 'Manager Menu (Legacy)',\n      versionAdded: '1.16.4',\n      function: async () => {\n        await useManagerState().openManager({\n          showToastOnLegacyError: true,\n          isLegacyOnly: true\n        })\n      }\n    },\n    {\n      id: 'Comfy.Memory.UnloadModels',\n      icon: 'mdi mdi-vacuum-outline',\n      label: 'Unload Models',\n      versionAdded: '1.16.4',\n      function: async () => {\n        if (!useSettingStore().get('Comfy.Memory.AllowManualUnload')) {\n          useToastStore().add({\n            severity: 'error',\n            summary: t('g.error'),\n            detail: t('g.commandProhibited', {\n              command: 'Comfy.Memory.UnloadModels'\n            }),\n            life: 3000\n          })\n          return\n        }\n        await api.freeMemory({ freeExecutionCache: false })\n      }\n    },\n    {\n      id: 'Comfy.Memory.UnloadModelsAndExecutionCache',\n      icon: 'mdi mdi-vacuum-outline',\n      label: 'Unload Models and Execution Cache',\n      versionAdded: '1.16.4',\n      function: async () => {\n        if (!useSettingStore().get('Comfy.Memory.AllowManualUnload')) {\n          useToastStore().add({\n            severity: 'error',\n            summary: t('g.error'),\n            detail: t('g.commandProhibited', {\n              command: 'Comfy.Memory.UnloadModelsAndExecutionCache'\n            }),\n            life: 3000\n          })\n          return\n        }\n        await api.freeMemory({ freeExecutionCache: true })\n      }\n    }\n  ]\n\n  return commands.map((command) => ({ ...command, source: 'System' }))\n}\n","import { useFavicon } from '@vueuse/core'\nimport { watch } from 'vue'\n\nimport { useExecutionStore } from '@/stores/executionStore'\n\nexport const useProgressFavicon = () => {\n  const defaultFavicon = '/assets/images/favicon_progress_16x16/frame_9.png'\n  const favicon = useFavicon(defaultFavicon)\n  const executionStore = useExecutionStore()\n  const totalFrames = 10\n\n  watch(\n    [() => executionStore.executionProgress, () => executionStore.isIdle],\n    ([progress, isIdle]) => {\n      if (isIdle) {\n        favicon.value = defaultFavicon\n      } else {\n        const frame = Math.min(\n          Math.max(0, Math.floor(progress * totalFrames)),\n          totalFrames - 1\n        )\n        favicon.value = `/assets/images/favicon_progress_16x16/frame_${frame}.png`\n      }\n    }\n  )\n}\n","export enum LatentPreviewMethod {\n  NoPreviews = 'none',\n  Auto = 'auto',\n  Latent2RGB = 'latent2rgb',\n  TAESD = 'taesd'\n}\n\nexport enum LogLevel {\n  DEBUG = 'DEBUG',\n  INFO = 'INFO',\n  WARNING = 'WARNING',\n  ERROR = 'ERROR',\n  CRITICAL = 'CRITICAL'\n}\n\nexport enum HashFunction {\n  MD5 = 'md5',\n  SHA1 = 'sha1',\n  SHA256 = 'sha256',\n  SHA512 = 'sha512'\n}\n\nexport enum CudaMalloc {\n  // Let server decide whether to use CUDA malloc based on the current environment\n  Auto = 'auto',\n  // Disable CUDA malloc\n  Disable = 'disable',\n  // Enable CUDA malloc\n  Enable = 'enable'\n}\n\nexport enum FloatingPointPrecision {\n  AUTO = 'auto',\n  FP64 = 'fp64',\n  FP32 = 'fp32',\n  FP16 = 'fp16',\n  BF16 = 'bf16',\n  FP8E4M3FN = 'fp8_e4m3fn',\n  FP8E5M2 = 'fp8_e5m2'\n}\n\nexport enum CrossAttentionMethod {\n  Auto = 'auto',\n  Split = 'split',\n  Quad = 'quad',\n  Pytorch = 'pytorch'\n}\n\nexport enum VramManagement {\n  Auto = 'auto',\n  GPUOnly = 'gpu-only',\n  HighVram = 'highvram',\n  NormalVram = 'normalvram',\n  LowVram = 'lowvram',\n  NoVram = 'novram',\n  CPU = 'cpu'\n}\n","import type { FormItem } from '@/platform/settings/types'\nimport {\n  CrossAttentionMethod,\n  CudaMalloc,\n  FloatingPointPrecision,\n  HashFunction,\n  LatentPreviewMethod,\n  LogLevel,\n  VramManagement\n} from '@/types/serverArgs'\n\nexport type ServerConfigValue = string | number | true | null | undefined\n\nexport interface ServerConfig<T> extends FormItem {\n  id: string\n  defaultValue: T\n  category?: string[]\n  // Override the default value getter with a custom function.\n  getValue?: (value: T) => Record<string, ServerConfigValue>\n}\n\nexport const SERVER_CONFIG_ITEMS: ServerConfig<any>[] = [\n  // Network settings\n  {\n    id: 'listen',\n    name: 'Host: The IP address to listen on',\n    category: ['Network'],\n    type: 'text',\n    defaultValue: '127.0.0.1'\n  },\n  {\n    id: 'port',\n    name: 'Port: The port to listen on',\n    category: ['Network'],\n    type: 'number',\n    // The default launch port for desktop app is 8000 instead of 8188.\n    defaultValue: 8000\n  },\n  {\n    id: 'tls-keyfile',\n    name: 'TLS Key File: Path to TLS key file for HTTPS',\n    category: ['Network'],\n    type: 'text',\n    defaultValue: ''\n  },\n  {\n    id: 'tls-certfile',\n    name: 'TLS Certificate File: Path to TLS certificate file for HTTPS',\n    category: ['Network'],\n    type: 'text',\n    defaultValue: ''\n  },\n  {\n    id: 'enable-cors-header',\n    name: 'Enable CORS header: Use \"*\" for all origins or specify domain',\n    category: ['Network'],\n    type: 'text',\n    defaultValue: ''\n  },\n  {\n    id: 'max-upload-size',\n    name: 'Maximum upload size (MB)',\n    category: ['Network'],\n    type: 'number',\n    defaultValue: 100\n  },\n\n  // CUDA settings\n  {\n    id: 'cuda-device',\n    name: 'CUDA device index to use',\n    category: ['CUDA'],\n    type: 'number',\n    defaultValue: null\n  },\n  {\n    id: 'cuda-malloc',\n    name: 'Use CUDA malloc for memory allocation',\n    category: ['CUDA'],\n    type: 'combo',\n    options: Object.values(CudaMalloc),\n    defaultValue: CudaMalloc.Auto,\n    getValue: (value: CudaMalloc) => {\n      switch (value) {\n        case CudaMalloc.Auto:\n          return {}\n        case CudaMalloc.Enable:\n          return {\n            ['cuda-malloc']: true\n          }\n        case CudaMalloc.Disable:\n          return {\n            ['disable-cuda-malloc']: true\n          }\n      }\n    }\n  },\n\n  // Precision settings\n  {\n    id: 'global-precision',\n    name: 'Global floating point precision',\n    category: ['Inference'],\n    type: 'combo',\n    options: [\n      FloatingPointPrecision.AUTO,\n      FloatingPointPrecision.FP32,\n      FloatingPointPrecision.FP16\n    ],\n    defaultValue: FloatingPointPrecision.AUTO,\n    tooltip: 'Global floating point precision',\n    getValue: (value: FloatingPointPrecision) => {\n      switch (value) {\n        case FloatingPointPrecision.AUTO:\n          return {}\n        case FloatingPointPrecision.FP32:\n          return {\n            ['force-fp32']: true\n          }\n        case FloatingPointPrecision.FP16:\n          return {\n            ['force-fp16']: true\n          }\n        default:\n          return {}\n      }\n    }\n  },\n\n  // UNET precision\n  {\n    id: 'unet-precision',\n    name: 'UNET precision',\n    category: ['Inference'],\n    type: 'combo',\n    options: [\n      FloatingPointPrecision.AUTO,\n      FloatingPointPrecision.FP64,\n      FloatingPointPrecision.FP32,\n      FloatingPointPrecision.FP16,\n      FloatingPointPrecision.BF16,\n      FloatingPointPrecision.FP8E4M3FN,\n      FloatingPointPrecision.FP8E5M2\n    ],\n    defaultValue: FloatingPointPrecision.AUTO,\n    tooltip: 'UNET precision',\n    getValue: (value: FloatingPointPrecision) => {\n      switch (value) {\n        case FloatingPointPrecision.AUTO:\n          return {}\n        default:\n          return {\n            [`${value.toLowerCase()}-unet`]: true\n          }\n      }\n    }\n  },\n\n  // VAE settings\n  {\n    id: 'vae-precision',\n    name: 'VAE precision',\n    category: ['Inference'],\n    type: 'combo',\n    options: [\n      FloatingPointPrecision.AUTO,\n      FloatingPointPrecision.FP16,\n      FloatingPointPrecision.FP32,\n      FloatingPointPrecision.BF16\n    ],\n    defaultValue: FloatingPointPrecision.AUTO,\n    tooltip: 'VAE precision',\n    getValue: (value: FloatingPointPrecision) => {\n      switch (value) {\n        case FloatingPointPrecision.AUTO:\n          return {}\n        default:\n          return {\n            [`${value.toLowerCase()}-vae`]: true\n          }\n      }\n    }\n  },\n  {\n    id: 'cpu-vae',\n    name: 'Run VAE on CPU',\n    category: ['Inference'],\n    type: 'boolean',\n    defaultValue: false\n  },\n\n  // Text Encoder settings\n  {\n    id: 'text-encoder-precision',\n    name: 'Text Encoder precision',\n    category: ['Inference'],\n    type: 'combo',\n    options: [\n      FloatingPointPrecision.AUTO,\n      FloatingPointPrecision.FP8E4M3FN,\n      FloatingPointPrecision.FP8E5M2,\n      FloatingPointPrecision.FP16,\n      FloatingPointPrecision.FP32\n    ],\n    defaultValue: FloatingPointPrecision.AUTO,\n    tooltip: 'Text Encoder precision',\n    getValue: (value: FloatingPointPrecision) => {\n      switch (value) {\n        case FloatingPointPrecision.AUTO:\n          return {}\n        default:\n          return {\n            [`${value.toLowerCase()}-text-enc`]: true\n          }\n      }\n    }\n  },\n\n  // Memory and performance settings\n  {\n    id: 'force-channels-last',\n    name: 'Force channels-last memory format',\n    category: ['Memory'],\n    type: 'boolean',\n    defaultValue: false\n  },\n  {\n    id: 'directml',\n    name: 'DirectML device index',\n    category: ['Memory'],\n    type: 'number',\n    defaultValue: null\n  },\n  {\n    id: 'disable-ipex-optimize',\n    name: 'Disable IPEX optimization',\n    category: ['Memory'],\n    type: 'boolean',\n    defaultValue: false\n  },\n\n  // Preview settings\n  {\n    id: 'preview-method',\n    name: 'Method used for latent previews',\n    category: ['Preview'],\n    type: 'combo',\n    options: Object.values(LatentPreviewMethod),\n    defaultValue: LatentPreviewMethod.NoPreviews\n  },\n  {\n    id: 'preview-size',\n    name: 'Size of preview images',\n    category: ['Preview'],\n    type: 'slider',\n    defaultValue: 512,\n    attrs: {\n      min: 128,\n      max: 2048,\n      step: 128\n    }\n  },\n\n  // Cache settings\n  {\n    id: 'cache-classic',\n    name: 'Use classic cache system',\n    category: ['Cache'],\n    type: 'boolean',\n    defaultValue: false\n  },\n  {\n    id: 'cache-lru',\n    name: 'Use LRU caching with a maximum of N node results cached.',\n    category: ['Cache'],\n    type: 'number',\n    defaultValue: null,\n    tooltip: 'May use more RAM/VRAM.'\n  },\n\n  // Attention settings\n  {\n    id: 'cross-attention-method',\n    name: 'Cross attention method',\n    category: ['Attention'],\n    type: 'combo',\n    options: Object.values(CrossAttentionMethod),\n    defaultValue: CrossAttentionMethod.Auto,\n    getValue: (value: CrossAttentionMethod) => {\n      switch (value) {\n        case CrossAttentionMethod.Auto:\n          return {}\n        default:\n          return {\n            [`use-${value.toLowerCase()}-cross-attention`]: true\n          }\n      }\n    }\n  },\n  {\n    id: 'disable-xformers',\n    name: 'Disable xFormers optimization',\n    type: 'boolean',\n    defaultValue: false\n  },\n  {\n    id: 'force-upcast-attention',\n    name: 'Force attention upcast',\n    category: ['Attention'],\n    type: 'boolean',\n    defaultValue: false\n  },\n  {\n    id: 'dont-upcast-attention',\n    name: 'Prevent attention upcast',\n    category: ['Attention'],\n    type: 'boolean',\n    defaultValue: false\n  },\n\n  // VRAM management\n  {\n    id: 'vram-management',\n    name: 'VRAM management mode',\n    category: ['Memory'],\n    type: 'combo',\n    options: Object.values(VramManagement),\n    defaultValue: VramManagement.Auto,\n    getValue: (value: VramManagement) => {\n      switch (value) {\n        case VramManagement.Auto:\n          return {}\n        default:\n          return {\n            [value]: true\n          }\n      }\n    }\n  },\n  {\n    id: 'reserve-vram',\n    name: 'Reserved VRAM (GB)',\n    category: ['Memory'],\n    type: 'number',\n    defaultValue: null,\n    tooltip:\n      'Set the amount of vram in GB you want to reserve for use by your OS/other software. By default some amount is reverved depending on your OS.'\n  },\n\n  // Misc settings\n  {\n    id: 'default-hashing-function',\n    name: 'Default hashing function for model files',\n    type: 'combo',\n    options: Object.values(HashFunction),\n    defaultValue: HashFunction.SHA256\n  },\n  {\n    id: 'disable-smart-memory',\n    name: 'Disable smart memory management',\n    tooltip:\n      'Force ComfyUI to aggressively offload to regular ram instead of keeping models in vram when it can.',\n    category: ['Memory'],\n    type: 'boolean',\n    defaultValue: false\n  },\n  {\n    id: 'deterministic',\n    name: 'Make pytorch use slower deterministic algorithms when it can.',\n    type: 'boolean',\n    defaultValue: false,\n    tooltip: 'Note that this might not make images deterministic in all cases.'\n  },\n  {\n    id: 'fast',\n    name: 'Enable some untested and potentially quality deteriorating optimizations.',\n    type: 'boolean',\n    defaultValue: false\n  },\n  {\n    id: 'dont-print-server',\n    name: \"Don't print server output to console.\",\n    type: 'boolean',\n    defaultValue: false\n  },\n  {\n    id: 'disable-metadata',\n    name: 'Disable saving prompt metadata in files.',\n    type: 'boolean',\n    defaultValue: false\n  },\n  {\n    id: 'disable-all-custom-nodes',\n    name: 'Disable loading all custom nodes.',\n    type: 'boolean',\n    defaultValue: false\n  },\n  {\n    id: 'log-level',\n    name: 'Logging verbosity level',\n    type: 'combo',\n    options: Object.values(LogLevel),\n    defaultValue: LogLevel.INFO,\n    getValue: (value: LogLevel) => {\n      return {\n        verbose: value\n      }\n    }\n  },\n  // Directories\n  {\n    id: 'input-directory',\n    name: 'Input directory',\n    category: ['Directories'],\n    type: 'text',\n    defaultValue: ''\n  },\n  {\n    id: 'output-directory',\n    name: 'Output directory',\n    category: ['Directories'],\n    type: 'text',\n    defaultValue: ''\n  }\n]\n","import { until, useStorage } from '@vueuse/core'\nimport { defineStore } from 'pinia'\nimport { gt, valid } from 'semver'\nimport { computed } from 'vue'\n\nimport config from '@/config'\nimport { useSystemStatsStore } from '@/stores/systemStatsStore'\n\nconst DISMISSAL_DURATION_MS = 7 * 24 * 60 * 60 * 1000 // 7 days\n\nexport const useVersionCompatibilityStore = defineStore(\n  'versionCompatibility',\n  () => {\n    const systemStatsStore = useSystemStatsStore()\n\n    const frontendVersion = computed(() => config.app_version)\n    const backendVersion = computed(\n      () => systemStatsStore.systemStats?.system?.comfyui_version ?? ''\n    )\n    const requiredFrontendVersion = computed(\n      () =>\n        systemStatsStore.systemStats?.system?.required_frontend_version ?? ''\n    )\n\n    const isFrontendOutdated = computed(() => {\n      if (\n        !frontendVersion.value ||\n        !requiredFrontendVersion.value ||\n        !valid(frontendVersion.value) ||\n        !valid(requiredFrontendVersion.value)\n      ) {\n        return false\n      }\n      // Returns true if required version is greater than frontend version\n      return gt(requiredFrontendVersion.value, frontendVersion.value)\n    })\n\n    const isFrontendNewer = computed(() => {\n      // We don't warn about frontend being newer than backend\n      // Only warn when frontend is outdated (behind required version)\n      return false\n    })\n\n    const hasVersionMismatch = computed(() => {\n      return isFrontendOutdated.value\n    })\n\n    const versionKey = computed(() => {\n      if (\n        !frontendVersion.value ||\n        !backendVersion.value ||\n        !requiredFrontendVersion.value\n      ) {\n        return null\n      }\n      return `${frontendVersion.value}-${backendVersion.value}-${requiredFrontendVersion.value}`\n    })\n\n    // Use reactive storage for dismissals - creates a reactive ref that syncs with localStorage\n    // All version mismatch dismissals are stored in a single object for clean localStorage organization\n    const dismissalStorage = useStorage(\n      'comfy.versionMismatch.dismissals',\n      {} as Record<string, number>,\n      localStorage,\n      {\n        serializer: {\n          read: (value: string) => {\n            try {\n              return JSON.parse(value)\n            } catch {\n              return {}\n            }\n          },\n          write: (value: Record<string, number>) => JSON.stringify(value)\n        }\n      }\n    )\n\n    const isDismissed = computed(() => {\n      if (!versionKey.value) return false\n\n      const dismissedUntil = dismissalStorage.value[versionKey.value]\n      if (!dismissedUntil) return false\n\n      // Check if dismissal has expired\n      return Date.now() < dismissedUntil\n    })\n\n    const shouldShowWarning = computed(() => {\n      return hasVersionMismatch.value && !isDismissed.value\n    })\n\n    const warningMessage = computed(() => {\n      if (isFrontendOutdated.value) {\n        return {\n          type: 'outdated' as const,\n          frontendVersion: frontendVersion.value,\n          requiredVersion: requiredFrontendVersion.value\n        }\n      }\n      return null\n    })\n\n    async function checkVersionCompatibility() {\n      if (!systemStatsStore.systemStats) {\n        await until(systemStatsStore.isInitialized)\n      }\n    }\n\n    function dismissWarning() {\n      if (!versionKey.value) return\n\n      const dismissUntil = Date.now() + DISMISSAL_DURATION_MS\n      dismissalStorage.value = {\n        ...dismissalStorage.value,\n        [versionKey.value]: dismissUntil\n      }\n    }\n\n    async function initialize() {\n      await checkVersionCompatibility()\n    }\n\n    return {\n      frontendVersion,\n      backendVersion,\n      requiredFrontendVersion,\n      hasVersionMismatch,\n      shouldShowWarning,\n      warningMessage,\n      isFrontendOutdated,\n      isFrontendNewer,\n      checkVersionCompatibility,\n      dismissWarning,\n      initialize\n    }\n  }\n)\n","import { whenever } from '@vueuse/core'\nimport { computed, onMounted } from 'vue'\nimport { useI18n } from 'vue-i18n'\n\nimport { useToastStore } from './toastStore'\nimport { useVersionCompatibilityStore } from './versionCompatibilityStore'\n\ninterface UseFrontendVersionMismatchWarningOptions {\n  immediate?: boolean\n}\n\n/**\n * Composable for handling frontend version mismatch warnings.\n *\n * Displays toast notifications when the frontend version is incompatible with the backend,\n * either because the frontend is outdated or newer than the backend expects.\n * Automatically dismisses warnings when shown and persists dismissal state for 7 days.\n *\n * @param options - Configuration options\n * @param options.immediate - If true, automatically shows warning when version mismatch is detected\n * @returns Object with methods and computed properties for managing version warnings\n *\n * @example\n * ```ts\n * // Show warning immediately when mismatch detected\n * const { showWarning, shouldShowWarning } = useFrontendVersionMismatchWarning({ immediate: true })\n *\n * // Manual control\n * const { showWarning } = useFrontendVersionMismatchWarning()\n * showWarning() // Call when needed\n * ```\n */\nexport function useFrontendVersionMismatchWarning(\n  options: UseFrontendVersionMismatchWarningOptions = {}\n) {\n  const { immediate = false } = options\n  const { t } = useI18n()\n  const toastStore = useToastStore()\n  const versionCompatibilityStore = useVersionCompatibilityStore()\n\n  // Track if we've already shown the warning\n  let hasShownWarning = false\n\n  const showWarning = () => {\n    // Prevent showing the warning multiple times\n    if (hasShownWarning) return\n\n    const message = versionCompatibilityStore.warningMessage\n    if (!message) return\n\n    const detailMessage = t('g.frontendOutdated', {\n      frontendVersion: message.frontendVersion,\n      requiredVersion: message.requiredVersion\n    })\n\n    const fullMessage = t('g.versionMismatchWarningMessage', {\n      warning: t('g.versionMismatchWarning'),\n      detail: detailMessage\n    })\n\n    toastStore.addAlert(fullMessage)\n    hasShownWarning = true\n\n    // Automatically dismiss the warning so it won't show again for 7 days\n    versionCompatibilityStore.dismissWarning()\n  }\n\n  onMounted(() => {\n    // Only set up the watcher if immediate is true\n    if (immediate) {\n      whenever(\n        () => versionCompatibilityStore.shouldShowWarning,\n        () => {\n          showWarning()\n        },\n        {\n          immediate: true,\n          once: true\n        }\n      )\n    }\n  })\n\n  return {\n    showWarning,\n    shouldShowWarning: computed(\n      () => versionCompatibilityStore.shouldShowWarning\n    ),\n    dismissWarning: versionCompatibilityStore.dismissWarning,\n    hasVersionMismatch: computed(\n      () => versionCompatibilityStore.hasVersionMismatch\n    )\n  }\n}\n","import { api } from '@/scripts/api'\nimport { app } from '@/scripts/app'\nimport {\n  useQueuePendingTaskCountStore,\n  useQueueSettingsStore\n} from '@/stores/queueStore'\n\nexport function setupAutoQueueHandler() {\n  const queueCountStore = useQueuePendingTaskCountStore()\n  const queueSettingsStore = useQueueSettingsStore()\n\n  let graphHasChanged = false\n  let internalCount = 0 // Use an internal counter here so it is instantly updated when re-queuing\n  api.addEventListener('graphChanged', () => {\n    if (queueSettingsStore.mode === 'change') {\n      if (internalCount) {\n        graphHasChanged = true\n      } else {\n        graphHasChanged = false\n        // Queue the prompt in the background\n        void app.queuePrompt(0, queueSettingsStore.batchCount)\n        internalCount++\n      }\n    }\n  })\n\n  queueCountStore.$subscribe(\n    async () => {\n      internalCount = queueCountStore.count\n      if (!internalCount && !app.lastExecutionError) {\n        if (\n          queueSettingsStore.mode === 'instant' ||\n          (queueSettingsStore.mode === 'change' && graphHasChanged)\n        ) {\n          graphHasChanged = false\n          await app.queuePrompt(0, queueSettingsStore.batchCount)\n        }\n      }\n    },\n    { detached: true }\n  )\n}\n","<template>\n  <div class=\"comfyui-body grid h-full w-full overflow-hidden\">\n    <div id=\"comfyui-body-top\" class=\"comfyui-body-top\">\n      <TopMenubar v-if=\"showTopMenu\" />\n    </div>\n    <div id=\"comfyui-body-bottom\" class=\"comfyui-body-bottom\">\n      <TopMenubar v-if=\"showBottomMenu\" />\n    </div>\n    <div id=\"comfyui-body-left\" class=\"comfyui-body-left\" />\n    <div id=\"comfyui-body-right\" class=\"comfyui-body-right\" />\n    <div id=\"graph-canvas-container\" class=\"graph-canvas-container\">\n      <GraphCanvas @ready=\"onGraphReady\" />\n    </div>\n  </div>\n\n  <GlobalToast />\n  <RerouteMigrationToast />\n  <UnloadWindowConfirmDialog v-if=\"!isElectron()\" />\n  <MenuHamburger />\n</template>\n\n<script setup lang=\"ts\">\nimport { useBreakpoints, useEventListener } from '@vueuse/core'\nimport type { ToastMessageOptions } from 'primevue/toast'\nimport { useToast } from 'primevue/usetoast'\nimport {\n  computed,\n  nextTick,\n  onBeforeUnmount,\n  onMounted,\n  watch,\n  watchEffect\n} from 'vue'\nimport { useI18n } from 'vue-i18n'\n\nimport { runWhenGlobalIdle } from '@/base/common/async'\nimport MenuHamburger from '@/components/MenuHamburger.vue'\nimport UnloadWindowConfirmDialog from '@/components/dialog/UnloadWindowConfirmDialog.vue'\nimport GraphCanvas from '@/components/graph/GraphCanvas.vue'\nimport GlobalToast from '@/components/toast/GlobalToast.vue'\nimport RerouteMigrationToast from '@/components/toast/RerouteMigrationToast.vue'\nimport TopMenubar from '@/components/topbar/TopMenubar.vue'\nimport { useBrowserTabTitle } from '@/composables/useBrowserTabTitle'\nimport { useCoreCommands } from '@/composables/useCoreCommands'\nimport { useErrorHandling } from '@/composables/useErrorHandling'\nimport { useProgressFavicon } from '@/composables/useProgressFavicon'\nimport { SERVER_CONFIG_ITEMS } from '@/constants/serverConfig'\nimport { i18n } from '@/i18n'\nimport { useSettingStore } from '@/platform/settings/settingStore'\nimport { useFrontendVersionMismatchWarning } from '@/platform/updates/common/useFrontendVersionMismatchWarning'\nimport { useVersionCompatibilityStore } from '@/platform/updates/common/versionCompatibilityStore'\nimport type { StatusWsMessageStatus } from '@/schemas/apiSchema'\nimport { api } from '@/scripts/api'\nimport { app } from '@/scripts/app'\nimport { setupAutoQueueHandler } from '@/services/autoQueueService'\nimport { useKeybindingService } from '@/services/keybindingService'\nimport { useCommandStore } from '@/stores/commandStore'\nimport { useExecutionStore } from '@/stores/executionStore'\nimport { useMenuItemStore } from '@/stores/menuItemStore'\nimport { useModelStore } from '@/stores/modelStore'\nimport { useNodeDefStore, useNodeFrequencyStore } from '@/stores/nodeDefStore'\nimport {\n  useQueuePendingTaskCountStore,\n  useQueueStore\n} from '@/stores/queueStore'\nimport { useServerConfigStore } from '@/stores/serverConfigStore'\nimport { useBottomPanelStore } from '@/stores/workspace/bottomPanelStore'\nimport { useColorPaletteStore } from '@/stores/workspace/colorPaletteStore'\nimport { useSidebarTabStore } from '@/stores/workspace/sidebarTabStore'\nimport { useWorkspaceStore } from '@/stores/workspaceStore'\nimport { electronAPI, isElectron } from '@/utils/envUtil'\n\nsetupAutoQueueHandler()\nuseProgressFavicon()\nuseBrowserTabTitle()\n\nconst { t } = useI18n()\nconst toast = useToast()\nconst settingStore = useSettingStore()\nconst executionStore = useExecutionStore()\nconst colorPaletteStore = useColorPaletteStore()\nconst queueStore = useQueueStore()\nconst versionCompatibilityStore = useVersionCompatibilityStore()\n\nconst breakpoints = useBreakpoints({ md: 961 })\nconst isMobile = breakpoints.smaller('md')\nconst showTopMenu = computed(() => isMobile.value || useNewMenu.value === 'Top')\nconst showBottomMenu = computed(\n  () => !isMobile.value && useNewMenu.value === 'Bottom'\n)\n\nwatch(\n  () => colorPaletteStore.completedActivePalette,\n  (newTheme) => {\n    const DARK_THEME_CLASS = 'dark-theme'\n    if (newTheme.light_theme) {\n      document.body.classList.remove(DARK_THEME_CLASS)\n    } else {\n      document.body.classList.add(DARK_THEME_CLASS)\n    }\n\n    if (isElectron()) {\n      electronAPI().changeTheme({\n        color: 'rgba(0, 0, 0, 0)',\n        symbolColor: newTheme.colors.comfy_base['input-text']\n      })\n    }\n  },\n  { immediate: true }\n)\n\nif (isElectron()) {\n  watch(\n    () => queueStore.tasks,\n    (newTasks, oldTasks) => {\n      // Report tasks that previously running but are now completed (i.e. in history)\n      const oldRunningTaskIds = new Set(\n        oldTasks.filter((task) => task.isRunning).map((task) => task.promptId)\n      )\n      newTasks\n        .filter(\n          (task) => oldRunningTaskIds.has(task.promptId) && task.isHistory\n        )\n        .forEach((task) => {\n          electronAPI().Events.incrementUserProperty(\n            `execution:${task.displayStatus.toLowerCase()}`,\n            1\n          )\n          electronAPI().Events.trackEvent('execution', {\n            status: task.displayStatus.toLowerCase()\n          })\n        })\n    },\n    { deep: true }\n  )\n}\n\nwatchEffect(() => {\n  const fontSize = settingStore.get('Comfy.TextareaWidget.FontSize')\n  document.documentElement.style.setProperty(\n    '--comfy-textarea-font-size',\n    `${fontSize}px`\n  )\n})\n\nwatchEffect(() => {\n  const padding = settingStore.get('Comfy.TreeExplorer.ItemPadding')\n  document.documentElement.style.setProperty(\n    '--comfy-tree-explorer-item-padding',\n    `${padding}px`\n  )\n})\n\nwatchEffect(() => {\n  const locale = settingStore.get('Comfy.Locale')\n  if (locale) {\n    i18n.global.locale.value = locale as 'en' | 'zh' | 'ru' | 'ja'\n  }\n})\n\nconst useNewMenu = computed(() => {\n  return settingStore.get('Comfy.UseNewMenu')\n})\nwatchEffect(() => {\n  if (useNewMenu.value === 'Disabled') {\n    app.ui.menuContainer.style.setProperty('display', 'block')\n    app.ui.restoreMenuPosition()\n  } else {\n    app.ui.menuContainer.style.setProperty('display', 'none')\n  }\n})\n\nwatchEffect(() => {\n  queueStore.maxHistoryItems = settingStore.get('Comfy.Queue.MaxHistoryItems')\n})\n\nconst init = () => {\n  const coreCommands = useCoreCommands()\n  useCommandStore().registerCommands(coreCommands)\n  useMenuItemStore().registerCoreMenuCommands()\n  useKeybindingService().registerCoreKeybindings()\n  useSidebarTabStore().registerCoreSidebarTabs()\n  useBottomPanelStore().registerCoreBottomPanelTabs()\n  app.extensionManager = useWorkspaceStore()\n}\n\nconst queuePendingTaskCountStore = useQueuePendingTaskCountStore()\nconst onStatus = async (e: CustomEvent<StatusWsMessageStatus>) => {\n  queuePendingTaskCountStore.update(e)\n  await queueStore.update()\n}\n\nconst onExecutionSuccess = async () => {\n  await queueStore.update()\n}\n\nconst reconnectingMessage: ToastMessageOptions = {\n  severity: 'error',\n  summary: t('g.reconnecting')\n}\n\nconst onReconnecting = () => {\n  if (!settingStore.get('Comfy.Toast.DisableReconnectingToast')) {\n    toast.remove(reconnectingMessage)\n    toast.add(reconnectingMessage)\n  }\n}\n\nconst onReconnected = () => {\n  if (!settingStore.get('Comfy.Toast.DisableReconnectingToast')) {\n    toast.remove(reconnectingMessage)\n    toast.add({\n      severity: 'success',\n      summary: t('g.reconnected'),\n      life: 2000\n    })\n  }\n}\n\nonMounted(() => {\n  api.addEventListener('status', onStatus)\n  api.addEventListener('execution_success', onExecutionSuccess)\n  api.addEventListener('reconnecting', onReconnecting)\n  api.addEventListener('reconnected', onReconnected)\n  executionStore.bindExecutionEvents()\n\n  try {\n    init()\n  } catch (e) {\n    console.error('Failed to init ComfyUI frontend', e)\n  }\n})\n\nonBeforeUnmount(() => {\n  api.removeEventListener('status', onStatus)\n  api.removeEventListener('execution_success', onExecutionSuccess)\n  api.removeEventListener('reconnecting', onReconnecting)\n  api.removeEventListener('reconnected', onReconnected)\n  executionStore.unbindExecutionEvents()\n})\n\nuseEventListener(window, 'keydown', useKeybindingService().keybindHandler)\n\nconst { wrapWithErrorHandling, wrapWithErrorHandlingAsync } = useErrorHandling()\n\n// Initialize version mismatch warning in setup context\n// It will be triggered automatically when the store is ready\nuseFrontendVersionMismatchWarning({ immediate: true })\n\nvoid nextTick(() => {\n  versionCompatibilityStore.initialize().catch((error) => {\n    console.warn('Version compatibility check failed:', error)\n  })\n})\n\nconst onGraphReady = () => {\n  runWhenGlobalIdle(() => {\n    // Setting values now available after comfyApp.setup.\n    // Load keybindings.\n    wrapWithErrorHandling(useKeybindingService().registerUserKeybindings)()\n\n    // Load server config\n    wrapWithErrorHandling(useServerConfigStore().loadServerConfig)(\n      SERVER_CONFIG_ITEMS,\n      settingStore.get('Comfy.Server.ServerConfigValues')\n    )\n\n    // Load model folders\n    void wrapWithErrorHandlingAsync(useModelStore().loadModelFolders)()\n\n    // Non-blocking load of node frequencies\n    void wrapWithErrorHandlingAsync(\n      useNodeFrequencyStore().loadNodeFrequencies\n    )()\n\n    // Node defs now available after comfyApp.setup.\n    // Explicitly initialize nodeSearchService to avoid indexing delay when\n    // node search is triggered\n    useNodeDefStore().nodeSearchService.searchNode('')\n  }, 1000)\n}\n</script>\n\n<style scoped>\n.comfyui-body {\n  grid-template-columns: auto 1fr auto;\n  grid-template-rows: auto 1fr auto;\n}\n\n/**\n  +------------------+------------------+------------------+\n  |                                                        |\n  |  .comfyui-body-                                        |\n  |       top                                              |\n  | (spans all cols)                                       |\n  |                                                        |\n  +------------------+------------------+------------------+\n  |                  |                  |                  |\n  | .comfyui-body-   |   #graph-canvas  | .comfyui-body-   |\n  |      left        |                  |      right       |\n  |                  |                  |                  |\n  |                  |                  |                  |\n  +------------------+------------------+------------------+\n  |                                                        |\n  |  .comfyui-body-                                        |\n  |      bottom                                            |\n  | (spans all cols)                                       |\n  |                                                        |\n  +------------------+------------------+------------------+\n*/\n\n.comfyui-body-top {\n  order: -5;\n  /* Span across all columns */\n  grid-column: 1/-1;\n  /* Position at the first row */\n  grid-row: 1;\n  /* Top menu bar dropdown needs to be above of graph canvas splitter overlay which is z-index: 999 */\n  /* Top menu bar z-index needs to be higher than bottom menu bar z-index as by default\n  pysssss's image feed is located at body-bottom, and it can overlap with the queue button, which\n  is located in body-top. */\n  z-index: 1001;\n  display: flex;\n  flex-direction: column;\n}\n\n.comfyui-body-left {\n  order: -4;\n  /* Position in the first column */\n  grid-column: 1;\n  /* Position below the top element */\n  grid-row: 2;\n  z-index: 10;\n  display: flex;\n}\n\n.graph-canvas-container {\n  width: 100%;\n  height: 100%;\n  order: -3;\n  grid-column: 2;\n  grid-row: 2;\n  position: relative;\n  overflow: clip;\n}\n\n.comfyui-body-right {\n  order: -2;\n  z-index: 10;\n  grid-column: 3;\n  grid-row: 2;\n}\n\n.comfyui-body-bottom {\n  order: 4;\n  /* Span across all columns */\n  grid-column: 1/-1;\n  grid-row: 3;\n  /* Bottom menu bar dropdown needs to be above of graph canvas splitter overlay which is z-index: 999 */\n  z-index: 1000;\n  display: flex;\n  flex-direction: column;\n}\n</style>\n"],"file":"assets/GraphView-BFE9BUl_.js"}